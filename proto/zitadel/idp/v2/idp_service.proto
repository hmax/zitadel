syntax = "proto3";

package zitadel.idp.v2;

import "zitadel/protoc_gen_zitadel/v2/options.proto";
import "zitadel/object/v2/object.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "google/api/visibility.proto";
import "zitadel/idp/v2/idp.proto";

option go_package = "github.com/zitadel/zitadel/pkg/grpc/idp/v2;idp";

service IdentityProviderService {
  option (google.api.api_visibility).restriction = "v2";

  // Get identity provider (IdP) by ID
  //
  // Returns an identity provider (social/enterprise login) by its ID, which can be of the type Google, AzureAD, etc.
  rpc GetIDPByID (GetIDPByIDRequest) returns (GetIDPByIDResponse) {
    option (google.api.http) = {
      get: "/v2/idps/{id}"
    };

    option (zitadel.protoc_gen_zitadel.v2.options) = {
      auth_option: {
        permission: "authenticated"
      }
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Idps";
      responses: {
        key: "200"
        value: {
          description: "OK";
        }
      };
    };
  }
}

message GetIDPByIDRequest {
  string id = 1 [(validate.rules).string = {min_len: 1, max_len: 200}];
}

message GetIDPByIDResponse {
  zitadel.idp.v2.IDP idp = 1;
}
