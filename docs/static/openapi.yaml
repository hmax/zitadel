# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ZITADEL APIs
    version: 0.0.1
paths:
    /:
        post:
            tags:
                - ZITADELDebugEvents
            operationId: ZITADELDebugEvents_CreateDebugEvents
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: aggregateId
                  in: query
                  description: unique identifier for the aggregate we want to push events to.
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Event'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDebugEventsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /actions:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_CreateAction
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateActionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateActionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /actions/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListActions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListActionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListActionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /actions/{id}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetAction
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetActionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateAction
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateActionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateActionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_DeleteAction
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteActionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteActionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /actions/{id}/_deactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_DeactivateAction
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateActionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateActionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /actions/{id}/_reactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ReactivateAction
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReactivateActionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateActionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /aggregates/types/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListAggregateTypes
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListAggregateTypesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAggregateTypesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /domains/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListInstanceDomains
            parameters:
                - name: query.offset
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.asc
                  in: query
                  schema:
                    type: boolean
                - name: sortingColumn
                  in: query
                  description: the field the result is sorted
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInstanceDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /domains/{domain}/_exists:
        post:
            tags:
                - SystemService
            description: Checks if a domain exists
            operationId: SystemService_ExistsDomain
            parameters:
                - name: domain
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExistsDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExistsDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetEmailProvider
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEmailProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListEmailProviders
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListEmailProvidersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmailProvidersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/http:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddEmailProviderHTTP
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddEmailProviderHTTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddEmailProviderHTTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/http/{id}:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateEmailProviderHTTP
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEmailProviderHTTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmailProviderHTTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/smtp:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddEmailProviderSMTP
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddEmailProviderSMTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddEmailProviderSMTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/smtp/_test:
        post:
            tags:
                - AdminService
            operationId: AdminService_TestEmailProviderSMTP
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TestEmailProviderSMTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TestEmailProviderSMTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/smtp/{id}:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateEmailProviderSMTP
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEmailProviderSMTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmailProviderSMTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/smtp/{id}/_test:
        post:
            tags:
                - AdminService
            operationId: AdminService_TestEmailProviderSMTPById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TestEmailProviderSMTPByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TestEmailProviderSMTPByIdResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/smtp/{id}/password:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateEmailProviderSMTPPassword
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEmailProviderSMTPPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEmailProviderSMTPPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/{id}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetEmailProviderById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEmailProviderByIdResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveEmailProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveEmailProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/{id}/_activate:
        post:
            tags:
                - AdminService
            operationId: AdminService_ActivateEmailProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ActivateEmailProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivateEmailProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /email/{id}/_deactivate:
        post:
            tags:
                - AdminService
            operationId: AdminService_DeactivateEmailProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateEmailProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateEmailProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /events/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListEvents
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListEventsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEventsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /events/types/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListEventTypes
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListEventTypesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEventTypesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /export:
        post:
            tags:
                - AdminService
            operationId: AdminService_ExportData
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExportDataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExportDataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /failedevents/_search:
        post:
            tags:
                - SystemService
            description: |-
                Returns event descriptions which cannot be processed.
                 It's possible that some events need some retries.
                 For example if the SMTP-API wasn't able to send an email at the first time
            operationId: SystemService_ListFailedEvents
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListFailedEventsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListFailedEventsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /failedevents/{database}/{viewName}/{failedSequence}:
        delete:
            tags:
                - SystemService
            description: |-
                Deletes the event from failed events view.
                 the event is not removed from the change stream
                 This call is usefull if the system was able to process the event later.
                 e.g. if the second try of sending an email was successful. the first try produced a
                 failed event. You can find out if it worked on the `failure_count`
            operationId: SystemService_RemoveFailedEvent
            parameters:
                - name: database
                  in: path
                  required: true
                  schema:
                    type: string
                - name: viewName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: failedSequence
                  in: path
                  required: true
                  schema:
                    type: string
                - name: instanceId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveFailedEventResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /features/login_default_org:
        put:
            tags:
                - AdminService
            description: |-
                Activates the "LoginDefaultOrg" feature by setting the flag to "true"
                 This is irreversible!
                 Once activated, the login UI will use the settings of the default org (and not from the instance) if not organization context is set
            operationId: AdminService_ActivateFeatureLoginDefaultOrg
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivateFeatureLoginDefaultOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /flows/types/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListFlowTypes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListFlowTypesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /flows/{flowType}/trigger/{triggerType}:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_SetTriggerActions
            parameters:
                - name: flowType
                  in: path
                  description: |-
                    id of the flow type.
                     Following flows are currently allowed:
                     - External Authentication: FLOW_TYPE_EXTERNAL_AUTHENTICATION or 1
                     - Internal Authentication: 3
                     - Complement Token: 2
                     - Complement SAML Response: 4
                  required: true
                  schema:
                    type: string
                - name: triggerType
                  in: path
                  description: "id of the trigger type.\n Following triggers are currently allowed:\n - External Authentication:\n   - Post Authentication: TRIGGER_TYPE_POST_AUTHENTICATION or 1\n   - Pre Creation: TRIGGER_TYPE_PRE_CREATION or 2\n   - Post Creation: TRIGGER_TYPE_POST_CREATION or 3 \n - Internal Authentication:\n   - Post Authentication: TRIGGER_TYPE_POST_AUTHENTICATION or 1\n   - Pre Creation: TRIGGER_TYPE_PRE_CREATION or 2\n   - Post Creation: TRIGGER_TYPE_POST_CREATION or 3 \n - Complement Token:\n   - Pre Userinfo Creation: 4\n   - Pre Access Token Creation: 5\n - Complement SAML Response:\n   - Pre SAML Response Creation: 6"
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetTriggerActionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetTriggerActionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /flows/{type}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetFlow
            parameters:
                - name: type
                  in: path
                  description: id of the flow
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFlowResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /flows/{type}/_clear:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ClearFlow
            parameters:
                - name: type
                  in: path
                  description: id of the flow
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClearFlowResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /flows/{type}/triggers/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListFlowTriggerTypes
            parameters:
                - name: type
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListFlowTriggerTypesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /global/orgs/_by_domain:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetOrgByDomainGlobal
            parameters:
                - name: domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrgByDomainGlobalResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /global/projectorgs/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyProjectOrgs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMyProjectOrgsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyProjectOrgsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /global/users/_by_login_name:
        get:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ListUsers, with LoginNameQuery'
            operationId: ManagementService_GetUserByLoginNameGlobal
            parameters:
                - name: loginName
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserByLoginNameGlobalResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /granted_projects/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListGrantedProjects
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListGrantedProjectsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListGrantedProjectsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /granted_projects/{projectId}/grants/{grantId}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetGrantedProjectByID
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGrantedProjectByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /granted_projects/{projectId}/grants/{grantId}/roles/_search:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_ListGrantedProjectRoles
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: query.offset
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.asc
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListGrantedProjectRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /healthz:
        get:
            tags:
                - SystemService
            description: |-
                Indicates if ZITADEL is running.
                 It respondes as soon as ZITADEL started
            operationId: SystemService_Healthz
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthzResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /iam:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetIAM
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetIAMResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListIDPs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListIDPsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListIDPsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/apple:
        post:
            tags:
                - AdminService
            description: Add a new Apple identity provider on the instance
            operationId: AdminService_AddAppleProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddAppleProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddAppleProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/apple/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing Apple identity provider on the instance
            operationId: AdminService_UpdateAppleProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAppleProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAppleProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/azure:
        post:
            tags:
                - AdminService
            description: Add a new Azure AD identity provider on the instance
            operationId: AdminService_AddAzureADProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddAzureADProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddAzureADProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/azure/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing Azure AD identity provider on the instance
            operationId: AdminService_UpdateAzureADProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAzureADProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAzureADProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/generic_jwt:
        post:
            tags:
                - AdminService
            description: Add a new JWT identity provider on the instance
            operationId: AdminService_AddJWTProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddJWTProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddJWTProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/generic_jwt/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing JWT identity provider on the instance
            operationId: AdminService_UpdateJWTProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateJWTProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateJWTProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/generic_oidc:
        post:
            tags:
                - AdminService
            description: Add a new OIDC identity provider on the instance
            operationId: AdminService_AddGenericOIDCProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddGenericOIDCProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddGenericOIDCProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/generic_oidc/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing OIDC identity provider on the instance
            operationId: AdminService_UpdateGenericOIDCProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGenericOIDCProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGenericOIDCProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/generic_oidc/{id}/_migrate:
        post:
            tags:
                - AdminService
            description: Migrate an existing OIDC identity provider on the instance
            operationId: AdminService_MigrateGenericOIDCProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MigrateGenericOIDCProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MigrateGenericOIDCProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/github:
        post:
            tags:
                - AdminService
            description: Add a new GitHub identity provider on the instance
            operationId: AdminService_AddGitHubProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddGitHubProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddGitHubProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/github/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing GitHub identity provider on the instance
            operationId: AdminService_UpdateGitHubProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGitHubProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGitHubProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/github_es:
        post:
            tags:
                - AdminService
            description: Add a new GitHub Enterprise Server identity provider on the instance
            operationId: AdminService_AddGitHubEnterpriseServerProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddGitHubEnterpriseServerProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddGitHubEnterpriseServerProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/github_es/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing GitHub Enterprise Server identity provider on the instance
            operationId: AdminService_UpdateGitHubEnterpriseServerProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGitHubEnterpriseServerProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGitHubEnterpriseServerProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/gitlab:
        post:
            tags:
                - AdminService
            description: Add a new GitLab identity provider on the instance
            operationId: AdminService_AddGitLabProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddGitLabProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddGitLabProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/gitlab/{id}:
        put:
            tags:
                - ManagementService
            description: Change an existing GitLab identity provider in the organization
            operationId: ManagementService_UpdateGitLabProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGitLabProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGitLabProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - AdminService
            description: Change an existing GitLab identity provider on the instance
            operationId: AdminService_UpdateGitLabProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGitLabProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGitLabProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/gitlab_self_hosted:
        post:
            tags:
                - AdminService
            description: Add a new self hosted GitLab identity provider on the instance
            operationId: AdminService_AddGitLabSelfHostedProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddGitLabSelfHostedProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddGitLabSelfHostedProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/gitlab_self_hosted/{id}:
        put:
            tags:
                - ManagementService
            description: Change an existing self hosted GitLab identity provider in the organization
            operationId: ManagementService_UpdateGitLabSelfHostedProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGitLabSelfHostedProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGitLabSelfHostedProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - AdminService
            description: Change an existing self hosted GitLab identity provider on the instance
            operationId: AdminService_UpdateGitLabSelfHostedProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGitLabSelfHostedProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGitLabSelfHostedProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/google:
        post:
            tags:
                - AdminService
            description: Add a new Google identity provider on the instance
            operationId: AdminService_AddGoogleProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddGoogleProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddGoogleProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/google/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing Google identity provider on the instance
            operationId: AdminService_UpdateGoogleProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGoogleProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGoogleProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/jwt:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddJWTIDP
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddJWTIDPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddJWTIDPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/ldap:
        post:
            tags:
                - AdminService
            description: Add a new LDAP identity provider on the instance
            operationId: AdminService_AddLDAPProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddLDAPProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddLDAPProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/ldap/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing LDAP identity provider on the instance
            operationId: AdminService_UpdateLDAPProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateLDAPProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateLDAPProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/oauth:
        post:
            tags:
                - AdminService
            description: Add a new OAuth2 identity provider on the instance
            operationId: AdminService_AddGenericOAuthProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddGenericOAuthProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddGenericOAuthProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/oauth/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing OAuth2 identity provider on the instance
            operationId: AdminService_UpdateGenericOAuthProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGenericOAuthProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGenericOAuthProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/oidc:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddOIDCIDP
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOIDCIDPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOIDCIDPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/saml:
        post:
            tags:
                - AdminService
            description: Add a new SAML identity provider on the instance
            operationId: AdminService_AddSAMLProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddSAMLProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddSAMLProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/saml/{id}:
        put:
            tags:
                - AdminService
            description: Change an existing SAML identity provider on the instance
            operationId: AdminService_UpdateSAMLProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSAMLProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSAMLProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/saml/{id}/_generate_certificate:
        post:
            tags:
                - AdminService
            description: Regenerate certificate for an existing SAML identity provider in the organization
            operationId: AdminService_RegenerateSAMLProviderCertificate
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegenerateSAMLProviderCertificateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegenerateSAMLProviderCertificateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/templates/_search:
        post:
            tags:
                - AdminService
            description: |-
                Returns all identity providers, which match the query
                 Limit should always be set, there is a default limit set by the service
            operationId: AdminService_ListProviders
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListProvidersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProvidersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/templates/{id}:
        get:
            tags:
                - AdminService
            description: Returns an identity provider of the instance
            operationId: AdminService_GetProviderByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProviderByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            description: |-
                Remove an identity provider
                 Will remove all linked providers of this configuration on the users
            operationId: AdminService_DeleteProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/{idpId}:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateIDP
            parameters:
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateIDPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateIDPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveIDP
            parameters:
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveIDPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/{idpId}/_deactivate:
        post:
            tags:
                - AdminService
            operationId: AdminService_DeactivateIDP
            parameters:
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateIDPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/{idpId}/_reactivate:
        post:
            tags:
                - AdminService
            operationId: AdminService_ReactivateIDP
            parameters:
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateIDPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/{idpId}/jwt_config:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateIDPJWTConfig
            parameters:
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateIDPJWTConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateIDPJWTConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/{idpId}/oidc_config:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateIDPOIDCConfig
            parameters:
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateIDPOIDCConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateIDPOIDCConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /idps/{id}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetIDPByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetIDPByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /import:
        post:
            tags:
                - AdminService
            description: Imports data into an instance and creates different objects
            operationId: AdminService_ImportData
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ImportDataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ImportDataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances:
        post:
            tags:
                - SystemService
            description: |-
                Deprecated: Use CreateInstance instead
                 Creates a new instance with all needed setup data
                 This might take some time
            operationId: SystemService_AddInstance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddInstanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddInstanceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/_create:
        post:
            tags:
                - SystemService
            description: |-
                Creates a new instance with all needed setup data
                 This might take some time
            operationId: SystemService_CreateInstance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateInstanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateInstanceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/_search:
        post:
            tags:
                - SystemService
            description: Returns a list of ZITADEL instances
            operationId: SystemService_ListInstances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListInstancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInstancesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/limits/_bulk:
        put:
            tags:
                - SystemService
            description: Sets many instance level limits
            operationId: SystemService_BulkSetLimits
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkSetLimitsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BulkSetLimitsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/me:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetMyInstance
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyInstanceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}:
        get:
            tags:
                - SystemService
            description: Returns the detail of an instance
            operationId: SystemService_GetInstance
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetInstanceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - SystemService
            description: Updates name of an existing instance
            operationId: SystemService_UpdateInstance
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateInstanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateInstanceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - SystemService
            description: |-
                Removes an instance
                 This might take some time
            operationId: SystemService_RemoveInstance
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveInstanceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}/domains:
        post:
            tags:
                - SystemService
            description: Adds a domain to an instance
            operationId: SystemService_AddDomain
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}/domains/_search:
        post:
            tags:
                - SystemService
            description: |-
                Returns the custom domains of an instance
                Checks if a domain exists
                 Deprecated: Use the Admin APIs ListInstanceDomains on the admin API instead
            operationId: SystemService_ListDomains
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListDomainsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}/domains/_set_primary:
        post:
            tags:
                - SystemService
            description: Sets the primary domain of an instance
            operationId: SystemService_SetPrimaryDomain
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPrimaryDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetPrimaryDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}/domains/{domain}:
        delete:
            tags:
                - SystemService
            description: Removes the domain of an instance
            operationId: SystemService_RemoveDomain
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: domain
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}/features/{featureId}:
        put:
            tags:
                - SystemService
            description: Set a feature flag on an instance
            operationId: SystemService_SetInstanceFeature
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: featureId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetInstanceFeatureRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetInstanceFeatureResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}/limits:
        put:
            tags:
                - SystemService
            description: Sets instance level limits
            operationId: SystemService_SetLimits
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetLimitsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetLimitsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - SystemService
            description: Resets instance level limits
            operationId: SystemService_ResetLimits
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetLimitsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}/members/_search:
        post:
            tags:
                - SystemService
            description: |-
                Returns all instance members matching the request
                 all queries need to match (ANDed)
                 Deprecated: Use the Admin APIs ListIAMMembers instead
            operationId: SystemService_ListIAMMembers
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListIAMMembersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListIAMMembersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}/quotas:
        put:
            tags:
                - SystemService
            description: |-
                Sets quota configuration properties
                 Creates a new quota if it doesn't exist for the specified unit
            operationId: SystemService_SetQuota
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetQuotaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetQuotaResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - SystemService
            description: |-
                Creates a new quota
                 Returns an error if the quota already exists for the specified unit
                 Deprecated: use SetQuota instead
            operationId: SystemService_AddQuota
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddQuotaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddQuotaResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /instances/{instanceId}/quotas/{unit}:
        delete:
            tags:
                - SystemService
            description: Removes a quota
            operationId: SystemService_RemoveQuota
            parameters:
                - name: instanceId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: unit
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveQuotaResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /languages:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetSupportedLanguages
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSupportedLanguagesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /languages/allowed:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetAllowedLanguages
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllowedLanguagesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /languages/default:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultLanguage
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultLanguageResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /languages/default/{language}:
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultLanguage
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultLanguageResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /members:
        post:
            tags:
                - AdminService
            description: |-
                Adds a user to the membership list of ZITADEL with the given roles
                 undefined roles will be dropped
            operationId: AdminService_AddIAMMember
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddIAMMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddIAMMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /members/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListIAMMembers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListIAMMembersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListIAMMembersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /members/roles/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListIAMMemberRoles
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListIAMMemberRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /members/{userId}:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateIAMMember
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateIAMMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateIAMMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveIAMMember
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveIAMMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /memberships/me/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyMemberships
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMyMembershipsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyMembershipsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /metadata/_bulk:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_BulkSetOrgMetadata
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkSetOrgMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BulkSetOrgMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_BulkRemoveOrgMetadata
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkRemoveOrgMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BulkRemoveOrgMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /metadata/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListOrgMetadata
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListOrgMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrgMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /metadata/{key}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetOrgMetadata
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrgMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ManagementService
            operationId: ManagementService_SetOrgMetadata
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetOrgMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetOrgMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveOrgMetadata
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOrgMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /milestones/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListMilestones
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMilestonesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMilestonesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /notification/provider/file:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetFileSystemNotificationProvider
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFileSystemNotificationProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /notification/provider/log:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetLogNotificationProvider
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLogNotificationProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddOrg
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOrgRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/_is_unique:
        get:
            tags:
                - AdminService
            operationId: AdminService_IsOrgUnique
            parameters:
                - name: name
                  in: query
                  schema:
                    type: string
                - name: domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IsOrgUniqueResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListOrgs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListOrgsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrgsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/_setup:
        post:
            tags:
                - AdminService
            operationId: AdminService_SetUpOrg
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetUpOrgRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetUpOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/default:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultOrg
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/default/{orgId}:
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultOrg
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetMyOrg
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateOrg
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateOrgRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveOrg
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/_deactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_DeactivateOrg
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateOrgRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/_reactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ReactivateOrg
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReactivateOrgRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/changes/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListOrgChanges
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListOrgChangesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrgChangesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/domains:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddOrgDomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOrgDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOrgDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/domains/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListOrgDomains
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListOrgDomainsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrgDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/domains/{domain}:
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveOrgDomain
            parameters:
                - name: domain
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOrgDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/domains/{domain}/_set_primary:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_SetPrimaryOrgDomain
            parameters:
                - name: domain
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetPrimaryOrgDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/domains/{domain}/validation/_generate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_GenerateOrgDomainValidation
            parameters:
                - name: domain
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateOrgDomainValidationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateOrgDomainValidationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/domains/{domain}/validation/_validate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ValidateOrgDomain
            parameters:
                - name: domain
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ValidateOrgDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ValidateOrgDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/members:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddOrgMember
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOrgMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOrgMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/members/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListOrgMembers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListOrgMembersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrgMembersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/me/members/{userId}:
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateOrgMember
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateOrgMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrgMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveOrgMember
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOrgMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/members/roles/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListOrgMemberRoles
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrgMemberRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/{id}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetOrgByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrgByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/{orgId}:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveOrg
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOrgResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/{orgId}/policies/domain:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomDomainPolicy
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomDomainPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateCustomDomainPolicy
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCustomDomainPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCustomDomainPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - AdminService
            operationId: AdminService_AddCustomDomainPolicy
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCustomDomainPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCustomDomainPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomDomainPolicyToDefault
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomDomainPolicyToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orgs/{orgId}/policies/orgiam:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomOrgIAMPolicy
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomOrgIAMPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateCustomOrgIAMPolicy
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCustomOrgIAMPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCustomOrgIAMPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - AdminService
            operationId: AdminService_AddCustomOrgIAMPolicy
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCustomOrgIAMPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCustomOrgIAMPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomOrgIAMPolicyToDefault
            parameters:
                - name: orgId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomOrgIAMPolicyToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /permissions/me/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyProjectPermissions
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyProjectPermissionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /permissions/zitadel/me/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyZitadelPermissions
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyZitadelPermissionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/default/label:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetDefaultLabelPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultLabelPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/default/lockout:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetDefaultLockoutPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultLockoutPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/default/login:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetDefaultLoginPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/default/notification:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetDefaultNotificationPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultNotificationPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/default/password/age:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetDefaultPasswordAgePolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultPasswordAgePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/default/password/complexity:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetDefaultPasswordComplexityPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultPasswordComplexityPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/default/privacy:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetDefaultPrivacyPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultPrivacyPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/domain:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDomainPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDomainPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateDomainPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateDomainPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateDomainPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/label:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetMyLabelPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyLabelPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateLabelPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateLabelPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateLabelPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddCustomLabelPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCustomLabelPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCustomLabelPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_ResetLabelPolicyToDefault
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetLabelPolicyToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/label/_activate:
        post:
            tags:
                - AdminService
            operationId: AdminService_ActivateLabelPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ActivateLabelPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivateLabelPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/label/_preview:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetPreviewLabelPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPreviewLabelPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/label/font:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveLabelPolicyFont
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveLabelPolicyFontResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/label/icon:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveLabelPolicyIcon
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveLabelPolicyIconResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/label/icon_dark:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveLabelPolicyIconDark
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveLabelPolicyIconDarkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/label/logo:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveLabelPolicyLogo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveLabelPolicyLogoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/label/logo_dark:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveLabelPolicyLogoDark
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveLabelPolicyLogoDarkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/lockout:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetLockoutPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLockoutPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateCustomLockoutPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCustomLockoutPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCustomLockoutPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddCustomLockoutPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCustomLockoutPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCustomLockoutPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_ResetLockoutPolicyToDefault
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetLockoutPolicyToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetMyLoginPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateLoginPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateLoginPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddCustomLoginPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCustomLoginPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCustomLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_ResetLoginPolicyToDefault
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetLoginPolicyToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/auth_factors/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListLoginPolicyMultiFactors
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListLoginPolicyMultiFactorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/idps:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddIDPToLoginPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddIDPToLoginPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddIDPToLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/idps/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListLoginPolicyIDPs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListLoginPolicyIDPsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListLoginPolicyIDPsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/idps/{idpId}:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveIDPFromLoginPolicy
            parameters:
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveIDPFromLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/multi_factors:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddMultiFactorToLoginPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMultiFactorToLoginPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMultiFactorToLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/multi_factors/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListLoginPolicyMultiFactors
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListLoginPolicyMultiFactorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/multi_factors/{type}:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveMultiFactorFromLoginPolicy
            parameters:
                - name: type
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMultiFactorFromLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/second_factors:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddSecondFactorToLoginPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddSecondFactorToLoginPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddSecondFactorToLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/second_factors/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListLoginPolicySecondFactors
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListLoginPolicySecondFactorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/login/second_factors/{type}:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveSecondFactorFromLoginPolicy
            parameters:
                - name: type
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveSecondFactorFromLoginPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/notification:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetNotificationPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetNotificationPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateNotificationPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateNotificationPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateNotificationPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - AdminService
            operationId: AdminService_AddNotificationPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddNotificationPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddNotificationPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_ResetNotificationPolicyToDefault
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetNotificationPolicyToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/orgiam:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetOrgIAMPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrgIAMPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateOrgIAMPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateOrgIAMPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrgIAMPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/password/age:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetPasswordAgePolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasswordAgePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdatePasswordAgePolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePasswordAgePolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePasswordAgePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddCustomPasswordAgePolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCustomPasswordAgePolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCustomPasswordAgePolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_ResetPasswordAgePolicyToDefault
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetPasswordAgePolicyToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/password/complexity:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetPasswordComplexityPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasswordComplexityPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdatePasswordComplexityPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePasswordComplexityPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePasswordComplexityPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddCustomPasswordComplexityPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCustomPasswordComplexityPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCustomPasswordComplexityPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_ResetPasswordComplexityPolicyToDefault
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetPasswordComplexityPolicyToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/password/lockout:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateLockoutPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateLockoutPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateLockoutPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/passwords/complexity:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetMyPasswordComplexityPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyPasswordComplexityPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/privacy:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetMyPrivacyPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyPrivacyPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdatePrivacyPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePrivacyPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePrivacyPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddCustomPrivacyPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddCustomPrivacyPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddCustomPrivacyPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_ResetPrivacyPolicyToDefault
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetPrivacyPolicyToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /policies/security:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetSecurityPolicy
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSecurityPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetSecurityPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetSecurityPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetSecurityPolicyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projectgrants/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListAllProjectGrants
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListAllProjectGrantsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAllProjectGrantsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddProject
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddProjectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListProjects
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListProjectsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/grants/members/roles/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListProjectGrantMemberRoles
            parameters:
                - name: query.offset
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.asc
                  in: query
                  schema:
                    type: boolean
                - name: result
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectGrantMemberRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/members/roles/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListProjectMemberRoles
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectMemberRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{id}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetProjectByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProjectByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateProject
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateProjectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveProject
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{id}/_deactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_DeactivateProject
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateProjectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{id}/_reactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ReactivateProject
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReactivateProjectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListApps
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListAppsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAppsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/api:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddAPIApp
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddAPIAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddAPIAppResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/oidc:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddOIDCApp
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOIDCAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOIDCAppResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/saml:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddSAMLApp
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddSAMLAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddSAMLAppResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetAppByID
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAppByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            description: Changes application
            operationId: ManagementService_UpdateApp
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAppResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveApp
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveAppResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/_deactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_DeactivateApp
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateAppResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/_reactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ReactivateApp
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReactivateAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateAppResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/api_config:
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateAPIAppConfig
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAPIAppConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAPIAppConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/api_config/_generate_client_secret:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_RegenerateAPIClientSecret
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegenerateAPIClientSecretRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegenerateAPIClientSecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/changes/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListAppChanges
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: query.sequence
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.asc
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAppChangesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/keys:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddAppKey
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddAppKeyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddAppKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/keys/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListAppKeys
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListAppKeysRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAppKeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/keys/{keyId}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetAppKey
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: keyId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAppKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveAppKey
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: keyId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveAppKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/oidc_config:
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateOIDCAppConfig
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateOIDCAppConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOIDCAppConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/oidc_config/_generate_client_secret:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_RegenerateOIDCClientSecret
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegenerateOIDCClientSecretRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegenerateOIDCClientSecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/apps/{appId}/saml_config:
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateSAMLAppConfig
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: appId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSAMLAppConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSAMLAppConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/changes/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListProjectChanges
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: query.sequence
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.asc
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectChangesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/grants:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddProjectGrant
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddProjectGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddProjectGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/grants/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListProjectGrants
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListProjectGrantsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectGrantsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/grants/{grantId}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetProjectGrantByID
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProjectGrantByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateProjectGrant
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateProjectGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateProjectGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveProjectGrant
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveProjectGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/grants/{grantId}/_deactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_DeactivateProjectGrant
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateProjectGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateProjectGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/grants/{grantId}/_reactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ReactivateProjectGrant
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReactivateProjectGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateProjectGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/grants/{grantId}/changes/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListProjectGrantChanges
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: query.sequence
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.asc
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectGrantChangesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/grants/{grantId}/members:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddProjectGrantMember
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddProjectGrantMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddProjectGrantMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/grants/{grantId}/members/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListProjectGrantMembers
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListProjectGrantMembersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectGrantMembersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/grants/{grantId}/members/{userId}:
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateProjectGrantMember
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateProjectGrantMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateProjectGrantMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveProjectGrantMember
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveProjectGrantMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/members:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddProjectMember
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddProjectMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddProjectMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/members/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListProjectMembers
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListProjectMembersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectMembersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/members/{userId}:
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateProjectMember
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateProjectMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateProjectMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveProjectMember
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveProjectMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/roles:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddProjectRole
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddProjectRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddProjectRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/roles/_bulk:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_BulkAddProjectRoles
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkAddProjectRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BulkAddProjectRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/roles/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListProjectRoles
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListProjectRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProjectRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /projects/{projectId}/roles/{roleKey}:
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateProjectRole
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: roleKey
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateProjectRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateProjectRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveProjectRole
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: roleKey
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveProjectRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/actions/executions:
        put:
            tags:
                - ZITADELActions
            description: |-
                Sets an execution to call a target or include the targets of another execution.

                 Setting an empty list of targets will remove all targets from the execution, making it a noop.
            operationId: ZITADELActions_SetExecution
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetExecutionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetExecutionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/actions/executions/_search:
        post:
            tags:
                - ZITADELActions
            description: |-
                Search executions

                 Search all matching executions. By default all executions of the instance are returned that have at least one execution target.
                 Make sure to include a limit and sorting for pagination.
            operationId: ZITADELActions_SearchExecutions
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: query.offset
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.desc
                  in: query
                  description: If desc is true, the result is sorted by in descending order. Beware that if desc is true or the sorting column is not the creation date, the pagination results might be inconsistent.
                  schema:
                    type: boolean
                - name: sortingColumn
                  in: query
                  description: The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
                  schema:
                    type: integer
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExecutionSearchFilter'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchExecutionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/actions/executions/functions:
        get:
            tags:
                - ZITADELActions
            description: |-
                List all available functions

                 List all available functions which can be used as condition for executions.
            operationId: ZITADELActions_ListExecutionFunctions
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListExecutionFunctionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/actions/executions/methods:
        get:
            tags:
                - ZITADELActions
            description: |-
                List all available methods

                 List all available methods which can be used as condition for executions.
            operationId: ZITADELActions_ListExecutionMethods
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListExecutionMethodsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/actions/executions/services:
        get:
            tags:
                - ZITADELActions
            description: |-
                List all available service

                 List all available services which can be used as condition for executions.
            operationId: ZITADELActions_ListExecutionServices
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListExecutionServicesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/actions/targets:
        post:
            tags:
                - ZITADELActions
            description: |-
                Create a target

                 Create a new target, which can be used in executions.
            operationId: ZITADELActions_CreateTarget
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Target'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTargetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/actions/targets/_search:
        post:
            tags:
                - ZITADELActions
            description: |-
                Search targets

                 Search all matching targets. By default all targets of the instance are returned.
                 Make sure to include a limit and sorting for pagination.
            operationId: ZITADELActions_SearchTargets
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: query.offset
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.desc
                  in: query
                  description: If desc is true, the result is sorted by in descending order. Beware that if desc is true or the sorting column is not the creation date, the pagination results might be inconsistent.
                  schema:
                    type: boolean
                - name: sortingColumn
                  in: query
                  description: The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
                  schema:
                    type: integer
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TargetSearchFilter'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchTargetsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/actions/targets/{id}:
        get:
            tags:
                - ZITADELActions
            description: |-
                Target by ID

                 Returns the target identified by the requested ID.
            operationId: ZITADELActions_GetTarget
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTargetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ZITADELActions
            description: |-
                Delete a target

                 Delete an existing target. This will remove it from any configured execution as well.
            operationId: ZITADELActions_DeleteTarget
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTargetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ZITADELActions
            description: |-
                Patch a target

                 Patch an existing target.
            operationId: ZITADELActions_PatchTarget
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PatchTarget'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PatchTargetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/idp_intents:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Start an IDP authentication intent

                 Start a new authentication intent on configured identity provider (IDP) for external login, registration or linking.
            operationId: ZITADELUsers_StartIdentityProviderIntent
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StartIdentityProviderIntentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StartIdentityProviderIntentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/idp_intents/{idpIntentId}:
        get:
            tags:
                - ZITADELUsers
            description: |-
                Get the information of the IDP authentication intent

                 Get the information returned by the identity provider (IDP) for registration or updating an existing user with new information.
            operationId: ZITADELUsers_GetIdentityProviderIntent
            parameters:
                - name: idpIntentId
                  in: path
                  description: ID of the identity provider (IDP) intent, previously returned on the success response of the start identity provider intent.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
                - name: idpIntentToken
                  in: query
                  description: Token of the identity provider (IDP) intent, previously returned on the success response of the start identity provider intent.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetIdentityProviderIntentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/user_schemas:
        post:
            tags:
                - ZITADELUserSchemas
            description: |-
                Create a user schema

                 Create the first revision of a new user schema. The schema can then be used on users to store and validate their data.
            operationId: ZITADELUserSchemas_CreateUserSchema
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserSchema'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserSchemaResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/user_schemas/_search:
        post:
            tags:
                - ZITADELUserSchemas
            description: |-
                Search user schemas

                 Search all matching user schemas. By default, we will return all user schema of your instance. Make sure to include a limit and sorting for pagination.
            operationId: ZITADELUserSchemas_SearchUserSchemas
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: query.offset
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.desc
                  in: query
                  description: If desc is true, the result is sorted by in descending order. Beware that if desc is true or the sorting column is not the creation date, the pagination results might be inconsistent.
                  schema:
                    type: boolean
                - name: sortingColumn
                  in: query
                  description: The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
                  schema:
                    type: integer
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchFilter'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchUserSchemasResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/user_schemas/{id}:
        get:
            tags:
                - ZITADELUserSchemas
            description: |-
                User schema by ID

                 Returns the user schema identified by the requested ID.
            operationId: ZITADELUserSchemas_GetUserSchema
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the schema.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserSchemaResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ZITADELUserSchemas
            description: |-
                Delete a user schema

                 Delete an existing user schema. This operation is only allowed if there are no associated users to it.
            operationId: ZITADELUserSchemas_DeleteUserSchema
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the schema.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserSchemaResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ZITADELUserSchemas
            description: |-
                Patch a user schema

                 Patch an existing user schema to a new revision. Users based on the current revision will not be affected until they are updated.
            operationId: ZITADELUserSchemas_PatchUserSchema
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the schema.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PatchUserSchema'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PatchUserSchemaResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/user_schemas/{id}/_deactivate:
        post:
            tags:
                - ZITADELUserSchemas
            description: |-
                Deactivate a user schema

                 Deactivate an existing user schema and change it into a read-only state. Users based on this schema cannot be updated anymore, but are still able to authenticate.
            operationId: ZITADELUserSchemas_DeactivateUserSchema
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the schema.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateUserSchemaResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/user_schemas/{id}/_reactivate:
        post:
            tags:
                - ZITADELUserSchemas
            description: |-
                Reactivate a user schema

                 Reactivate an previously deactivated user schema and change it into an active state again.
            operationId: ZITADELUserSchemas_ReactivateUserSchema
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the schema.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateUserSchemaResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Create a user

                 Create a new user with an optional data schema.
            operationId: ZITADELUsers_CreateUser
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUser'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/_search:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Search users

                 Search all matching users. By default, we will return all users of your instance.
                 Make sure to include a limit and sorting for pagination.
            operationId: ZITADELUsers_SearchUsers
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: query.offset
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.desc
                  in: query
                  description: If desc is true, the result is sorted by in descending order. Beware that if desc is true or the sorting column is not the creation date, the pagination results might be inconsistent.
                  schema:
                    type: boolean
                - name: sortingColumn
                  in: query
                  description: the field the result is sorted.
                  schema:
                    type: integer
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchFilter'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}:
        get:
            tags:
                - ZITADELUsers
            description: |-
                User by ID

                 Returns the user identified by the requested ID.
            operationId: ZITADELUsers_GetUser
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ZITADELUsers
            description: |-
                Delete a user

                 Delete an existing user and change the state to 'deleted'.
                 The user will be able to log in anymore.
            operationId: ZITADELUsers_DeleteUser
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ZITADELUsers
            description: |-
                Patch a user

                 Patch an existing user with data based on a user schema.
            operationId: ZITADELUsers_PatchUser
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PatchUser'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PatchUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/_activate:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Activate a user

                 Activate a previously deactivated user and change the state to 'active'.
                 The user will be able to log in again.

                 The endpoint returns an error if the user is not in the state 'deactivated'.
            operationId: ZITADELUsers_ActivateUser
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/_deactivate:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Deactivate a user

                 Deactivate an existing user and change the state 'deactivated'.
                 The user will not be able to log in anymore.
                 Use deactivate user when the user should not be able to use the account anymore,
                 but you still need access to the user data.

                 The endpoint returns an error if the user is already in the state 'deactivated'.
            operationId: ZITADELUsers_DeactivateUser
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/_lock:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Lock a user

                 Lock an existing user and change the state 'locked'.
                 The user will not be able to log in anymore.
                 Use lock user when the user should temporarily not be able to log in
                 because of an event that happened (wrong password, etc.)

                 The endpoint returns an error if the user is already in the state 'locked'.
            operationId: ZITADELUsers_LockUser
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LockUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/_unlock:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Unlock a user

                 Unlock a previously locked user and change the state to 'active'.
                 The user will be able to log in again.

                 The endpoint returns an error if the user is not in the state 'locked'.
            operationId: ZITADELUsers_UnlockUser
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnlockUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/email:
        put:
            tags:
                - ZITADELUsers
            description: |-
                Set contact email

                 Add or update the contact email address of a user.
                 If the email is not passed as verified, a verification code will be generated,
                 which can be either returned or will be sent to the user by email.
            operationId: ZITADELUsers_SetContactEmail
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetEmail'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetContactEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/email/_resend:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Resend the contact email code

                 Resend the email with the verification code for the contact email address.
            operationId: ZITADELUsers_ResendContactEmailCode
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendContactEmailCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendContactEmailCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/email/_verify:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Verify the contact email

                 Verify the contact email with the provided code.
            operationId: ZITADELUsers_VerifyContactEmail
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyContactEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/idps:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Add an IDP authenticator to a user

                 Add a new identity provider (IDP) authenticator to an existing user.
                 This will allow the user to authenticate with the provided IDP.
            operationId: ZITADELUsers_AddIDPAuthenticator
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/IDPAuthenticator'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddIDPAuthenticatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/idps/{idpId}:
        delete:
            tags:
                - ZITADELUsers
            description: |-
                Remove an IDP authenticator

                 Remove an existing identity provider (IDP) authenticator from a user, so it cannot be used for authentication anymore.
            operationId: ZITADELUsers_RemoveIDPAuthenticator
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: idpId
                  in: path
                  description: unique identifier of the identity provider (IDP) authenticator.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveIDPAuthenticatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/otp_email:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Add a OTP Email authenticator

                 Add a new one-time password (OTP) Email authenticator to a user.
                 If the email is not passed as verified, a verification code will be generated,
                 which can be either returned or will be sent to the user by email.
            operationId: ZITADELUsers_AddOTPEmailAuthenticator
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetEmail'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOTPEmailAuthenticatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/otp_email/{otpEmailId}:
        delete:
            tags:
                - ZITADELUsers
            description: |-
                Remove a OTP Email authenticator

                 Remove an existing one-time password (OTP) Email authenticator from a user, so it cannot be used for authentication anymore.
            operationId: ZITADELUsers_RemoveOTPEmailAuthenticator
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: otpEmailId
                  in: path
                  description: unique identifier of the OTP Email authenticator.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOTPEmailAuthenticatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/otp_email/{otpEmailId}/_verify:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Verify OTP Email registration

                 Verify the OTP Email registration with the provided code.
            operationId: ZITADELUsers_VerifyOTPEmailRegistration
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: otpEmailId
                  in: path
                  description: unique identifier of the OTP Email registration, which was returned in the add OTP Email.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyOTPEmailRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/otp_sms:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Add a OTP SMS authenticator

                 Add a new one-time password (OTP) SMS authenticator to a user.
                 If the phone is not passed as verified, a verification code will be generated,
                 which can be either returned or will be sent to the user by SMS.
            operationId: ZITADELUsers_AddOTPSMSAuthenticator
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPhone'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOTPSMSAuthenticatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/otp_sms/{otpSmsId}:
        delete:
            tags:
                - ZITADELUsers
            description: |-
                Remove a OTP SMS authenticator

                 Remove an existing one-time password (OTP) SMS authenticator from a user, so it cannot be used for authentication anymore.
            operationId: ZITADELUsers_RemoveOTPSMSAuthenticator
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: otpSmsId
                  in: path
                  description: unique identifier of the OTP SMS authenticator.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOTPSMSAuthenticatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/otp_sms/{otpSmsId}/_verify:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Verify OTP SMS registration

                 Verify the OTP SMS registration with the provided code.
            operationId: ZITADELUsers_VerifyOTPSMSRegistration
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: otpSmsId
                  in: path
                  description: unique identifier of the OTP SMS registration, which was returned in the add OTP SMS.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyOTPSMSRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/password:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Set a password

                 Add, update or reset a user's password with either a verification code or the current password.
            operationId: ZITADELUsers_SetPassword
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPassword'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/password/_reset:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Request password reset

                 Request a code to be able to set a new password.
            operationId: ZITADELUsers_RequestPasswordReset
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestPasswordResetRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RequestPasswordResetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/phone:
        put:
            tags:
                - ZITADELUsers
            description: |-
                Set contact phone

                 Add or update the contact phone number of a user.
                 If the phone is not passed as verified, a verification code will be generated,
                 which can be either returned or will be sent to the user by SMS.
            operationId: ZITADELUsers_SetContactPhone
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPhone'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetContactPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/phone/_resend:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Resend the contact phone code

                 Resend the phone with the verification code for the contact phone number.
            operationId: ZITADELUsers_ResendContactPhoneCode
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendContactPhoneCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendContactPhoneCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/phone/_verify:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Verify the contact phone

                 Verify the contact phone with the provided code.
            operationId: ZITADELUsers_VerifyContactPhone
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyContactPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/totp:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Start a TOTP registration

                 Start the registration of a new time-based one-time password (TOTP) generator for a user.
                 As a response a secret is returned, which is used to initialize a TOTP app or device.
            operationId: ZITADELUsers_StartTOTPRegistration
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StartTOTPRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/totp/{totpId}:
        delete:
            tags:
                - ZITADELUsers
            description: |-
                Remove a TOTP authenticator

                 Remove an existing time-based one-time password (TOTP) authenticator from a user, so it cannot be used for authentication anymore.
            operationId: ZITADELUsers_RemoveTOTPAuthenticator
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: totpId
                  in: path
                  description: unique identifier of the TOTP authenticator.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveTOTPAuthenticatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/totp/{totpId}/_verify:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Verify a TOTP registration

                 Verify the time-based one-time password (TOTP) registration with the generated code.
            operationId: ZITADELUsers_VerifyTOTPRegistration
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: totpId
                  in: path
                  description: unique identifier of the TOTP registration, which was returned in the start TOTP registration.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyTOTPRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/username:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Add a username

                 Add a new unique username to a user. The username will be used to identify the user on authentication.
            operationId: ZITADELUsers_AddUsername
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetUsername'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddUsernameResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/username/{usernameId}:
        delete:
            tags:
                - ZITADELUsers
            description: |-
                Remove a username

                 Remove an existing username of a user, so it cannot be used for authentication anymore.
            operationId: ZITADELUsers_RemoveUsername
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: usernameId
                  in: path
                  description: unique identifier of the username.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveUsernameResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/webauthn:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Start a WebAuthN registration

                 Start the registration of a new WebAuthN device (e.g. Passkeys) for a user.
                 As a response the public key credential creation options are returned,
                 which are used to verify the device.
            operationId: ZITADELUsers_StartWebAuthNRegistration
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StartWebAuthNRegistration'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StartWebAuthNRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/webauthn/registration_link:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Create a WebAuthN registration link

                 Create a link, which includes a code, that can either be returned or directly sent to the user.
                 The code will allow the user to start a new WebAuthN registration.
            operationId: ZITADELUsers_CreateWebAuthNRegistrationLink
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateWebAuthNRegistrationLinkRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateWebAuthNRegistrationLinkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/webauthn/{webAuthNId}:
        delete:
            tags:
                - ZITADELUsers
            description: |-
                Remove a WebAuthN authenticator

                 Remove an existing WebAuthN authenticator from a user, so it cannot be used for authentication anymore.
            operationId: ZITADELUsers_RemoveWebAuthNAuthenticator
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: webAuthNId
                  in: path
                  description: unique identifier of the WebAuthN authenticator.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveWebAuthNAuthenticatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/users/{id}/webauthn/{webAuthNId}/_verify:
        post:
            tags:
                - ZITADELUsers
            description: |-
                Verify a WebAuthN registration

                 Verify the WebAuthN registration started by StartWebAuthNRegistration with the public key credential.
            operationId: ZITADELUsers_VerifyWebAuthNRegistration
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the user.
                  required: true
                  schema:
                    type: string
                - name: webAuthNId
                  in: path
                  description: unique identifier of the WebAuthN registration, which was returned in the start webauthn registration.
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
                - name: organization.orgId
                  in: query
                  schema:
                    type: string
                - name: organization.orgDomain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyWebAuthNRegistration'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyWebAuthNRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/web_keys:
        get:
            tags:
                - ZITADELWebKeys
            operationId: ZITADELWebKeys_ListWebKeys
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListWebKeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ZITADELWebKeys
            operationId: ZITADELWebKeys_CreateWebKey
            parameters:
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/WebKey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateWebKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/web_keys/{id}:
        delete:
            tags:
                - ZITADELWebKeys
            operationId: ZITADELWebKeys_DeleteWebKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteWebKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /resources/v3alpha/web_keys/{id}/_activate:
        post:
            tags:
                - ZITADELWebKeys
            operationId: ZITADELWebKeys_ActivateWebKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: instance.id
                  in: query
                  schema:
                    type: string
                - name: instance.domain
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivateWebKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /restrictions:
        get:
            tags:
                - AdminService
            description: Gets restrictions
            operationId: AdminService_GetRestrictions
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRestrictionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            description: Sets restrictions
            operationId: AdminService_SetRestrictions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetRestrictionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetRestrictionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /secretgenerators/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListSecretGenerators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListSecretGeneratorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSecretGeneratorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /secretgenerators/{generatorType}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetSecretGenerator
            parameters:
                - name: generatorType
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSecretGeneratorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateSecretGenerator
            parameters:
                - name: generatorType
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSecretGeneratorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSecretGeneratorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /settings/oidc:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetOIDCSettings
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOIDCSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateOIDCSettings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateOIDCSettingsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOIDCSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - AdminService
            operationId: AdminService_AddOIDCSettings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOIDCSettingsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOIDCSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListSMSProviders
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListSMSProvidersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSMSProvidersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms/http:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddSMSProviderHTTP
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddSMSProviderHTTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddSMSProviderHTTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms/http/{id}:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateSMSProviderHTTP
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSMSProviderHTTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSMSProviderHTTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms/twilio:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddSMSProviderTwilio
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddSMSProviderTwilioRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddSMSProviderTwilioResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms/twilio/{id}:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateSMSProviderTwilio
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSMSProviderTwilioRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSMSProviderTwilioResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms/twilio/{id}/token:
        put:
            tags:
                - AdminService
            operationId: AdminService_UpdateSMSProviderTwilioToken
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSMSProviderTwilioTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSMSProviderTwilioTokenResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms/{id}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetSMSProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSMSProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveSMSProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveSMSProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms/{id}/_activate:
        post:
            tags:
                - AdminService
            operationId: AdminService_ActivateSMSProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ActivateSMSProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivateSMSProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms/{id}/_deactivate:
        post:
            tags:
                - AdminService
            operationId: AdminService_DeactivateSMSProvider
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateSMSProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateSMSProviderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /smtp:
        get:
            tags:
                - AdminService
            description: |-
                Deprecated: Get active SMTP Configuration

                 Returns the active SMTP configuration from the system. This is used to send E-Mails to the users.

                 Deprecated: please move to the new endpoint GetEmailProvider.
            operationId: AdminService_GetSMTPConfig
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSMTPConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - AdminService
            description: |-
                Deprecated: Add SMTP Configuration

                 Add a new SMTP configuration if nothing is set yet.

                 Deprecated: please move to the new endpoint AddEmailProviderSMTP.
            operationId: AdminService_AddSMTPConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddSMTPConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddSMTPConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /smtp/_search:
        post:
            tags:
                - AdminService
            description: |-
                Deprecated: List SMTP Configs

                 Returns a list of SMTP configurations.

                 Deprecated: please move to the new endpoint ListEmailProviders.
            operationId: AdminService_ListSMTPConfigs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListSMTPConfigsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSMTPConfigsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /smtp/_test:
        post:
            tags:
                - AdminService
            description: |-
                Deprecated: Test SMTP Provider

                 Test an SMTP provider. After testing the provider, the users will receive information about the test results.

                 Deprecated: please move to the new endpoint TestEmailProviderSMTP.
            operationId: AdminService_TestSMTPConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TestSMTPConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TestSMTPConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /smtp/{id}:
        get:
            tags:
                - AdminService
            description: |-
                Deprecated: Get SMTP provider configuration by its id

                 Get a specific SMTP provider configuration by its ID.

                 Deprecated: please move to the new endpoint GetEmailProviderById.
            operationId: AdminService_GetSMTPConfigById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSMTPConfigByIdResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            description: |-
                Deprecated: Update SMTP Configuration

                 Update the SMTP configuration, be aware that this will be activated as soon as it is saved. So the users will get notifications from the newly configured SMTP.

                 Deprecated: please move to the new endpoint UpdateEmailProviderSMTP.
            operationId: AdminService_UpdateSMTPConfig
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSMTPConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSMTPConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            description: |-
                Deprecated: Remove SMTP Configuration

                 Remove the SMTP configuration, be aware that the users will not get an E-Mail if no SMTP is set.

                 Deprecated: please move to the new endpoint RemoveEmailProvider.
            operationId: AdminService_RemoveSMTPConfig
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveSMTPConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /smtp/{id}/_activate:
        post:
            tags:
                - AdminService
            description: |-
                Deprecated: Activate SMTP Provider

                 Activate an SMTP provider.

                 Deprecated: please move to the new endpoint ActivateEmailProvider.
            operationId: AdminService_ActivateSMTPConfig
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ActivateSMTPConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActivateSMTPConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /smtp/{id}/_deactivate:
        post:
            tags:
                - AdminService
            description: |-
                Deprecated: Deactivate SMTP Provider

                 Deactivate an SMTP provider. After deactivating the provider, the users will not be able to receive SMTP notifications from that provider anymore.

                 Deprecated: please move to the new endpoint DeactivateEmailProvider.
            operationId: AdminService_DeactivateSMTPConfig
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateSMTPConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateSMTPConfigResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /smtp/{id}/_test:
        post:
            tags:
                - AdminService
            description: |-
                Deprecated: Test SMTP Provider

                 Test an SMTP provider identified by its ID. After testing the provider, the users will receive information about the test results.

                 Deprecated: please move to the new endpoint TestEmailProviderSMTPById.
            operationId: AdminService_TestSMTPConfigById
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TestSMTPConfigByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TestSMTPConfigByIdResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /smtp/{id}/password:
        put:
            tags:
                - AdminService
            description: |-
                Deprecated: Update SMTP Password

                 Update the SMTP password that is used for the host, be aware that this will be activated as soon as it is saved. So the users will get notifications from the newly configured SMTP.

                 Deprecated: please move to the new endpoint UpdateEmailProviderSMTPPassword.
            operationId: AdminService_UpdateSMTPConfigPassword
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSMTPConfigPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSMTPConfigPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/deafult/message/passwordreset/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultPasswordResetMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultPasswordResetMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/login/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultLoginTexts
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultLoginTextsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/domainclaimed/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultDomainClaimedMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultDomainClaimedMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/init/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultInitMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultInitMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/invite_user/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultInviteUserMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultInviteUserMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/password_change/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultPasswordChangeMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultPasswordChangeMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/passwordless_registration/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultPasswordlessRegistrationMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultPasswordlessRegistrationMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/passwordreset/{language}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetDefaultPasswordResetMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultPasswordResetMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/verifyemail/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultVerifyEmailMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultVerifyEmailMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/verifyemailotp/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultVerifyEmailOTPMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultVerifyEmailOTPMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/verifyphone/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultVerifyPhoneMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultVerifyPhoneMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/default/message/verifysmsotp/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetDefaultVerifySMSOTPMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDefaultVerifySMSOTPMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/login/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomLoginTexts
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomLoginTextsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetCustomLoginText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetCustomLoginTextsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetCustomLoginTextsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomLoginTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomLoginTextsToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/domainclaimed/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomDomainClaimedMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomDomainClaimedMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultDomainClaimedMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultDomainClaimedMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultDomainClaimedMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomDomainClaimedMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomDomainClaimedMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/init/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomInitMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomInitMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultInitMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultInitMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultInitMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomInitMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomInitMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/invite_user/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomInviteUserMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomInviteUserMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultInviteUserMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultInviteUserMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultInviteUserMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomInviteUserMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomInviteUserMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/password_change/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomPasswordChangeMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomPasswordChangeMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultPasswordChangeMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultPasswordChangeMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultPasswordChangeMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomPasswordChangeMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomPasswordChangeMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/passwordless_registration/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomPasswordlessRegistrationMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomPasswordlessRegistrationMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultPasswordlessRegistrationMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultPasswordlessRegistrationMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultPasswordlessRegistrationMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomPasswordlessRegistrationMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/passwordreset/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomPasswordResetMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomPasswordResetMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultPasswordResetMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultPasswordResetMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultPasswordResetMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomPasswordResetMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomPasswordResetMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/verifyemail/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomVerifyEmailMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomVerifyEmailMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultVerifyEmailMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultVerifyEmailMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultVerifyEmailMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomVerifyEmailMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomVerifyEmailMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/verifyemailotp/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomVerifyEmailOTPMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomVerifyEmailOTPMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultVerifyEmailOTPMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultVerifyEmailOTPMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultVerifyEmailOTPMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomVerifyEmailOTPMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomVerifyEmailOTPMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/verifyphone/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomVerifyPhoneMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomVerifyPhoneMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultVerifyPhoneMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultVerifyPhoneMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultVerifyPhoneMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomVerifyPhoneMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomVerifyPhoneMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /text/message/verifysmsotp/{language}:
        get:
            tags:
                - AdminService
            operationId: AdminService_GetCustomVerifySMSOTPMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCustomVerifySMSOTPMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AdminService
            operationId: AdminService_SetDefaultVerifySMSOTPMessageText
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetDefaultVerifySMSOTPMessageTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetDefaultVerifySMSOTPMessageTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AdminService
            operationId: AdminService_ResetCustomVerifySMSOTPMessageTextToDefault
            parameters:
                - name: language
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetCustomVerifySMSOTPMessageTextToDefaultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /trusted_domains:
        post:
            tags:
                - AdminService
            operationId: AdminService_AddInstanceTrustedDomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddInstanceTrustedDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddInstanceTrustedDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /trusted_domains/_search:
        post:
            tags:
                - AdminService
            operationId: AdminService_ListInstanceTrustedDomains
            parameters:
                - name: query.offset
                  in: query
                  schema:
                    type: string
                - name: query.limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: query.asc
                  in: query
                  schema:
                    type: boolean
                - name: sortingColumn
                  in: query
                  description: the field the result is sorted
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInstanceTrustedDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /trusted_domains/{domain}:
        delete:
            tags:
                - AdminService
            operationId: AdminService_RemoveInstanceTrustedDomain
            parameters:
                - name: domain
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveInstanceTrustedDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user_grants/_bulk:
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_BulkRemoveUserGrant
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkRemoveUserGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BulkRemoveUserGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /usergrants/me/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyUserGrants
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMyUserGrantsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyUserGrantsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/_is_unique:
        get:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ListUsers, is unique when no user is returned'
            operationId: ManagementService_IsUserUnique
            parameters:
                - name: userName
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IsUserUniqueResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/_search:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ListUsers'
            operationId: ManagementService_ListUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/grants/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListUserGrants
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListUserGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/human:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: use ImportHumanUser'
            operationId: ManagementService_AddHumanUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddHumanUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddHumanUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/human/_import:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 AddHumanUser'
            operationId: ManagementService_ImportHumanUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ImportHumanUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ImportHumanUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/machine:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddMachineUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMachineUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMachineUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetMyUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AuthService
            operationId: AuthService_RemoveMyUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMyUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/auth_factors/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyAuthFactors
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyAuthFactorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/auth_factors/otp:
        post:
            tags:
                - AuthService
            operationId: AuthService_AddMyAuthFactorOTP
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMyAuthFactorOTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMyAuthFactorOTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AuthService
            operationId: AuthService_RemoveMyAuthFactorOTP
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMyAuthFactorOTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/auth_factors/otp/_verify:
        post:
            tags:
                - AuthService
            operationId: AuthService_VerifyMyAuthFactorOTP
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyMyAuthFactorOTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyMyAuthFactorOTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/auth_factors/otp_email:
        post:
            tags:
                - AuthService
            operationId: AuthService_AddMyAuthFactorOTPEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMyAuthFactorOTPEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMyAuthFactorOTPEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AuthService
            operationId: AuthService_RemoveMyAuthFactorOTPEmail
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMyAuthFactorOTPEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/auth_factors/otp_sms:
        post:
            tags:
                - AuthService
            operationId: AuthService_AddMyAuthFactorOTPSMS
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMyAuthFactorOTPSMSRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMyAuthFactorOTPSMSResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AuthService
            operationId: AuthService_RemoveMyAuthFactorOTPSMS
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMyAuthFactorOTPSMSResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/auth_factors/u2f:
        post:
            tags:
                - AuthService
            operationId: AuthService_AddMyAuthFactorU2F
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMyAuthFactorU2FRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMyAuthFactorU2FResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/auth_factors/u2f/_verify:
        post:
            tags:
                - AuthService
            operationId: AuthService_VerifyMyAuthFactorU2F
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyMyAuthFactorU2FRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyMyAuthFactorU2FResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/auth_factors/u2f/{tokenId}:
        delete:
            tags:
                - AuthService
            operationId: AuthService_RemoveMyAuthFactorU2F
            parameters:
                - name: tokenId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMyAuthFactorU2FResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/avatar:
        delete:
            tags:
                - AuthService
            operationId: AuthService_RemoveMyAvatar
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMyAvatarResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/changes/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyUserChanges
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMyUserChangesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyUserChangesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/email:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetMyEmail
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AuthService
            operationId: AuthService_SetMyEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetMyEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetMyEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/email/_resend_verification:
        post:
            tags:
                - AuthService
            operationId: AuthService_ResendMyEmailVerification
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendMyEmailVerificationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendMyEmailVerificationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/email/_verify:
        post:
            tags:
                - AuthService
            operationId: AuthService_VerifyMyEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyMyEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyMyEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/idps/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyLinkedIDPs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMyLinkedIDPsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyLinkedIDPsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/idps/{idpId}/{linkedUserId}:
        delete:
            tags:
                - AuthService
            operationId: AuthService_RemoveMyLinkedIDP
            parameters:
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: linkedUserId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMyLinkedIDPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/metadata/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyMetadata
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMyMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/metadata/{key}:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetMyMetadata
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/password:
        put:
            tags:
                - AuthService
            operationId: AuthService_UpdateMyPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMyPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMyPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/passwordless:
        post:
            tags:
                - AuthService
            operationId: AuthService_AddMyPasswordless
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMyPasswordlessRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMyPasswordlessResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/passwordless/_link:
        post:
            tags:
                - AuthService
            operationId: AuthService_AddMyPasswordlessLink
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMyPasswordlessLinkRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMyPasswordlessLinkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/passwordless/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyPasswordless
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyPasswordlessResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/passwordless/_send_link:
        post:
            tags:
                - AuthService
            operationId: AuthService_SendMyPasswordlessLink
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendMyPasswordlessLinkRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SendMyPasswordlessLinkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/passwordless/_verify:
        post:
            tags:
                - AuthService
            operationId: AuthService_VerifyMyPasswordless
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyMyPasswordlessRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyMyPasswordlessResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/passwordless/{tokenId}:
        delete:
            tags:
                - AuthService
            operationId: AuthService_RemoveMyPasswordless
            parameters:
                - name: tokenId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMyPasswordlessResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/phone:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetMyPhone
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AuthService
            operationId: AuthService_SetMyPhone
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetMyPhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetMyPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AuthService
            operationId: AuthService_RemoveMyPhone
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMyPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/phone/_resend_verification:
        post:
            tags:
                - AuthService
            description: Resends an sms to the last given phone number, to verify it
            operationId: AuthService_ResendMyPhoneVerification
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendMyPhoneVerificationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendMyPhoneVerificationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/phone/_verify:
        post:
            tags:
                - AuthService
            operationId: AuthService_VerifyMyPhone
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyMyPhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyMyPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/profile:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetMyProfile
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AuthService
            operationId: AuthService_UpdateMyProfile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMyProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMyProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/sessions/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyUserSessions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMyUserSessionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyUserSessionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/tokens/refresh/_revoke_all:
        post:
            tags:
                - AuthService
            operationId: AuthService_RevokeAllMyRefreshTokens
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RevokeAllMyRefreshTokensRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevokeAllMyRefreshTokensResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/tokens/refresh/_search:
        post:
            tags:
                - AuthService
            operationId: AuthService_ListMyRefreshTokens
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMyRefreshTokensRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyRefreshTokensResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/tokens/refresh/{id}:
        delete:
            tags:
                - AuthService
            operationId: AuthService_RevokeMyRefreshToken
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevokeMyRefreshTokenResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me/username:
        put:
            tags:
                - AuthService
            operationId: AuthService_UpdateMyUserName
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMyUserNameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMyUserNameResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{id}:
        get:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ListUsers, with InUserIDQuery'
            operationId: ManagementService_GetUserByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 RemoveUser'
            operationId: ManagementService_RemoveUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{id}/_deactivate:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 DeactivateUser'
            operationId: ManagementService_DeactivateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{id}/_lock:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 LockUser'
            operationId: ManagementService_LockUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LockUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LockUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{id}/_reactivate:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ReactivateUser'
            operationId: ManagementService_ReactivateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReactivateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{id}/_unlock:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 UnlockUser'
            operationId: ManagementService_UnlockUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnlockUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnlockUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{id}/metadata/_bulk:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_BulkSetUserMetadata
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkSetUserMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BulkSetUserMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_BulkRemoveUserMetadata
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkRemoveUserMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BulkRemoveUserMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{id}/metadata/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListUserMetadata
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListUserMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{id}/metadata/{key}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetUserMetadata
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ManagementService
            operationId: ManagementService_SetUserMetadata
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetUserMetadataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetUserMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveUserMetadata
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveUserMetadataResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/_resend_initialization:
        post:
            tags:
                - ManagementService
            description: |-
                Deprecated: not used anymore in user state
                 To resend a verification email use the user service v2 ResendEmailCode
            operationId: ManagementService_ResendHumanInitialization
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendHumanInitializationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendHumanInitializationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/auth_factors/_search:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ListAuthenticationMethodTypes'
            operationId: ManagementService_ListHumanAuthFactors
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListHumanAuthFactorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/auth_factors/otp:
        delete:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 RemoveTOTP'
            operationId: ManagementService_RemoveHumanAuthFactorOTP
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveHumanAuthFactorOTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/auth_factors/otp_email:
        delete:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 RemoveOTPEmail'
            operationId: ManagementService_RemoveHumanAuthFactorOTPEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveHumanAuthFactorOTPEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/auth_factors/otp_sms:
        delete:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 RemoveOTPSMS'
            operationId: ManagementService_RemoveHumanAuthFactorOTPSMS
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveHumanAuthFactorOTPSMSResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/auth_factors/u2f/{tokenId}:
        delete:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 RemoveU2F'
            operationId: ManagementService_RemoveHumanAuthFactorU2F
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: tokenId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveHumanAuthFactorU2FResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/avatar:
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveHumanAvatar
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveHumanAvatarResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/changes/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListUserChanges
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListUserChangesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserChangesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/email:
        get:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 GetUserByID'
            operationId: ManagementService_GetHumanEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetHumanEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 SetEmail'
            operationId: ManagementService_UpdateHumanEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateHumanEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateHumanEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/email/_resend_verification:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ResendEmailCode'
            operationId: ManagementService_ResendHumanEmailVerification
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendHumanEmailVerificationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendHumanEmailVerificationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/grants:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddUserGrant
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddUserGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddUserGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/grants/{grantId}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetUserGrantByID
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserGrantByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateUserGrant
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveUserGrant
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveUserGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/grants/{grantId}/_deactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_DeactivateUserGrant
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateUserGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateUserGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/grants/{grantId}/_reactivate:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ReactivateUserGrant
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: grantId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReactivateUserGrantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateUserGrantResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/idps/_search:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ListLinkedIDPs'
            operationId: ManagementService_ListHumanLinkedIDPs
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListHumanLinkedIDPsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListHumanLinkedIDPsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/idps/{idpId}/{linkedUserId}:
        delete:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 RemoveLinkedIDP'
            operationId: ManagementService_RemoveHumanLinkedIDP
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: linkedUserId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveHumanLinkedIDPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/keys:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddMachineKey
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMachineKeyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMachineKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/keys/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListMachineKeys
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListMachineKeysRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMachineKeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/keys/{keyId}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetMachineKeyByIDs
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: keyId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMachineKeyByIDsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveMachineKey
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: keyId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMachineKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/machine:
        put:
            tags:
                - ManagementService
            operationId: ManagementService_UpdateMachine
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMachineRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMachineResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/memberships/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListUserMemberships
            parameters:
                - name: userId
                  in: path
                  description: list limitations and ordering
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListUserMembershipsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserMembershipsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/password:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 SetPassword'
            operationId: ManagementService_SetHumanPassword
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetHumanPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetHumanPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/password/_initialize:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 SetPassword'
            operationId: ManagementService_SetHumanInitialPassword
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetHumanInitialPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetHumanInitialPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/password/_reset:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 PasswordReset'
            operationId: ManagementService_SendHumanResetPasswordNotification
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendHumanResetPasswordNotificationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SendHumanResetPasswordNotificationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/passwordless/_link:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 RegisterPasskey'
            operationId: ManagementService_AddPasswordlessRegistration
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddPasswordlessRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/passwordless/_search:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ListPasskeys'
            operationId: ManagementService_ListHumanPasswordless
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListHumanPasswordlessResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/passwordless/_send_link:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 RegisterPasskey'
            operationId: ManagementService_SendPasswordlessRegistration
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendPasswordlessRegistrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SendPasswordlessRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/passwordless/{tokenId}:
        delete:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 RemovePasskey'
            operationId: ManagementService_RemoveHumanPasswordless
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: tokenId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveHumanPasswordlessResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/pats:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_AddPersonalAccessToken
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddPersonalAccessTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddPersonalAccessTokenResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/pats/_search:
        post:
            tags:
                - ManagementService
            operationId: ManagementService_ListPersonalAccessTokens
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListPersonalAccessTokensRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPersonalAccessTokensResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/pats/{tokenId}:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetPersonalAccessTokenByIDs
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: tokenId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPersonalAccessTokenByIDsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemovePersonalAccessToken
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: tokenId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemovePersonalAccessTokenResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/phone:
        get:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 GetUserByID'
            operationId: ManagementService_GetHumanPhone
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetHumanPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 SetPhone'
            operationId: ManagementService_UpdateHumanPhone
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateHumanPhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateHumanPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 SetPhone'
            operationId: ManagementService_RemoveHumanPhone
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveHumanPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/phone/_resend_verification:
        post:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 ResendPhoneCode'
            operationId: ManagementService_ResendHumanPhoneVerification
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendHumanPhoneVerificationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendHumanPhoneVerificationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/profile:
        get:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 GetUserByID'
            operationId: ManagementService_GetHumanProfile
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetHumanProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 UpdateHumanUser'
            operationId: ManagementService_UpdateHumanProfile
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateHumanProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateHumanProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/secret:
        put:
            tags:
                - ManagementService
            operationId: ManagementService_GenerateMachineSecret
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateMachineSecretRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateMachineSecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ManagementService
            operationId: ManagementService_RemoveMachineSecret
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveMachineSecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}/username:
        put:
            tags:
                - ManagementService
            description: 'Deprecated: please use user service v2 UpdateHumanUser'
            operationId: ManagementService_UpdateUserName
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserNameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserNameResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/features/instance:
        get:
            tags:
                - FeatureService
            operationId: FeatureService_GetInstanceFeatures
            parameters:
                - name: inheritance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetInstanceFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - FeatureService
            operationId: FeatureService_SetInstanceFeatures
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetInstanceFeaturesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetInstanceFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FeatureService
            operationId: FeatureService_ResetInstanceFeatures
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetInstanceFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/features/organization/{organizationId}:
        get:
            tags:
                - FeatureService
            operationId: FeatureService_GetOrganizationFeatures
            parameters:
                - name: organizationId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: inheritance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - FeatureService
            operationId: FeatureService_SetOrganizationFeatures
            parameters:
                - name: organizationId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetOrganizationFeaturesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetOrganizationFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FeatureService
            operationId: FeatureService_ResetOrganizationFeatures
            parameters:
                - name: organizationId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetOrganizationFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/features/system:
        get:
            tags:
                - FeatureService
            operationId: FeatureService_GetSystemFeatures
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSystemFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - FeatureService
            operationId: FeatureService_SetSystemFeatures
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetSystemFeaturesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetSystemFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FeatureService
            operationId: FeatureService_ResetSystemFeatures
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetSystemFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/features/user/{userId}:
        get:
            tags:
                - FeatureService
            operationId: FeatureService_GetUserFeatures
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: inheritance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - FeatureService
            operationId: FeatureService_SetUserFeatures
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetUserFeatureRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetUserFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FeatureService
            operationId: FeatureService_ResetUserFeatures
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetUserFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/idp_intents:
        post:
            tags:
                - UserService
            description: |-
                Start flow with an identity provider

                 Start a flow with an identity provider, for external login, registration or linking..
            operationId: UserService_StartIdentityProviderIntent
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StartIdentityProviderIntentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StartIdentityProviderIntentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/idp_intents/{idpIntentId}:
        post:
            tags:
                - UserService
            description: |-
                Retrieve the information returned by the identity provider

                 Retrieve the information returned by the identity provider for registration or updating an existing user with new information..
            operationId: UserService_RetrieveIdentityProviderIntent
            parameters:
                - name: idpIntentId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RetrieveIdentityProviderIntentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RetrieveIdentityProviderIntentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/idps/{id}:
        get:
            tags:
                - IdentityProviderService
            description: |-
                Get identity provider (IdP) by ID

                 Returns an identity provider (social/enterprise login) by its ID, which can be of the type Google, AzureAD, etc.
            operationId: IdentityProviderService_GetIDPByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetIDPByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/oidc/auth_requests/{authRequestId}:
        get:
            tags:
                - OIDCService
            operationId: OIDCService_GetAuthRequest
            parameters:
                - name: authRequestId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAuthRequestResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - OIDCService
            operationId: OIDCService_CreateCallback
            parameters:
                - name: authRequestId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCallbackResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/organizations:
        post:
            tags:
                - OrganizationService
            description: |-
                Create an Organization

                 Create a new organization with an administrative user. If no specific roles are sent for the users, they will be granted the role ORG_OWNER.
            operationId: OrganizationService_AddOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOrganizationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/organizations/_search:
        post:
            tags:
                - OrganizationService
            description: |-
                Search Organizations

                 Search for Organizations. By default, we will return all organization of the instance. Make sure to include a limit and sorting for pagination..
            operationId: OrganizationService_ListOrganizations
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListOrganizationsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/policies/security:
        put:
            tags:
                - SettingsService
            description: Set the security settings
            operationId: SettingsService_SetSecuritySettings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetSecuritySettingsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetSecuritySettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/saml/saml_requests/{samlRequestId}:
        get:
            tags:
                - SAMLService
            operationId: SAMLService_GetSAMLRequest
            parameters:
                - name: samlRequestId
                  in: path
                  description: ID of the SAML Request, as obtained from the redirect URL.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSAMLRequestResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - SAMLService
            operationId: SAMLService_CreateResponse
            parameters:
                - name: samlRequestId
                  in: path
                  description: ID of the SAML Request.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateResponseRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateResponseResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/sessions:
        post:
            tags:
                - SessionService
            description: Create a new session
            operationId: SessionService_CreateSession
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateSessionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/sessions/search:
        post:
            tags:
                - SessionService
            description: Search sessions
            operationId: SessionService_ListSessions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListSessionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSessionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/sessions/{sessionId}:
        get:
            tags:
                - SessionService
            description: GetSession a session
            operationId: SessionService_GetSession
            parameters:
                - name: sessionId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: sessionToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - SessionService
            description: Terminate a session
            operationId: SessionService_DeleteSession
            parameters:
                - name: sessionId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteSessionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - SessionService
            description: Update a session
            operationId: SessionService_SetSession
            parameters:
                - name: sessionId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetSessionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings:
        get:
            tags:
                - SettingsService
            description: Get basic information over the instance
            operationId: SettingsService_GetGeneralSettings
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGeneralSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings/branding:
        get:
            tags:
                - SettingsService
            description: Get the current active branding settings
            operationId: SettingsService_GetBrandingSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrandingSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings/domain:
        get:
            tags:
                - SettingsService
            description: Get the domain settings
            operationId: SettingsService_GetDomainSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDomainSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings/legal_support:
        get:
            tags:
                - SettingsService
            description: Get the legal and support settings
            operationId: SettingsService_GetLegalAndSupportSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLegalAndSupportSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings/lockout:
        get:
            tags:
                - SettingsService
            description: Get the lockout settings
            operationId: SettingsService_GetLockoutSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLockoutSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings/login:
        get:
            tags:
                - SettingsService
            description: Get the login settings
            operationId: SettingsService_GetLoginSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoginSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings/login/idps:
        get:
            tags:
                - SettingsService
            description: Get the current active identity providers
            operationId: SettingsService_GetActiveIdentityProviders
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
                - name: creationAllowed
                  in: query
                  schema:
                    type: boolean
                - name: linkingAllowed
                  in: query
                  schema:
                    type: boolean
                - name: autoCreation
                  in: query
                  schema:
                    type: boolean
                - name: autoLinking
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetActiveIdentityProvidersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings/password/complexity:
        get:
            tags:
                - SettingsService
            description: Get the password complexity settings
            operationId: SettingsService_GetPasswordComplexitySettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasswordComplexitySettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings/password/expiry:
        get:
            tags:
                - SettingsService
            description: Get the password expiry settings
            operationId: SettingsService_GetPasswordExpirySettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasswordExpirySettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/settings/security:
        get:
            tags:
                - SettingsService
            description: Get the security settings
            operationId: SettingsService_GetSecuritySettings
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSecuritySettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users:
        post:
            tags:
                - UserService
            description: |-
                Search Users

                 Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.
            operationId: UserService_ListUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/human:
        post:
            tags:
                - UserService
            description: |-
                Create a new human user

                 Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.
            operationId: UserService_AddHumanUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddHumanUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddHumanUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/human/{userId}:
        put:
            tags:
                - UserService
            description: |-
                Update User

                 Update all information from a user..
            operationId: UserService_UpdateHumanUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateHumanUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateHumanUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}:
        get:
            tags:
                - UserService
            description: |-
                User by ID

                 Returns the full user object (human or machine) including the profile, email, etc..
            operationId: UserService_GetUserByID
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Delete user

                 The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found..
            operationId: UserService_DeleteUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/authentication_factors/_search:
        post:
            tags:
                - UserService
            operationId: UserService_ListAuthenticationFactors
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: authFactors
                  in: query
                  schema:
                    type: array
                    items:
                        type: integer
                        format: enum
                - name: states
                  in: query
                  schema:
                    type: array
                    items:
                        type: integer
                        format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAuthenticationFactorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/authentication_methods:
        get:
            tags:
                - UserService
            description: |-
                List all possible authentication methods of a user

                 List all possible authentication methods of a user like password, passwordless, (T)OTP and more..
            operationId: UserService_ListAuthenticationMethodTypes
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: domainQuery.includeWithoutDomain
                  in: query
                  description: List also auth method types without domain information like passkey and U2F added through V1 APIs / Login UI.
                  schema:
                    type: boolean
                - name: domainQuery.domain
                  in: query
                  description: List only auth methods with specific domain.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAuthenticationMethodTypesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/deactivate:
        post:
            tags:
                - UserService
            description: |-
                Deactivate user

                 The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data..
            operationId: UserService_DeactivateUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/email:
        post:
            tags:
                - UserService
            description: |-
                Change the user email

                 Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email..
            operationId: UserService_SetEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/email/resend:
        post:
            tags:
                - UserService
            description: |-
                Resend code to verify user email

                 Resend code to verify user email.
            operationId: UserService_ResendEmailCode
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendEmailCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendEmailCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/email/send:
        post:
            tags:
                - UserService
            description: |-
                Send code to verify user email

                 Send code to verify user email.
            operationId: UserService_SendEmailCode
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendEmailCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SendEmailCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/email/verify:
        post:
            tags:
                - UserService
            description: |-
                Verify the email

                 Verify the email with the generated code.
            operationId: UserService_VerifyEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/invite_code:
        post:
            tags:
                - UserService
            description: |-
                Create an invite code for a user

                 Create an invite code for a user to initialize their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
            operationId: UserService_CreateInviteCode
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateInviteCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateInviteCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/invite_code/resend:
        post:
            tags:
                - UserService
            description: |-
                Resend an invite code for a user

                 Resend an invite code for a user to initialize their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
                 A resend is only possible if a code has been created previously and sent to the user. If there is no code or it was directly returned, an error will be returned.
            operationId: UserService_ResendInviteCode
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendInviteCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/invite_code/verify:
        post:
            tags:
                - UserService
            description: |-
                Verify an invite code for a user

                 Verify the invite code of a user previously issued. This will set their email to a verified state and
                 allow the user to set up their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
            operationId: UserService_VerifyInviteCode
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyInviteCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyInviteCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/links:
        post:
            tags:
                - UserService
            description: |-
                Add link to an identity provider to an user

                 Add link to an identity provider to an user..
            operationId: UserService_AddIDPLink
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddIDPLinkRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddIDPLinkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/links/_search:
        post:
            tags:
                - UserService
            description: |-
                List links to an identity provider of an user

                 List links to an identity provider of an user.
            operationId: UserService_ListIDPLinks
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListIDPLinksRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListIDPLinksResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/links/{idpId}/{linkedUserId}:
        delete:
            tags:
                - UserService
            description: |-
                Remove link of an identity provider to an user

                 Remove link of an identity provider to an user.
            operationId: UserService_RemoveIDPLink
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: idpId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: linkedUserId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RemoveIDPLinkRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveIDPLinkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/lock:
        post:
            tags:
                - UserService
            description: |-
                Lock user

                 The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.)..
            operationId: UserService_LockUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LockUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LockUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/otp_email:
        post:
            tags:
                - UserService
            description: |-
                Add OTP Email for a user

                 Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor..
            operationId: UserService_AddOTPEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOTPEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOTPEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove One-Time Password (OTP) Email from a user

                 Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
            operationId: UserService_RemoveOTPEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOTPEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/otp_sms:
        post:
            tags:
                - UserService
            description: |-
                Add OTP SMS for a user

                 Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor..
            operationId: UserService_AddOTPSMS
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOTPSMSRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOTPSMSResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove One-Time Password (OTP) SMS from a user

                 Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
            operationId: UserService_RemoveOTPSMS
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOTPSMSResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/passkeys:
        post:
            tags:
                - UserService
            description: |-
                Start the registration of passkey for a user

                 Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey..
            operationId: UserService_RegisterPasskey
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterPasskeyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterPasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/passkeys/_search:
        post:
            tags:
                - UserService
            description: |-
                List passkeys of an user

                 List passkeys of an user
            operationId: UserService_ListPasskeys
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListPasskeysRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPasskeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/passkeys/registration_link:
        post:
            tags:
                - UserService
            description: |-
                Create a passkey registration link for a user

                 Create a passkey registration link which includes a code and either return it or send it to the user..
            operationId: UserService_CreatePasskeyRegistrationLink
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePasskeyRegistrationLinkRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePasskeyRegistrationLinkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/passkeys/{passkeyId}:
        post:
            tags:
                - UserService
            description: |-
                Verify a passkey for a user

                 Verify the passkey registration with the public key credential..
            operationId: UserService_VerifyPasskeyRegistration
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: passkeyId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyPasskeyRegistrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyPasskeyRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove passkey from a user

                 Remove passkey from a user.
            operationId: UserService_RemovePasskey
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: passkeyId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemovePasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/password:
        post:
            tags:
                - UserService
            description: |-
                Change password

                 Change the password of a user with either a verification code or the current password..
            operationId: UserService_SetPassword
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/password_reset:
        post:
            tags:
                - UserService
            description: |-
                Request a code to reset a password

                 Request a code to reset a password..
            operationId: UserService_PasswordReset
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PasswordResetRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PasswordResetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/phone:
        post:
            tags:
                - UserService
            description: |-
                Set the user phone

                 Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms..
            operationId: UserService_SetPhone
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove the user phone

                 Remove the user phone
            operationId: UserService_RemovePhone
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RemovePhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemovePhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/phone/resend:
        post:
            tags:
                - UserService
            description: |-
                Resend code to verify user phone

                 Resend code to verify user phone.
            operationId: UserService_ResendPhoneCode
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendPhoneCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendPhoneCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/phone/verify:
        post:
            tags:
                - UserService
            description: |-
                Verify the phone

                 Verify the phone with the generated code..
            operationId: UserService_VerifyPhone
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyPhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/reactivate:
        post:
            tags:
                - UserService
            description: |-
                Reactivate user

                 Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'..
            operationId: UserService_ReactivateUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReactivateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/totp:
        post:
            tags:
                - UserService
            description: |-
                Start the registration of a TOTP generator for a user

                 Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device..
            operationId: UserService_RegisterTOTP
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterTOTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterTOTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove TOTP generator from a user

                 Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.
            operationId: UserService_RemoveTOTP
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveTOTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/totp/verify:
        post:
            tags:
                - UserService
            description: |-
                Verify a TOTP generator for a user

                 Verify the TOTP registration with a generated code..
            operationId: UserService_VerifyTOTPRegistration
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyTOTPRegistrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyTOTPRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/u2f:
        post:
            tags:
                - UserService
            description: |-
                Start the registration of a u2f token for a user

                 Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token..
            operationId: UserService_RegisterU2F
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterU2FRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterU2FResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/u2f/{u2fId}:
        post:
            tags:
                - UserService
            description: |-
                Verify a u2f token for a user

                 Verify the u2f token registration with the public key credential..
            operationId: UserService_VerifyU2FRegistration
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: u2fId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyU2FRegistrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyU2FRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove u2f token from a user

                 Remove u2f token from a user.
            operationId: UserService_RemoveU2F
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: u2fId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveU2FResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/users/{userId}/unlock:
        post:
            tags:
                - UserService
            description: |-
                Unlock user

                 The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.)..
            operationId: UserService_UnlockUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnlockUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnlockUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/features/instance:
        get:
            tags:
                - FeatureService
            operationId: FeatureService_GetInstanceFeatures
            parameters:
                - name: inheritance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetInstanceFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - FeatureService
            operationId: FeatureService_SetInstanceFeatures
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetInstanceFeaturesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetInstanceFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FeatureService
            operationId: FeatureService_ResetInstanceFeatures
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetInstanceFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/features/organization/{organizationId}:
        get:
            tags:
                - FeatureService
            operationId: FeatureService_GetOrganizationFeatures
            parameters:
                - name: organizationId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: inheritance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - FeatureService
            operationId: FeatureService_SetOrganizationFeatures
            parameters:
                - name: organizationId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetOrganizationFeaturesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetOrganizationFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FeatureService
            operationId: FeatureService_ResetOrganizationFeatures
            parameters:
                - name: organizationId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetOrganizationFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/features/system:
        get:
            tags:
                - FeatureService
            operationId: FeatureService_GetSystemFeatures
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSystemFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - FeatureService
            operationId: FeatureService_SetSystemFeatures
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetSystemFeaturesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetSystemFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FeatureService
            operationId: FeatureService_ResetSystemFeatures
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetSystemFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/features/user/{userId}:
        get:
            tags:
                - FeatureService
            operationId: FeatureService_GetUserFeatures
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: inheritance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - FeatureService
            operationId: FeatureService_SetUserFeatures
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetUserFeatureRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetUserFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FeatureService
            operationId: FeatureService_ResetUserFeatures
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetUserFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/idp_intents:
        post:
            tags:
                - UserService
            description: |-
                Start flow with an identity provider

                 Start a flow with an identity provider, for external login, registration or linking.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_StartIdentityProviderIntent
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StartIdentityProviderIntentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StartIdentityProviderIntentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/idp_intents/{idpIntentId}:
        post:
            tags:
                - UserService
            description: |-
                Retrieve the information returned by the identity provider

                 Retrieve the information returned by the identity provider for registration or updating an existing user with new information.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_RetrieveIdentityProviderIntent
            parameters:
                - name: idpIntentId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RetrieveIdentityProviderIntentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RetrieveIdentityProviderIntentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/oidc/auth_requests/{authRequestId}:
        get:
            tags:
                - OIDCService
            operationId: OIDCService_GetAuthRequest
            parameters:
                - name: authRequestId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAuthRequestResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - OIDCService
            operationId: OIDCService_CreateCallback
            parameters:
                - name: authRequestId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCallbackResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/organizations:
        post:
            tags:
                - OrganizationService
            description: Create a new organization and grant the user(s) permission to manage it
            operationId: OrganizationService_AddOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOrganizationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/policies/security:
        put:
            tags:
                - SettingsService
            description: Set the security settings
            operationId: SettingsService_SetSecuritySettings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetSecuritySettingsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetSecuritySettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/sessions:
        post:
            tags:
                - SessionService
            description: Create a new session
            operationId: SessionService_CreateSession
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateSessionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/sessions/search:
        post:
            tags:
                - SessionService
            description: Search sessions
            operationId: SessionService_ListSessions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListSessionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSessionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/sessions/{sessionId}:
        get:
            tags:
                - SessionService
            description: GetSession a session
            operationId: SessionService_GetSession
            parameters:
                - name: sessionId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: sessionToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - SessionService
            description: Terminate a session
            operationId: SessionService_DeleteSession
            parameters:
                - name: sessionId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteSessionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - SessionService
            description: Update a session
            operationId: SessionService_SetSession
            parameters:
                - name: sessionId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetSessionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings:
        get:
            tags:
                - SettingsService
            description: Get basic information over the instance
            operationId: SettingsService_GetGeneralSettings
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGeneralSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings/branding:
        get:
            tags:
                - SettingsService
            description: Get the current active branding settings
            operationId: SettingsService_GetBrandingSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrandingSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings/domain:
        get:
            tags:
                - SettingsService
            description: Get the domain settings
            operationId: SettingsService_GetDomainSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDomainSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings/legal_support:
        get:
            tags:
                - SettingsService
            description: Get the legal and support settings
            operationId: SettingsService_GetLegalAndSupportSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLegalAndSupportSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings/lockout:
        get:
            tags:
                - SettingsService
            description: Get the lockout settings
            operationId: SettingsService_GetLockoutSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLockoutSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings/login:
        get:
            tags:
                - SettingsService
            description: Get the login settings
            operationId: SettingsService_GetLoginSettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoginSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings/login/idps:
        get:
            tags:
                - SettingsService
            description: Get the current active identity providers
            operationId: SettingsService_GetActiveIdentityProviders
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetActiveIdentityProvidersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings/password/complexity:
        get:
            tags:
                - SettingsService
            description: Get the password complexity settings
            operationId: SettingsService_GetPasswordComplexitySettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasswordComplexitySettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings/password/expiry:
        get:
            tags:
                - SettingsService
            description: Get the password expiry settings
            operationId: SettingsService_GetPasswordExpirySettings
            parameters:
                - name: ctx.orgId
                  in: query
                  schema:
                    type: string
                - name: ctx.instance
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasswordExpirySettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/settings/security:
        get:
            tags:
                - SettingsService
            description: Get the security settings
            operationId: SettingsService_GetSecuritySettings
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSecuritySettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users:
        post:
            tags:
                - UserService
            description: |-
                Search Users

                 Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_ListUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/human:
        post:
            tags:
                - UserService
            description: |-
                Create a new human user

                 Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA)
            operationId: UserService_AddHumanUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddHumanUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddHumanUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}:
        get:
            tags:
                - UserService
            description: |-
                User by ID

                 Returns the full user object (human or machine) including the profile, email, etc.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_GetUserByID
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserByIDResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - UserService
            description: |-
                Update User

                 Update all information from a user.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_UpdateHumanUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
                - name: profile.givenName
                  in: query
                  schema:
                    type: string
                - name: profile.familyName
                  in: query
                  schema:
                    type: string
                - name: profile.nickName
                  in: query
                  schema:
                    type: string
                - name: profile.displayName
                  in: query
                  schema:
                    type: string
                - name: profile.preferredLanguage
                  in: query
                  schema:
                    type: string
                - name: profile.gender
                  in: query
                  schema:
                    type: integer
                    format: enum
                - name: email.email
                  in: query
                  schema:
                    type: string
                - name: email.sendCode.urlTemplate
                  in: query
                  schema:
                    type: string
                - name: email.isVerified
                  in: query
                  schema:
                    type: boolean
                - name: phone.phone
                  in: query
                  schema:
                    type: string
                - name: phone.isVerified
                  in: query
                  schema:
                    type: boolean
                - name: password.password.password
                  in: query
                  schema:
                    type: string
                - name: password.password.changeRequired
                  in: query
                  schema:
                    type: boolean
                - name: password.hashedPassword.hash
                  in: query
                  schema:
                    type: string
                - name: password.hashedPassword.changeRequired
                  in: query
                  schema:
                    type: boolean
                - name: password.currentPassword
                  in: query
                  schema:
                    type: string
                - name: password.verificationCode
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateHumanUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Delete user

                 The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_DeleteUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/authentication_methods:
        get:
            tags:
                - UserService
            description: |-
                List all possible authentication methods of a user

                 List all possible authentication methods of a user like password, passwordless, (T)OTP and more.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_ListAuthenticationMethodTypes
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAuthenticationMethodTypesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/deactivate:
        post:
            tags:
                - UserService
            description: |-
                Deactivate user

                 The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_DeactivateUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeactivateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeactivateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/email:
        post:
            tags:
                - UserService
            description: |-
                Change the user email

                 Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_SetEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/email/resend:
        post:
            tags:
                - UserService
            description: |-
                Resend code to verify user email

                 Resend code to verify user email

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_ResendEmailCode
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendEmailCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendEmailCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/email/verify:
        post:
            tags:
                - UserService
            description: |-
                Verify the email

                 Verify the email with the generated code.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_VerifyEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/links:
        post:
            tags:
                - UserService
            description: |-
                Add link to an identity provider to an user

                 Add link to an identity provider to an user.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_AddIDPLink
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddIDPLinkRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddIDPLinkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/lock:
        post:
            tags:
                - UserService
            description: |-
                Lock user

                 The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_LockUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LockUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LockUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/otp_email:
        post:
            tags:
                - UserService
            description: |-
                Add OTP Email for a user

                 Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_AddOTPEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOTPEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOTPEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove One-Time Password (OTP) Email from a user

                 Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_RemoveOTPEmail
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOTPEmailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/otp_sms:
        post:
            tags:
                - UserService
            description: |-
                Add OTP SMS for a user

                 Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_AddOTPSMS
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddOTPSMSRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddOTPSMSResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove One-Time Password (OTP) SMS from a user

                 Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_RemoveOTPSMS
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveOTPSMSResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/passkeys:
        post:
            tags:
                - UserService
            description: |-
                Start the registration of passkey for a user

                 Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_RegisterPasskey
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterPasskeyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterPasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/passkeys/registration_link:
        post:
            tags:
                - UserService
            description: |-
                Create a passkey registration link for a user

                 Create a passkey registration link which includes a code and either return it or send it to the user.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_CreatePasskeyRegistrationLink
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePasskeyRegistrationLinkRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePasskeyRegistrationLinkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/passkeys/{passkeyId}:
        post:
            tags:
                - UserService
            description: |-
                Verify a passkey for a user

                 Verify the passkey registration with the public key credential.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_VerifyPasskeyRegistration
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: passkeyId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyPasskeyRegistrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyPasskeyRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/password:
        post:
            tags:
                - UserService
            description: |-
                Change password

                 Change the password of a user with either a verification code or the current password.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_SetPassword
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/password_reset:
        post:
            tags:
                - UserService
            description: |-
                Request a code to reset a password

                 Request a code to reset a password.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_PasswordReset
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PasswordResetRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PasswordResetResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/phone:
        post:
            tags:
                - UserService
            description: |-
                Set the user phone

                 Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_SetPhone
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove the user phone

                 Remove the user phone

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_RemovePhone
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RemovePhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemovePhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/phone/resend:
        post:
            tags:
                - UserService
            description: |-
                Resend code to verify user phone

                 Resend code to verify user phone

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_ResendPhoneCode
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResendPhoneCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResendPhoneCodeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/phone/verify:
        post:
            tags:
                - UserService
            description: |-
                Verify the phone

                 Verify the phone with the generated code.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_VerifyPhone
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyPhoneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyPhoneResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/reactivate:
        post:
            tags:
                - UserService
            description: |-
                Reactivate user

                 Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_ReactivateUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReactivateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReactivateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/totp:
        post:
            tags:
                - UserService
            description: |-
                Start the registration of a TOTP generator for a user

                 Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_RegisterTOTP
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterTOTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterTOTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            description: |-
                Remove TOTP generator from a user

                 Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_RemoveTOTP
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveTOTPResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/totp/verify:
        post:
            tags:
                - UserService
            description: |-
                Verify a TOTP generator for a user

                 Verify the TOTP registration with a generated code.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_VerifyTOTPRegistration
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyTOTPRegistrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyTOTPRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/u2f:
        post:
            tags:
                - UserService
            description: |-
                Start the registration of a u2f token for a user

                 Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_RegisterU2F
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterU2FRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterU2FResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/u2f/{u2fId}:
        post:
            tags:
                - UserService
            description: |-
                Verify a u2f token for a user

                 Verify the u2f token registration with the public key credential.

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_VerifyU2FRegistration
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: u2fId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyU2FRegistrationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyU2FRegistrationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2beta/users/{userId}/unlock:
        post:
            tags:
                - UserService
            description: |-
                Unlock user

                 The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).

                 Deprecated: please move to the corresponding endpoint under user service v2 (GA).
            operationId: UserService_UnlockUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnlockUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnlockUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v3alpha/debug_events:
        get:
            tags:
                - ZITADELDebugEvents
            operationId: ZITADELDebugEvents_ListDebugEventsStates
            parameters:
                - name: triggerBulk
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDebugEventsStatesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v3alpha/debug_events/{id}:
        get:
            tags:
                - ZITADELDebugEvents
            operationId: ZITADELDebugEvents_GetDebugEventsStateById
            parameters:
                - name: id
                  in: path
                  description: unique identifier of the aggregate.
                  required: true
                  schema:
                    type: string
                - name: triggerBulk
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDebugEventsStateByIdResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /views/_search:
        post:
            tags:
                - SystemService
            description: |-
                Returns all stored read models of ZITADEL
                 views are used for search optimisation and optimise request latencies
                 they represent the delta of the event happend on the objects
            operationId: SystemService_ListViews
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListViewsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListViewsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /views/{database}/{viewName}:
        post:
            tags:
                - SystemService
            description: |-
                Truncates the delta of the change stream
                 be carefull with this function because ZITADEL has to
                 recompute the deltas after they got cleared.
                 Search requests will return wrong results until all deltas are recomputed
            operationId: SystemService_ClearView
            parameters:
                - name: database
                  in: path
                  required: true
                  schema:
                    type: string
                - name: viewName
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClearViewResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /zitadel/docs:
        get:
            tags:
                - ManagementService
            operationId: ManagementService_GetOIDCInformation
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOIDCInformationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        APIConfig:
            type: object
            properties:
                clientId:
                    type: string
                authMethodType:
                    type: integer
                    format: enum
        Action:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                state:
                    type: integer
                    format: enum
                name:
                    type: string
                script:
                    type: string
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                allowedToFail:
                    type: boolean
        ActionIDQuery:
            type: object
            properties:
                id:
                    type: string
        ActionNameQuery:
            type: object
            properties:
                name:
                    type: string
                method:
                    type: integer
                    format: enum
        ActionQuery:
            type: object
            properties:
                actionIdQuery:
                    $ref: '#/components/schemas/ActionIDQuery'
                actionNameQuery:
                    $ref: '#/components/schemas/ActionNameQuery'
                actionStateQuery:
                    $ref: '#/components/schemas/ActionStateQuery'
        ActionStateQuery:
            type: object
            properties:
                state:
                    type: integer
                    format: enum
            description: ActionStateQuery always equals
        ActivateCustomLabelPolicyRequest:
            type: object
            properties: {}
            description: This is an empty request
        ActivateCustomLabelPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ActivateEmailProviderRequest:
            type: object
            properties:
                id:
                    type: string
        ActivateEmailProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ActivateFeatureLoginDefaultOrgResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ActivateLabelPolicyRequest:
            type: object
            properties: {}
            description: This is an empty request
        ActivateLabelPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ActivateSMSProviderRequest:
            type: object
            properties:
                id:
                    type: string
        ActivateSMSProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ActivateSMTPConfigRequest:
            type: object
            properties:
                id:
                    type: string
        ActivateSMTPConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ActivateUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        ActivateWebKeyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        AddAPIAppRequest:
            required:
                - name
            type: object
            properties:
                projectId:
                    type: string
                name:
                    type: string
                authMethodType:
                    type: integer
                    format: enum
        AddAPIAppResponse:
            type: object
            properties:
                appId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                clientId:
                    type: string
                clientSecret:
                    type: string
        AddAppKeyRequest:
            type: object
            properties:
                projectId:
                    type: string
                appId:
                    type: string
                type:
                    type: integer
                    format: enum
                expirationDate:
                    type: string
                    format: date-time
        AddAppKeyResponse:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                keyDetails:
                    type: string
                    format: bytes
        AddAppleProviderRequest:
            required:
                - clientId
                - teamId
                - keyId
                - privateKey
            type: object
            properties:
                name:
                    type: string
                    description: Apple will be used as default, if no name is provided
                clientId:
                    type: string
                teamId:
                    type: string
                keyId:
                    type: string
                privateKey:
                    type: string
                    format: bytes
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddAppleProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddAzureADProviderRequest:
            type: object
            properties:
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                tenant:
                    allOf:
                        - $ref: '#/components/schemas/AzureADTenant'
                    description: if not provided the `common` tenant will be used
                emailVerified:
                    type: boolean
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddAzureADProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddCustomDomainPolicyRequest:
            type: object
            properties:
                orgId:
                    type: string
                userLoginMustBeDomain:
                    type: boolean
                validateOrgDomains:
                    type: boolean
                smtpSenderAddressMatchesInstanceDomain:
                    type: boolean
        AddCustomDomainPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddCustomLabelPolicyRequest:
            type: object
            properties:
                primaryColor:
                    type: string
                hideLoginNameSuffix:
                    type: boolean
                    description: hides the org suffix on the login form if the scope \"urn:zitadel:iam:org:domain:primary:{domainname}\" is set
                warnColor:
                    type: string
                backgroundColor:
                    type: string
                fontColor:
                    type: string
                primaryColorDark:
                    type: string
                backgroundColorDark:
                    type: string
                warnColorDark:
                    type: string
                fontColorDark:
                    type: string
                disableWatermark:
                    type: boolean
                themeMode:
                    type: integer
                    format: enum
        AddCustomLabelPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddCustomLockoutPolicyRequest:
            type: object
            properties:
                maxPasswordAttempts:
                    type: integer
                    format: uint32
                maxOtpAttempts:
                    type: integer
                    format: uint32
        AddCustomLockoutPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddCustomLoginPolicyRequest:
            type: object
            properties:
                allowUsernamePassword:
                    type: boolean
                allowRegister:
                    type: boolean
                allowExternalIdp:
                    type: boolean
                forceMfa:
                    type: boolean
                passwordlessType:
                    type: integer
                    format: enum
                hidePasswordReset:
                    type: boolean
                ignoreUnknownUsernames:
                    type: boolean
                defaultRedirectUri:
                    type: string
                passwordCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                externalLoginCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                mfaInitSkipLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                secondFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                multiFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                secondFactors:
                    type: array
                    items:
                        type: integer
                        format: enum
                multiFactors:
                    type: array
                    items:
                        type: integer
                        format: enum
                idps:
                    type: array
                    items:
                        $ref: '#/components/schemas/AddCustomLoginPolicyRequest_IDP'
                allowDomainDiscovery:
                    type: boolean
                    description: If set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
                disableLoginWithEmail:
                    type: boolean
                disableLoginWithPhone:
                    type: boolean
                forceMfaLocalOnly:
                    type: boolean
        AddCustomLoginPolicyRequest_IDP:
            type: object
            properties:
                idpId:
                    type: string
                ownerType:
                    type: integer
                    format: enum
        AddCustomLoginPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddCustomNotificationPolicyRequest:
            type: object
            properties:
                passwordChange:
                    type: boolean
        AddCustomNotificationPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddCustomOrgIAMPolicyRequest:
            type: object
            properties:
                orgId:
                    type: string
                userLoginMustBeDomain:
                    type: boolean
        AddCustomOrgIAMPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddCustomPasswordAgePolicyRequest:
            type: object
            properties:
                maxAgeDays:
                    type: integer
                    description: Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
                    format: uint32
                expireWarnDays:
                    type: integer
                    description: Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
                    format: uint32
        AddCustomPasswordAgePolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddCustomPasswordComplexityPolicyRequest:
            type: object
            properties:
                minLength:
                    type: string
                hasUppercase:
                    type: boolean
                hasLowercase:
                    type: boolean
                hasNumber:
                    type: boolean
                hasSymbol:
                    type: boolean
        AddCustomPasswordComplexityPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddCustomPrivacyPolicyRequest:
            type: object
            properties:
                tosLink:
                    type: string
                privacyLink:
                    type: string
                helpLink:
                    type: string
                supportEmail:
                    type: string
                docsLink:
                    type: string
                customLink:
                    type: string
                customLinkText:
                    type: string
        AddCustomPrivacyPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddDomainRequest:
            type: object
            properties:
                instanceId:
                    type: string
                domain:
                    type: string
        AddDomainResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddEmailProviderHTTPRequest:
            required:
                - endpoint
            type: object
            properties:
                endpoint:
                    type: string
                description:
                    type: string
        AddEmailProviderHTTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddEmailProviderSMTPRequest:
            required:
                - senderAddress
                - senderName
                - host
            type: object
            properties:
                senderAddress:
                    type: string
                senderName:
                    type: string
                tls:
                    type: boolean
                host:
                    type: string
                user:
                    type: string
                password:
                    type: string
                replyToAddress:
                    type: string
                description:
                    type: string
        AddEmailProviderSMTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddGenericOAuthProviderRequest:
            type: object
            properties:
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                authorizationEndpoint:
                    type: string
                tokenEndpoint:
                    type: string
                userEndpoint:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                idAttribute:
                    type: string
                    description: identifying attribute of the user in the response of the user_endpoint
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddGenericOAuthProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddGenericOIDCProviderRequest:
            type: object
            properties:
                name:
                    type: string
                issuer:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
                isIdTokenMapping:
                    type: boolean
        AddGenericOIDCProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddGitHubEnterpriseServerProviderRequest:
            type: object
            properties:
                clientId:
                    type: string
                name:
                    type: string
                clientSecret:
                    type: string
                authorizationEndpoint:
                    type: string
                tokenEndpoint:
                    type: string
                userEndpoint:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddGitHubEnterpriseServerProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddGitHubProviderRequest:
            type: object
            properties:
                name:
                    type: string
                    description: GitHub will be used as default, if no name is provided
                clientId:
                    type: string
                clientSecret:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddGitHubProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddGitLabProviderRequest:
            type: object
            properties:
                name:
                    type: string
                    description: GitLab will be used as default, if no name is provided
                clientId:
                    type: string
                clientSecret:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddGitLabProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddGitLabSelfHostedProviderRequest:
            type: object
            properties:
                issuer:
                    type: string
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddGitLabSelfHostedProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddGoogleProviderRequest:
            type: object
            properties:
                name:
                    type: string
                    description: Google will be used as default, if no name is provided
                clientId:
                    type: string
                clientSecret:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddGoogleProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddHumanUserRequest:
            type: object
            properties:
                userName:
                    type: string
                profile:
                    $ref: '#/components/schemas/AddHumanUserRequest_Profile'
                email:
                    $ref: '#/components/schemas/AddHumanUserRequest_Email'
                phone:
                    $ref: '#/components/schemas/AddHumanUserRequest_Phone'
                initialPassword:
                    type: string
        AddHumanUserRequest_Email:
            type: object
            properties:
                email:
                    type: string
                isEmailVerified:
                    type: boolean
        AddHumanUserRequest_Phone:
            type: object
            properties:
                phone:
                    type: string
                    description: has to be a global number
                isPhoneVerified:
                    type: boolean
        AddHumanUserRequest_Profile:
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                nickName:
                    type: string
                displayName:
                    type: string
                preferredLanguage:
                    type: string
                gender:
                    type: integer
                    format: enum
        AddHumanUserResponse:
            type: object
            properties:
                userId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddIAMMemberRequest:
            type: object
            properties:
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        type: string
        AddIAMMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddIDPAuthenticatorResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        AddIDPLinkRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
                idpLink:
                    $ref: '#/components/schemas/IDPLink'
        AddIDPLinkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        AddIDPToLoginPolicyRequest:
            type: object
            properties:
                idpId:
                    type: string
                ownerType:
                    type: integer
                    format: enum
        AddIDPToLoginPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddInstanceRequest:
            type: object
            properties:
                instanceName:
                    type: string
                firstOrgName:
                    type: string
                customDomain:
                    type: string
                ownerUserName:
                    type: string
                ownerEmail:
                    $ref: '#/components/schemas/AddInstanceRequest_Email'
                ownerProfile:
                    $ref: '#/components/schemas/AddInstanceRequest_Profile'
                ownerPassword:
                    $ref: '#/components/schemas/AddInstanceRequest_Password'
                defaultLanguage:
                    type: string
        AddInstanceRequest_Email:
            type: object
            properties:
                email:
                    type: string
                isEmailVerified:
                    type: boolean
        AddInstanceRequest_Password:
            type: object
            properties:
                password:
                    type: string
                passwordChangeRequired:
                    type: boolean
        AddInstanceRequest_Profile:
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                preferredLanguage:
                    type: string
        AddInstanceResponse:
            type: object
            properties:
                instanceId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddInstanceTrustedDomainRequest:
            required:
                - domain
            type: object
            properties:
                domain:
                    type: string
        AddInstanceTrustedDomainResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddJWTIDPRequest:
            required:
                - name
                - jwtEndpoint
                - issuer
                - keysEndpoint
                - headerName
            type: object
            properties:
                name:
                    type: string
                stylingType:
                    type: integer
                    format: enum
                jwtEndpoint:
                    type: string
                issuer:
                    type: string
                keysEndpoint:
                    type: string
                headerName:
                    type: string
                autoRegister:
                    type: boolean
        AddJWTIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                idpId:
                    type: string
        AddJWTProviderRequest:
            type: object
            properties:
                name:
                    type: string
                issuer:
                    type: string
                jwtEndpoint:
                    type: string
                keysEndpoint:
                    type: string
                headerName:
                    type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddJWTProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddLDAPProviderRequest:
            type: object
            properties:
                name:
                    type: string
                servers:
                    type: array
                    items:
                        type: string
                startTls:
                    type: boolean
                baseDn:
                    type: string
                bindDn:
                    type: string
                bindPassword:
                    type: string
                userBase:
                    type: string
                userObjectClasses:
                    type: array
                    items:
                        type: string
                userFilters:
                    type: array
                    items:
                        type: string
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                attributes:
                    $ref: '#/components/schemas/LDAPAttributes'
                providerOptions:
                    $ref: '#/components/schemas/Options'
        AddLDAPProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddMachineKeyRequest:
            type: object
            properties:
                userId:
                    type: string
                type:
                    type: integer
                    format: enum
                expirationDate:
                    type: string
                    format: date-time
                publicKey:
                    type: string
                    format: bytes
        AddMachineKeyResponse:
            type: object
            properties:
                keyId:
                    type: string
                keyDetails:
                    type: string
                    format: bytes
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddMachineUserRequest:
            required:
                - userName
                - name
            type: object
            properties:
                userName:
                    type: string
                name:
                    type: string
                description:
                    type: string
                accessTokenType:
                    type: integer
                    format: enum
                userId:
                    type: string
                    description: optionally set your own id unique for the user.
        AddMachineUserResponse:
            type: object
            properties:
                userId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddMultiFactorToLoginPolicyRequest:
            type: object
            properties:
                type:
                    type: integer
                    format: enum
        AddMultiFactorToLoginPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddMyAuthFactorOTPEmailRequest:
            type: object
            properties: {}
            description: This is an empty request
        AddMyAuthFactorOTPEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddMyAuthFactorOTPRequest:
            type: object
            properties: {}
            description: This is an empty request
        AddMyAuthFactorOTPResponse:
            type: object
            properties:
                url:
                    type: string
                secret:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddMyAuthFactorOTPSMSRequest:
            type: object
            properties: {}
            description: This is an empty request
        AddMyAuthFactorOTPSMSResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddMyAuthFactorU2FRequest:
            type: object
            properties: {}
            description: This is an empty request
        AddMyAuthFactorU2FResponse:
            type: object
            properties:
                key:
                    $ref: '#/components/schemas/WebAuthNKey'
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddMyPasswordlessLinkRequest:
            type: object
            properties: {}
            description: This is an empty request
        AddMyPasswordlessLinkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                link:
                    type: string
                expiration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
        AddMyPasswordlessRequest:
            type: object
            properties: {}
            description: This is an empty request
        AddMyPasswordlessResponse:
            type: object
            properties:
                key:
                    $ref: '#/components/schemas/WebAuthNKey'
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddNotificationPolicyRequest:
            type: object
            properties:
                passwordChange:
                    type: boolean
        AddNotificationPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddOIDCAppRequest:
            required:
                - name
            type: object
            properties:
                projectId:
                    type: string
                name:
                    type: string
                redirectUris:
                    type: array
                    items:
                        type: string
                responseTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                grantTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                appType:
                    type: integer
                    format: enum
                authMethodType:
                    type: integer
                    format: enum
                postLogoutRedirectUris:
                    type: array
                    items:
                        type: string
                version:
                    type: integer
                    format: enum
                devMode:
                    type: boolean
                accessTokenType:
                    type: integer
                    format: enum
                accessTokenRoleAssertion:
                    type: boolean
                idTokenRoleAssertion:
                    type: boolean
                idTokenUserinfoAssertion:
                    type: boolean
                clockSkew:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                additionalOrigins:
                    type: array
                    items:
                        type: string
                skipNativeAppSuccessPage:
                    type: boolean
                backChannelLogoutUri:
                    type: string
                loginVersion:
                    $ref: '#/components/schemas/LoginVersion'
        AddOIDCAppResponse:
            type: object
            properties:
                appId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                clientId:
                    type: string
                clientSecret:
                    type: string
                noneCompliant:
                    type: boolean
                complianceProblems:
                    type: array
                    items:
                        $ref: '#/components/schemas/LocalizedMessage'
        AddOIDCIDPRequest:
            type: object
            properties:
                name:
                    type: string
                stylingType:
                    type: integer
                    format: enum
                clientId:
                    type: string
                clientSecret:
                    type: string
                issuer:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                displayNameMapping:
                    type: integer
                    format: enum
                usernameMapping:
                    type: integer
                    format: enum
                autoRegister:
                    type: boolean
        AddOIDCIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                idpId:
                    type: string
        AddOIDCSettingsRequest:
            type: object
            properties:
                accessTokenLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                idTokenLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                refreshTokenIdleExpiration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                refreshTokenExpiration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
        AddOIDCSettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddOTPEmailAuthenticatorResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                otpEmailId:
                    type: string
                    description: unique identifier of the OTP Email registration.
                verificationCode:
                    type: string
                    description: The OTP verification code will be set if a email was set with a return_code verification option.
        AddOTPEmailRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
        AddOTPEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        AddOTPSMSAuthenticatorResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                otpSmsId:
                    type: string
                    description: unique identifier of the OTP SMS registration.
                verificationCode:
                    type: string
                    description: The OTP verification code will be set if a phone was set with a return_code verification option.
        AddOTPSMSRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
        AddOTPSMSResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        AddOrgDomainRequest:
            required:
                - domain
            type: object
            properties:
                domain:
                    type: string
        AddOrgDomainResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddOrgJWTIDPRequest:
            required:
                - name
                - jwtEndpoint
                - issuer
                - keysEndpoint
                - headerName
            type: object
            properties:
                name:
                    type: string
                stylingType:
                    type: integer
                    format: enum
                jwtEndpoint:
                    type: string
                issuer:
                    type: string
                keysEndpoint:
                    type: string
                headerName:
                    type: string
                autoRegister:
                    type: boolean
        AddOrgJWTIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                idpId:
                    type: string
        AddOrgMemberRequest:
            type: object
            properties:
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        type: string
        AddOrgMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddOrgOIDCIDPRequest:
            required:
                - name
                - clientId
                - clientSecret
                - issuer
            type: object
            properties:
                name:
                    type: string
                stylingType:
                    type: integer
                    format: enum
                clientId:
                    type: string
                clientSecret:
                    type: string
                issuer:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                displayNameMapping:
                    type: integer
                    format: enum
                usernameMapping:
                    type: integer
                    format: enum
                autoRegister:
                    type: boolean
        AddOrgOIDCIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                idpId:
                    type: string
        AddOrgRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
        AddOrgResponse:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddOrganizationRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                admins:
                    type: array
                    items:
                        $ref: '#/components/schemas/AddOrganizationRequest_Admin'
        AddOrganizationRequest_Admin:
            type: object
            properties:
                userId:
                    type: string
                human:
                    $ref: '#/components/schemas/AddHumanUserRequest'
                roles:
                    type: array
                    items:
                        type: string
                    description: specify Org Member Roles for the provided user (default is ORG_OWNER if roles are empty)
        AddOrganizationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                organizationId:
                    type: string
                createdAdmins:
                    type: array
                    items:
                        $ref: '#/components/schemas/AddOrganizationResponse_CreatedAdmin'
        AddOrganizationResponse_CreatedAdmin:
            type: object
            properties:
                userId:
                    type: string
                emailCode:
                    type: string
                phoneCode:
                    type: string
        AddPasswordlessRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                link:
                    type: string
                expiration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
        AddPersonalAccessTokenRequest:
            type: object
            properties:
                userId:
                    type: string
                expirationDate:
                    type: string
                    format: date-time
        AddPersonalAccessTokenResponse:
            type: object
            properties:
                tokenId:
                    type: string
                token:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddProjectGrantMemberRequest:
            required:
                - userId
            type: object
            properties:
                projectId:
                    type: string
                grantId:
                    type: string
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        type: string
        AddProjectGrantMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddProjectGrantRequest:
            type: object
            properties:
                projectId:
                    type: string
                grantedOrgId:
                    type: string
                roleKeys:
                    type: array
                    items:
                        type: string
        AddProjectGrantResponse:
            type: object
            properties:
                grantId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddProjectMemberRequest:
            type: object
            properties:
                projectId:
                    type: string
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        type: string
        AddProjectMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddProjectRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                projectRoleAssertion:
                    type: boolean
                projectRoleCheck:
                    type: boolean
                hasProjectCheck:
                    type: boolean
                privateLabelingSetting:
                    type: integer
                    format: enum
        AddProjectResponse:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddProjectRoleRequest:
            required:
                - roleKey
                - displayName
            type: object
            properties:
                projectId:
                    type: string
                roleKey:
                    type: string
                displayName:
                    type: string
                group:
                    type: string
        AddProjectRoleResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddQuotaRequest:
            type: object
            properties:
                instanceId:
                    type: string
                unit:
                    type: integer
                    description: the unit a quota should be imposed on
                    format: enum
                from:
                    type: string
                    description: the starting time from which the current quota period is calculated from. This is relevant for querying the current usage.
                    format: date-time
                resetInterval:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                    description: the quota periods duration
                amount:
                    type: string
                    description: the quota amount of units
                limit:
                    type: boolean
                    description: whether ZITADEL should block further usage when the configured amount is used
                notifications:
                    type: array
                    items:
                        $ref: '#/components/schemas/Notification'
                    description: the handlers, ZITADEL executes when certain quota percentages are reached
        AddQuotaResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddSAMLAppRequest:
            required:
                - name
            type: object
            properties:
                projectId:
                    type: string
                name:
                    type: string
                metadataXml:
                    type: string
                    format: bytes
                metadataUrl:
                    type: string
        AddSAMLAppResponse:
            type: object
            properties:
                appId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddSAMLProviderRequest:
            type: object
            properties:
                name:
                    type: string
                metadataXml:
                    type: string
                    description: Metadata of the SAML identity provider.
                    format: bytes
                metadataUrl:
                    type: string
                    description: Url to the metadata of the SAML identity provider.
                binding:
                    type: integer
                    description: Binding which defines the type of communication with the identity provider.
                    format: enum
                withSignedRequest:
                    type: boolean
                    description: Boolean which defines if the authentication requests are signed.
                providerOptions:
                    $ref: '#/components/schemas/Options'
                nameIdFormat:
                    type: integer
                    description: Optionally specify the `nameid-format` requested.
                    format: enum
                transientMappingAttributeName:
                    type: string
                    description: |-
                        Optionally specify the name of the attribute, which will be used to map the user
                         in case the nameid-format returned is `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
        AddSAMLProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddSMSProviderHTTPRequest:
            required:
                - endpoint
            type: object
            properties:
                endpoint:
                    type: string
                description:
                    type: string
        AddSMSProviderHTTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddSMSProviderTwilioRequest:
            required:
                - sid
                - token
            type: object
            properties:
                sid:
                    type: string
                token:
                    type: string
                senderNumber:
                    type: string
                description:
                    type: string
                verifyServiceSid:
                    type: string
        AddSMSProviderTwilioResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddSMTPConfigRequest:
            required:
                - senderAddress
                - senderName
                - host
            type: object
            properties:
                senderAddress:
                    type: string
                senderName:
                    type: string
                tls:
                    type: boolean
                host:
                    type: string
                user:
                    type: string
                password:
                    type: string
                replyToAddress:
                    type: string
                description:
                    type: string
        AddSMTPConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        AddSecondFactorToLoginPolicyRequest:
            type: object
            properties:
                type:
                    type: integer
                    format: enum
        AddSecondFactorToLoginPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddUserGrantRequest:
            required:
                - userId
                - projectId
            type: object
            properties:
                userId:
                    type: string
                projectId:
                    type: string
                projectGrantId:
                    type: string
                roleKeys:
                    type: array
                    items:
                        type: string
        AddUserGrantResponse:
            type: object
            properties:
                userGrantId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        AddUsernameResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                usernameId:
                    type: string
                    description: unique identifier of the username.
        Aggregate:
            type: object
            properties:
                id:
                    type: string
                type:
                    $ref: '#/components/schemas/AggregateType'
                resourceOwner:
                    type: string
        AggregateType:
            type: object
            properties:
                type:
                    type: string
                localized:
                    $ref: '#/components/schemas/LocalizedMessage'
        AllProjectGrantQuery:
            type: object
            properties:
                projectNameQuery:
                    $ref: '#/components/schemas/GrantProjectNameQuery'
                roleKeyQuery:
                    $ref: '#/components/schemas/GrantRoleKeyQuery'
                projectIdQuery:
                    $ref: '#/components/schemas/ProjectIDQuery'
                grantedOrgIdQuery:
                    $ref: '#/components/schemas/GrantedOrgIDQuery'
        AndFilter:
            type: object
            properties:
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchFilter'
        AndQuery:
            type: object
            properties:
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchQuery'
            description: Connect multiple sub-condition with and AND operator.
        App:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                state:
                    type: integer
                    format: enum
                name:
                    type: string
                oidcConfig:
                    $ref: '#/components/schemas/OIDCConfig'
                apiConfig:
                    $ref: '#/components/schemas/APIConfig'
                samlConfig:
                    $ref: '#/components/schemas/SAMLConfig'
        AppNameQuery:
            type: object
            properties:
                name:
                    type: string
                method:
                    type: integer
                    format: enum
        AppQuery:
            type: object
            properties:
                nameQuery:
                    $ref: '#/components/schemas/AppNameQuery'
        AppleConfig:
            type: object
            properties:
                clientId:
                    type: string
                    description: Client id (App ID or Service ID) provided by Apple.
                teamId:
                    type: string
                    description: Team ID provided by Apple.
                keyId:
                    type: string
                    description: ID of the private key generated by Apple.
                scopes:
                    type: array
                    items:
                        type: string
                    description: The scopes requested by ZITADEL during the request to Apple.
        AuthFactor:
            type: object
            properties:
                state:
                    type: integer
                    format: enum
                otp:
                    $ref: '#/components/schemas/AuthFactorOTP'
                u2f:
                    $ref: '#/components/schemas/AuthFactorU2F'
                otpSms:
                    $ref: '#/components/schemas/AuthFactorOTPSMS'
                otpEmail:
                    $ref: '#/components/schemas/AuthFactorOTPEmail'
        AuthFactorOTP:
            type: object
            properties: {}
        AuthFactorOTPEmail:
            type: object
            properties: {}
        AuthFactorOTPSMS:
            type: object
            properties: {}
        AuthFactorU2F:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        AuthOption:
            type: object
            properties:
                permission:
                    type: string
                orgField:
                    type: string
        AuthRequest:
            type: object
            properties:
                id:
                    type: string
                creationDate:
                    type: string
                    format: date-time
                clientId:
                    type: string
                scope:
                    type: array
                    items:
                        type: string
                redirectUri:
                    type: string
                prompt:
                    type: array
                    items:
                        type: integer
                        format: enum
                uiLocales:
                    type: array
                    items:
                        type: string
                loginHint:
                    type: string
                maxAge:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                hintUserId:
                    type: string
        AuthenticationKey:
            type: object
            properties:
                authenticationKeyId:
                    type: string
                    description: ID is the read-only unique identifier of the authentication key.
                details:
                    $ref: '#/components/schemas/Details'
                type:
                    type: integer
                    description: the file type of the key
                    format: enum
                expirationDate:
                    type: string
                    description: After the expiration date, the key will no longer be usable for authentication.
                    format: date-time
        AuthenticatorRegistrationCode:
            required:
                - id
                - code
            type: object
            properties:
                id:
                    type: string
                    description: ID to the one time code generated by ZITADEL.
                code:
                    type: string
                    description: one time code generated by ZITADEL.
        Authenticators:
            type: object
            properties:
                usernames:
                    type: array
                    items:
                        $ref: '#/components/schemas/Username'
                    description: All of the user's usernames, which will be used for identification during authentication.
                password:
                    allOf:
                        - $ref: '#/components/schemas/Password'
                    description: If the user has set a password, the time it was last changed will be returned.
                webAuthN:
                    type: array
                    items:
                        $ref: '#/components/schemas/WebAuthN'
                    description: Meta information about the user's WebAuthN authenticators.
                totps:
                    type: array
                    items:
                        $ref: '#/components/schemas/TOTP'
                    description: |-
                        A list of the user's time-based one-time password (TOTP) authenticators,
                         incl. the name for identification.
                otpSms:
                    type: array
                    items:
                        $ref: '#/components/schemas/OTPSMS'
                    description: A list of the user's one-time password (OTP) SMS authenticators.
                otpEmail:
                    type: array
                    items:
                        $ref: '#/components/schemas/OTPEmail'
                    description: A list of the user's one-time password (OTP) Email authenticators.
                authenticationKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthenticationKey'
                    description: A list of the user's authentication keys. They can be used to authenticate e.g. by JWT Profile.
                identityProviders:
                    type: array
                    items:
                        $ref: '#/components/schemas/IdentityProvider'
                    description: A list of the user's linked identity providers (IDPs).
        AuthorizationError:
            type: object
            properties:
                error:
                    type: integer
                    format: enum
                errorDescription:
                    type: string
                errorUri:
                    type: string
        AzureADConfig:
            type: object
            properties:
                clientId:
                    type: string
                    description: Client id of the Azure AD application
                tenant:
                    allOf:
                        - $ref: '#/components/schemas/AzureADTenant'
                    description: Defines what user accounts should be able to login (Personal, Organizational, All).
                emailVerified:
                    type: boolean
                    description: Azure AD doesn't send if the email has been verified. Enable this if the user email should always be added verified in ZITADEL (no verification emails will be sent).
                scopes:
                    type: array
                    items:
                        type: string
                    description: The scopes requested by ZITADEL during the request to Azure AD.
        AzureADTenant:
            type: object
            properties:
                tenantType:
                    type: integer
                    format: enum
                tenantId:
                    type: string
        BrandingSettings:
            type: object
            properties:
                lightTheme:
                    $ref: '#/components/schemas/Theme'
                darkTheme:
                    $ref: '#/components/schemas/Theme'
                fontUrl:
                    type: string
                hideLoginNameSuffix:
                    type: boolean
                    description: hides the org suffix on the login form if the scope \"urn:zitadel:iam:org:domain:primary:{domainname}\" is set
                disableWatermark:
                    type: boolean
                resourceOwnerType:
                    type: integer
                    description: resource_owner_type returns if the setting is managed on the organization or on the instance
                    format: enum
                themeMode:
                    type: integer
                    format: enum
        BulkAddProjectRolesRequest:
            type: object
            properties:
                projectId:
                    type: string
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/BulkAddProjectRolesRequest_Role'
        BulkAddProjectRolesRequest_Role:
            type: object
            properties:
                key:
                    type: string
                displayName:
                    type: string
                group:
                    type: string
        BulkAddProjectRolesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        BulkRemoveOrgMetadataRequest:
            type: object
            properties:
                keys:
                    type: array
                    items:
                        type: string
        BulkRemoveOrgMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        BulkRemoveUserGrantRequest:
            type: object
            properties:
                grantId:
                    type: array
                    items:
                        type: string
        BulkRemoveUserGrantResponse:
            type: object
            properties: {}
        BulkRemoveUserMetadataRequest:
            required:
                - keys
            type: object
            properties:
                id:
                    type: string
                keys:
                    type: array
                    items:
                        type: string
        BulkRemoveUserMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        BulkSetLimitsRequest:
            type: object
            properties:
                limits:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetLimitsRequest'
        BulkSetLimitsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                targetDetails:
                    type: array
                    items:
                        $ref: '#/components/schemas/ObjectDetails'
        BulkSetOrgMetadataRequest:
            type: object
            properties:
                metadata:
                    type: array
                    items:
                        $ref: '#/components/schemas/BulkSetOrgMetadataRequest_Metadata'
        BulkSetOrgMetadataRequest_Metadata:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
                    format: bytes
        BulkSetOrgMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        BulkSetUserMetadataRequest:
            type: object
            properties:
                id:
                    type: string
                metadata:
                    type: array
                    items:
                        $ref: '#/components/schemas/BulkSetUserMetadataRequest_Metadata'
        BulkSetUserMetadataRequest_Metadata:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
                    format: bytes
        BulkSetUserMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        Challenges:
            type: object
            properties:
                webAuthN:
                    $ref: '#/components/schemas/Challenges_WebAuthN'
                otpSms:
                    type: string
                otpEmail:
                    type: string
        Challenges_WebAuthN:
            type: object
            properties:
                publicKeyCredentialRequestOptions:
                    type: object
        Change:
            type: object
            properties:
                changeDate:
                    type: string
                    format: date-time
                eventType:
                    $ref: '#/components/schemas/LocalizedMessage'
                sequence:
                    type: string
                editorId:
                    type: string
                editorDisplayName:
                    type: string
                resourceOwnerId:
                    type: string
                editorPreferredLoginName:
                    type: string
                editorAvatarUrl:
                    type: string
        ChangeQuery:
            type: object
            properties:
                sequence:
                    type: string
                limit:
                    type: integer
                    format: uint32
                asc:
                    type: boolean
        CheckIDPIntent:
            type: object
            properties:
                idpIntentId:
                    type: string
                idpIntentToken:
                    type: string
        CheckOTP:
            type: object
            properties:
                code:
                    type: string
        CheckPassword:
            type: object
            properties:
                password:
                    type: string
        CheckTOTP:
            type: object
            properties:
                code:
                    type: string
        CheckUser:
            type: object
            properties:
                userId:
                    type: string
                loginName:
                    type: string
        CheckWebAuthN:
            required:
                - credentialAssertionData
            type: object
            properties:
                credentialAssertionData:
                    type: object
        Checks:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/CheckUser'
                password:
                    $ref: '#/components/schemas/CheckPassword'
                webAuthN:
                    $ref: '#/components/schemas/CheckWebAuthN'
                idpIntent:
                    $ref: '#/components/schemas/CheckIDPIntent'
                totp:
                    $ref: '#/components/schemas/CheckTOTP'
                otpSms:
                    $ref: '#/components/schemas/CheckOTP'
                otpEmail:
                    $ref: '#/components/schemas/CheckOTP'
        ClearFlowResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ClearViewResponse:
            type: object
            properties: {}
            description: This is an empty response
        Condition:
            type: object
            properties:
                request:
                    allOf:
                        - $ref: '#/components/schemas/RequestExecution'
                    description: Condition-type to execute if a request on the defined API point happens.
                response:
                    allOf:
                        - $ref: '#/components/schemas/ResponseExecution'
                    description: Condition-type to execute on response if a request on the defined API point happens.
                function:
                    allOf:
                        - $ref: '#/components/schemas/FunctionExecution'
                    description: Condition-type to execute if function is used, replaces actions v1.
                event:
                    allOf:
                        - $ref: '#/components/schemas/EventExecution'
                    description: Condition-type to execute if an event is created in the system.
        Contact:
            type: object
            properties:
                name:
                    type: string
                    description: The identifying name of the contact person/organization.
                url:
                    type: string
                    description: |-
                        The URL pointing to the contact information. MUST be in the format of a
                         URL.
                email:
                    type: string
                    description: |-
                        The email address of the contact person/organization. MUST be in the format
                         of an email address.
            description: |-
                `Contact` is a representation of OpenAPI v2 specification's Contact object.

                 See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#contactObject

                 Example:

                  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
                    info: {
                      ...
                      contact: {
                        name: "gRPC-Gateway project";
                        url: "https://github.com/grpc-ecosystem/grpc-gateway";
                        email: "none@example.com";
                      };
                      ...
                    };
                    ...
                  };
        CreateActionRequest:
            required:
                - name
                - script
            type: object
            properties:
                name:
                    type: string
                script:
                    type: string
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                allowedToFail:
                    type: boolean
        CreateActionResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
        CreateCallbackRequest:
            type: object
            properties:
                authRequestId:
                    type: string
                session:
                    $ref: '#/components/schemas/Session'
                error:
                    $ref: '#/components/schemas/AuthorizationError'
        CreateCallbackResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                callbackUrl:
                    type: string
        CreateDebugEventsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        CreateInstanceRequest:
            type: object
            properties:
                instanceName:
                    type: string
                firstOrgName:
                    type: string
                customDomain:
                    type: string
                human:
                    allOf:
                        - $ref: '#/components/schemas/CreateInstanceRequest_Human'
                    description: oneof field for the user managing the instance
                machine:
                    $ref: '#/components/schemas/CreateInstanceRequest_Machine'
                defaultLanguage:
                    type: string
        CreateInstanceRequest_Email:
            type: object
            properties:
                email:
                    type: string
                isEmailVerified:
                    type: boolean
        CreateInstanceRequest_Human:
            type: object
            properties:
                userName:
                    type: string
                email:
                    $ref: '#/components/schemas/CreateInstanceRequest_Email'
                profile:
                    $ref: '#/components/schemas/CreateInstanceRequest_Profile'
                password:
                    $ref: '#/components/schemas/CreateInstanceRequest_Password'
        CreateInstanceRequest_Machine:
            type: object
            properties:
                userName:
                    type: string
                name:
                    type: string
                personalAccessToken:
                    $ref: '#/components/schemas/CreateInstanceRequest_PersonalAccessToken'
                machineKey:
                    $ref: '#/components/schemas/CreateInstanceRequest_MachineKey'
        CreateInstanceRequest_MachineKey:
            type: object
            properties:
                type:
                    type: integer
                    format: enum
                expirationDate:
                    type: string
                    format: date-time
        CreateInstanceRequest_Password:
            type: object
            properties:
                password:
                    type: string
                passwordChangeRequired:
                    type: boolean
        CreateInstanceRequest_PersonalAccessToken:
            type: object
            properties:
                expirationDate:
                    type: string
                    format: date-time
        CreateInstanceRequest_Profile:
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                preferredLanguage:
                    type: string
        CreateInstanceResponse:
            type: object
            properties:
                instanceId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                pat:
                    type: string
                machineKey:
                    type: string
                    format: bytes
        CreateInviteCodeRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
                sendCode:
                    $ref: '#/components/schemas/SendInviteCode'
                returnCode:
                    $ref: '#/components/schemas/ReturnInviteCode'
        CreateInviteCodeResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                inviteCode:
                    type: string
                    description: The invite code is returned if the verification was set to return_code.
        CreatePasskeyRegistrationLinkRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
                sendLink:
                    $ref: '#/components/schemas/SendPasskeyRegistrationLink'
                returnCode:
                    $ref: '#/components/schemas/ReturnPasskeyRegistrationCode'
        CreatePasskeyRegistrationLinkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                code:
                    allOf:
                        - $ref: '#/components/schemas/PasskeyRegistrationCode'
                    description: in case the medium was set to return_code, the code will be returned
        CreateResponseRequest:
            type: object
            properties:
                samlRequestId:
                    type: string
                    description: ID of the SAML Request.
                session:
                    $ref: '#/components/schemas/Session'
                error:
                    allOf:
                        - $ref: '#/components/schemas/AuthorizationError'
                    description: Set this field when the authorization flow failed. It creates a response depending on the SP, with the error details set.
        CreateResponseResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                url:
                    type: string
                    description: URL including the Assertion Consumer Service where the user should be redirected or has to call per POST, depending on the binding. Contains details for the application to obtain the response on success, or error details on failure. Note that this field must be treated as credentials, as the contained SAMLResponse or code can be used on behalve of the user.
                redirect:
                    allOf:
                        - $ref: '#/components/schemas/RedirectResponse'
                    description: Set if the binding is Redirect-Binding, where the user can directly be redirected to the application, using a \"302 FOUND\" status to the URL.
                post:
                    allOf:
                        - $ref: '#/components/schemas/PostResponse'
                    description: Set if the binding is POST-Binding, where the application expects to be called per HTTP POST with the SAMLResponse and RelayState in the form body.
        CreateSessionRequest:
            type: object
            properties:
                checks:
                    $ref: '#/components/schemas/Checks'
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                        format: bytes
                challenges:
                    $ref: '#/components/schemas/RequestChallenges'
                userAgent:
                    $ref: '#/components/schemas/UserAgent'
                lifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
        CreateSessionResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                sessionId:
                    type: string
                sessionToken:
                    type: string
                challenges:
                    $ref: '#/components/schemas/Challenges'
        CreateTargetResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                signingKey:
                    type: string
                    description: Key used to sign and check payload sent to the target.
        CreateUser:
            required:
                - schemaId
            type: object
            properties:
                schemaId:
                    type: string
                    description: Define the schema the user's data schema by providing it's ID.
                data:
                    type: object
                contact:
                    allOf:
                        - $ref: '#/components/schemas/SetContact'
                    description: Set the contact information (email, phone) for the user.
                authenticators:
                    allOf:
                        - $ref: '#/components/schemas/SetAuthenticators'
                    description: Set the initial authenticators of the user.
                userId:
                    type: string
                    description: Optionally set a unique identifier of the user. If unset, ZITADEL will take care of it.
        CreateUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                emailCode:
                    type: string
                    description: The email code will be set if a contact email was set with a return_code verification option.
                phoneCode:
                    type: string
                    description: The phone code will be set if a contact phone was set with a return_code verification option.
        CreateUserSchemaResponse:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/Details'
                    description: Details provide some base information (such as the last change date) of the schema.
        CreateWebAuthNRegistrationLinkRequest:
            required:
                - id
            type: object
            properties:
                instance:
                    $ref: '#/components/schemas/Instance'
                organization:
                    allOf:
                        - $ref: '#/components/schemas/Organization'
                    description: Optionally expect the user to be in this organization.
                id:
                    type: string
                    description: unique identifier of the user.
                sendLink:
                    allOf:
                        - $ref: '#/components/schemas/SendWebAuthNRegistrationLink'
                    description: Let ZITADEL send the link to the user via email.
                returnCode:
                    allOf:
                        - $ref: '#/components/schemas/ReturnWebAuthNRegistrationCode'
                    description: Get the code back to provide it to the user in your preferred mechanism.
        CreateWebAuthNRegistrationLinkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                code:
                    allOf:
                        - $ref: '#/components/schemas/AuthenticatorRegistrationCode'
                    description: In case the medium was set to return_code, the code will be returned.
        CreateWebKeyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        CustomHTTPResponse:
            type: object
            properties:
                successCode:
                    type: integer
                    format: int32
        DataAPIApplication:
            type: object
            properties:
                appId:
                    type: string
                app:
                    $ref: '#/components/schemas/AddAPIAppRequest'
        DataAction:
            type: object
            properties:
                actionId:
                    type: string
                action:
                    $ref: '#/components/schemas/CreateActionRequest'
        DataAppKey:
            type: object
            properties:
                id:
                    type: string
                projectId:
                    type: string
                appId:
                    type: string
                clientId:
                    type: string
                type:
                    type: integer
                    format: enum
                expirationDate:
                    type: string
                    format: date-time
                publicKey:
                    type: string
                    format: bytes
        DataHumanUser:
            type: object
            properties:
                userId:
                    type: string
                user:
                    $ref: '#/components/schemas/ImportHumanUserRequest'
        DataJWTIDP:
            type: object
            properties:
                idpId:
                    type: string
                idp:
                    $ref: '#/components/schemas/AddOrgJWTIDPRequest'
        DataMachineKey:
            type: object
            properties:
                keyId:
                    type: string
                userId:
                    type: string
                type:
                    type: integer
                    format: enum
                expirationDate:
                    type: string
                    format: date-time
                publicKey:
                    type: string
                    format: bytes
        DataMachineUser:
            type: object
            properties:
                userId:
                    type: string
                user:
                    $ref: '#/components/schemas/AddMachineUserRequest'
        DataOIDCApplication:
            type: object
            properties:
                appId:
                    type: string
                app:
                    $ref: '#/components/schemas/AddOIDCAppRequest'
        DataOIDCIDP:
            type: object
            properties:
                idpId:
                    type: string
                idp:
                    $ref: '#/components/schemas/AddOrgOIDCIDPRequest'
        DataOrg:
            type: object
            properties:
                orgId:
                    type: string
                org:
                    $ref: '#/components/schemas/AddOrgRequest'
                domainPolicy:
                    $ref: '#/components/schemas/AddCustomDomainPolicyRequest'
                labelPolicy:
                    $ref: '#/components/schemas/AddCustomLabelPolicyRequest'
                lockoutPolicy:
                    $ref: '#/components/schemas/AddCustomLockoutPolicyRequest'
                loginPolicy:
                    $ref: '#/components/schemas/AddCustomLoginPolicyRequest'
                passwordComplexityPolicy:
                    $ref: '#/components/schemas/AddCustomPasswordComplexityPolicyRequest'
                privacyPolicy:
                    $ref: '#/components/schemas/AddCustomPrivacyPolicyRequest'
                projects:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataProject'
                projectRoles:
                    type: array
                    items:
                        $ref: '#/components/schemas/AddProjectRoleRequest'
                apiApps:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataAPIApplication'
                oidcApps:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataOIDCApplication'
                humanUsers:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataHumanUser'
                machineUsers:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataMachineUser'
                triggerActions:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetTriggerActionsRequest'
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataAction'
                projectGrants:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataProjectGrant'
                userGrants:
                    type: array
                    items:
                        $ref: '#/components/schemas/AddUserGrantRequest'
                orgMembers:
                    type: array
                    items:
                        $ref: '#/components/schemas/AddOrgMemberRequest'
                projectMembers:
                    type: array
                    items:
                        $ref: '#/components/schemas/AddProjectMemberRequest'
                projectGrantMembers:
                    type: array
                    items:
                        $ref: '#/components/schemas/AddProjectGrantMemberRequest'
                userMetadata:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetUserMetadataRequest'
                loginTexts:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomLoginTextsRequest'
                initMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomInitMessageTextRequest'
                passwordResetMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomPasswordResetMessageTextRequest'
                verifyEmailMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomVerifyEmailMessageTextRequest'
                verifyPhoneMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomVerifyPhoneMessageTextRequest'
                domainClaimedMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomDomainClaimedMessageTextRequest'
                passwordlessRegistrationMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomPasswordlessRegistrationMessageTextRequest'
                oidcIdps:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataOIDCIDP'
                jwtIdps:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataJWTIDP'
                userLinks:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDPUserLink'
                domains:
                    type: array
                    items:
                        $ref: '#/components/schemas/Domain'
                appKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataAppKey'
                machineKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataMachineKey'
                verifySmsOtpMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomVerifySMSOTPMessageTextRequest'
                verifyEmailOtpMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomVerifyEmailOTPMessageTextRequest'
                inviteUserMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetCustomInviteUserMessageTextRequest'
        DataProject:
            type: object
            properties:
                projectId:
                    type: string
                project:
                    $ref: '#/components/schemas/AddProjectRequest'
        DataProjectGrant:
            type: object
            properties:
                grantId:
                    type: string
                projectGrant:
                    $ref: '#/components/schemas/AddProjectGrantRequest'
        DeactivateActionRequest:
            type: object
            properties:
                id:
                    type: string
        DeactivateActionResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateAppRequest:
            type: object
            properties:
                projectId:
                    type: string
                appId:
                    type: string
        DeactivateAppResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateEmailProviderRequest:
            type: object
            properties:
                id:
                    type: string
        DeactivateEmailProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateOrgIDPRequest:
            type: object
            properties:
                idpId:
                    type: string
        DeactivateOrgIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateOrgRequest:
            type: object
            properties: {}
            description: This is an empty request
        DeactivateOrgResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateProjectGrantRequest:
            type: object
            properties:
                projectId:
                    type: string
                grantId:
                    type: string
        DeactivateProjectGrantResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateProjectRequest:
            type: object
            properties:
                id:
                    type: string
        DeactivateProjectResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateSMSProviderRequest:
            type: object
            properties:
                id:
                    type: string
        DeactivateSMSProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateSMTPConfigRequest:
            type: object
            properties:
                id:
                    type: string
        DeactivateSMTPConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateUserGrantRequest:
            type: object
            properties:
                userId:
                    type: string
                grantId:
                    type: string
        DeactivateUserGrantResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateUserRequest:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
        DeactivateUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeactivateUserSchemaResponse:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/Details'
                    description: Details provide some base information (such as the last change date) of the schema.
        DebugNotificationProvider:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                compact:
                    type: boolean
        DeleteActionRequest:
            type: object
            properties:
                id:
                    type: string
        DeleteActionResponse:
            type: object
            properties: {}
        DeleteProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        DeleteSessionRequest:
            type: object
            properties:
                sessionId:
                    type: string
                sessionToken:
                    type: string
        DeleteSessionResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        DeleteTargetResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        DeleteUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        DeleteUserSchemaResponse:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/Details'
                    description: Details provide some base information (such as the last change date) of the schema.
        DeleteWebKeyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        Details:
            type: object
            properties:
                sequence:
                    type: string
                    description: |-
                        sequence represents the order of events. It's always counting

                         on read: the sequence of the last event reduced by the projection

                         on manipulation: the timestamp of the event(s) added by the manipulation
                changeDate:
                    type: string
                    description: |-
                        change_date is the timestamp when the object was changed

                         on read: the timestamp of the last event reduced by the projection

                         on manipulation: the timestamp of the event(s) added by the manipulation
                    format: date-time
                resourceOwner:
                    type: string
                    description: resource_owner is the organization or instance_id an object belongs to
        DisplayNameQuery:
            required:
                - displayName
            type: object
            properties:
                displayName:
                    type: string
                method:
                    type: integer
                    format: enum
            description: Query for users with a specific display name.
        Domain:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                domain:
                    type: string
                primary:
                    type: boolean
                generated:
                    type: boolean
        DomainGeneratedQuery:
            type: object
            properties:
                generated:
                    type: boolean
            description: DomainGeneratedQuery is always equals
        DomainPolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                userLoginMustBeDomain:
                    type: boolean
                isDefault:
                    type: boolean
                validateOrgDomains:
                    type: boolean
                smtpSenderAddressMatchesInstanceDomain:
                    type: boolean
        DomainPrimaryQuery:
            type: object
            properties:
                primary:
                    type: boolean
            description: DomainPrimaryQuery is always equals
        DomainQuery:
            type: object
            properties:
                domain:
                    type: string
                method:
                    type: integer
                    format: enum
        DomainSearchQuery:
            type: object
            properties:
                domainQuery:
                    $ref: '#/components/schemas/DomainQuery'
                generatedQuery:
                    $ref: '#/components/schemas/DomainGeneratedQuery'
                primaryQuery:
                    $ref: '#/components/schemas/DomainPrimaryQuery'
        DomainSettings:
            type: object
            properties:
                loginNameIncludesDomain:
                    type: boolean
                requireOrgDomainVerification:
                    type: boolean
                smtpSenderAddressMatchesInstanceDomain:
                    type: boolean
                resourceOwnerType:
                    type: integer
                    description: resource_owner_type returns if the setting is managed on the organization or on the instance
                    format: enum
        DomainsQuery:
            type: object
            properties:
                domains:
                    type: array
                    items:
                        type: string
        Editor:
            type: object
            properties:
                userId:
                    type: string
                displayName:
                    type: string
                service:
                    type: string
        Email:
            type: object
            properties:
                address:
                    type: string
                    description: Email address of the user.
                isVerified:
                    type: boolean
                    description: IsVerified states if the email address has been verified to belong to the user.
        EmailFilter:
            required:
                - address
            type: object
            properties:
                address:
                    type: string
                    description: Defines the email of the user to query for.
                method:
                    type: integer
                    description: Defines which text comparison method used for the email query.
                    format: enum
        EmailProvider:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
                state:
                    type: integer
                    format: enum
                description:
                    type: string
                smtp:
                    $ref: '#/components/schemas/EmailProviderSMTP'
                http:
                    $ref: '#/components/schemas/EmailProviderHTTP'
        EmailProviderHTTP:
            type: object
            properties:
                endpoint:
                    type: string
        EmailProviderSMTP:
            type: object
            properties:
                senderAddress:
                    type: string
                senderName:
                    type: string
                tls:
                    type: boolean
                host:
                    type: string
                user:
                    type: string
                replyToAddress:
                    type: string
        EmailQuery:
            required:
                - emailAddress
            type: object
            properties:
                emailAddress:
                    type: string
                method:
                    type: integer
                    format: enum
            description: Query for users with a specific email.
        EmailVerificationDoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                nextButtonText:
                    type: string
                cancelButtonText:
                    type: string
                loginButtonText:
                    type: string
        EmailVerificationScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                codeLabel:
                    type: string
                nextButtonText:
                    type: string
                resendButtonText:
                    type: string
        EmbeddedIframeSettings:
            type: object
            properties:
                enabled:
                    type: boolean
                allowedOrigins:
                    type: array
                    items:
                        type: string
        Event:
            type: object
            properties:
                editor:
                    $ref: '#/components/schemas/Editor'
                aggregate:
                    $ref: '#/components/schemas/Aggregate'
                sequence:
                    type: string
                creationDate:
                    type: string
                    format: date-time
                payload:
                    type: object
                type:
                    $ref: '#/components/schemas/EventType'
        EventExecution:
            type: object
            properties:
                event:
                    type: string
                    description: Event name as condition.
                group:
                    type: string
                    description: Event group as condition, all events under this group.
                all:
                    type: boolean
                    description: all events as condition.
        EventType:
            type: object
            properties:
                type:
                    type: string
                localized:
                    $ref: '#/components/schemas/LocalizedMessage'
        Execution:
            type: object
            properties:
                targets:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExecutionTargetType'
                    description: Ordered list of targets/includes called during the execution.
        ExecutionSearchFilter:
            type: object
            properties:
                inConditionsFilter:
                    $ref: '#/components/schemas/InConditionsFilter'
                executionTypeFilter:
                    $ref: '#/components/schemas/ExecutionTypeFilter'
                targetFilter:
                    $ref: '#/components/schemas/TargetFilter'
                includeFilter:
                    $ref: '#/components/schemas/IncludeFilter'
        ExecutionTargetType:
            type: object
            properties:
                target:
                    type: string
                    description: Unique identifier of existing target to call.
                include:
                    allOf:
                        - $ref: '#/components/schemas/Condition'
                    description: Unique identifier of existing execution to include targets of.
        ExecutionTypeFilter:
            type: object
            properties:
                executionType:
                    type: integer
                    description: Defines the type to query for.
                    format: enum
        ExistsDomainRequest:
            type: object
            properties:
                domain:
                    type: string
        ExistsDomainResponse:
            type: object
            properties:
                exists:
                    type: boolean
        ExportDataRequest:
            type: object
            properties:
                orgIds:
                    type: array
                    items:
                        type: string
                excludedOrgIds:
                    type: array
                    items:
                        type: string
                withPasswords:
                    type: boolean
                withOtp:
                    type: boolean
                responseOutput:
                    type: boolean
                localOutput:
                    $ref: '#/components/schemas/ExportDataRequest_LocalOutput'
                s3Output:
                    $ref: '#/components/schemas/ExportDataRequest_S3Output'
                gcsOutput:
                    $ref: '#/components/schemas/ExportDataRequest_GCSOutput'
                timeout:
                    type: string
        ExportDataRequest_GCSOutput:
            type: object
            properties:
                bucket:
                    type: string
                serviceaccountJson:
                    type: string
                path:
                    type: string
        ExportDataRequest_LocalOutput:
            type: object
            properties:
                path:
                    type: string
        ExportDataRequest_S3Output:
            type: object
            properties:
                path:
                    type: string
                endpoint:
                    type: string
                accessKeyId:
                    type: string
                secretAccessKey:
                    type: string
                ssl:
                    type: boolean
                bucket:
                    type: string
        ExportDataResponse:
            type: object
            properties:
                orgs:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataOrg'
        ExternalRegistrationUserOverviewScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                emailLabel:
                    type: string
                usernameLabel:
                    type: string
                firstnameLabel:
                    type: string
                lastnameLabel:
                    type: string
                nicknameLabel:
                    type: string
                languageLabel:
                    type: string
                phoneLabel:
                    type: string
                tosAndPrivacyLabel:
                    type: string
                tosConfirm:
                    type: string
                tosLinkText:
                    type: string
                privacyLinkText:
                    type: string
                backButtonText:
                    type: string
                nextButtonText:
                    type: string
                privacyConfirm:
                    type: string
        ExternalUserNotFoundScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                linkButtonText:
                    type: string
                autoRegisterButtonText:
                    type: string
                tosAndPrivacyLabel:
                    type: string
                tosConfirm:
                    type: string
                tosLinkText:
                    type: string
                privacyLinkText:
                    type: string
                privacyConfirm:
                    type: string
        FailedEvent:
            type: object
            properties:
                database:
                    type: string
                viewName:
                    type: string
                failedSequence:
                    type: string
                failureCount:
                    type: string
                errorMessage:
                    type: string
                lastFailed:
                    type: string
                    format: date-time
        FeatureFlag:
            type: object
            properties:
                enabled:
                    type: boolean
                source:
                    type: integer
                    format: enum
            description: FeatureFlag is a simple boolean Feature setting, without further payload.
        FirstNameQuery:
            required:
                - firstName
            type: object
            properties:
                firstName:
                    type: string
                method:
                    type: integer
                    format: enum
            description: Query for users with a specific first name.
        Flow:
            type: object
            properties:
                type:
                    allOf:
                        - $ref: '#/components/schemas/FlowType'
                    description: id of the flow type
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                state:
                    type: integer
                    format: enum
                triggerActions:
                    type: array
                    items:
                        $ref: '#/components/schemas/TriggerAction'
        FlowType:
            type: object
            properties:
                id:
                    type: string
                    description: identifier of the type
                name:
                    allOf:
                        - $ref: '#/components/schemas/LocalizedMessage'
                    description: key and name of the type
        FooterText:
            type: object
            properties:
                tos:
                    type: string
                privacyPolicy:
                    type: string
                help:
                    type: string
                supportEmail:
                    type: string
        FunctionExecution:
            type: object
            properties:
                name:
                    type: string
            description: Executed on the specified function
        GenerateMachineSecretRequest:
            type: object
            properties:
                userId:
                    type: string
        GenerateMachineSecretResponse:
            type: object
            properties:
                clientId:
                    type: string
                clientSecret:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        GenerateOrgDomainValidationRequest:
            type: object
            properties:
                domain:
                    type: string
                type:
                    type: integer
                    format: enum
        GenerateOrgDomainValidationResponse:
            type: object
            properties:
                token:
                    type: string
                url:
                    type: string
        GenericOIDCConfig:
            type: object
            properties:
                issuer:
                    type: string
                    description: The OIDC issuer of the identity provider.
                clientId:
                    type: string
                    description: Client id generated by the identity provider.
                scopes:
                    type: array
                    items:
                        type: string
                    description: The scopes requested by ZITADEL during the request on the identity provider.
                isIdTokenMapping:
                    type: boolean
                    description: If true, provider information get mapped from the id token, not from the userinfo endpoint.
        GetActionResponse:
            type: object
            properties:
                action:
                    $ref: '#/components/schemas/Action'
        GetActiveIdentityProvidersResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                identityProviders:
                    type: array
                    items:
                        $ref: '#/components/schemas/IdentityProvider'
        GetAllowedLanguagesResponse:
            type: object
            properties:
                languages:
                    type: array
                    items:
                        type: string
        GetAppByIDResponse:
            type: object
            properties:
                app:
                    $ref: '#/components/schemas/App'
        GetAppKeyResponse:
            type: object
            properties:
                key:
                    $ref: '#/components/schemas/Key'
        GetAuthRequestResponse:
            type: object
            properties:
                authRequest:
                    $ref: '#/components/schemas/AuthRequest'
        GetBrandingSettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                settings:
                    $ref: '#/components/schemas/BrandingSettings'
        GetCustomDomainClaimedMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetCustomDomainPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/DomainPolicy'
                isDefault:
                    type: boolean
                    description: 'deprecated: is_default is also defined in zitadel.policy.v1.DomainPolicy'
        GetCustomInitMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetCustomInviteUserMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetCustomLoginTextsResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/LoginCustomText'
        GetCustomOrgIAMPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/OrgIAMPolicy'
                isDefault:
                    type: boolean
                    description: 'deprecated: is_default is also defined in zitadel.policy.v1.OrgIAMPolicy'
        GetCustomPasswordChangeMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetCustomPasswordResetMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetCustomPasswordlessRegistrationMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetCustomVerifyEmailMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetCustomVerifyEmailOTPMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetCustomVerifyPhoneMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetCustomVerifySMSOTPMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDebugEventsStateByIdResponse:
            type: object
            properties:
                state:
                    $ref: '#/components/schemas/State'
        GetDefaultDomainClaimedMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDefaultInitMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDefaultInviteUserMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDefaultLabelPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/LabelPolicy'
        GetDefaultLanguageResponse:
            type: object
            properties:
                language:
                    type: string
        GetDefaultLockoutPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/LockoutPolicy'
        GetDefaultLoginPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/LoginPolicy'
        GetDefaultLoginTextsResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/LoginCustomText'
        GetDefaultNotificationPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/NotificationPolicy'
        GetDefaultOrgResponse:
            type: object
            properties:
                org:
                    $ref: '#/components/schemas/Org'
        GetDefaultPasswordAgePolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/PasswordAgePolicy'
        GetDefaultPasswordChangeMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDefaultPasswordComplexityPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/PasswordComplexityPolicy'
        GetDefaultPasswordResetMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDefaultPasswordlessRegistrationMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDefaultPrivacyPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/PrivacyPolicy'
        GetDefaultVerifyEmailMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDefaultVerifyEmailOTPMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDefaultVerifyPhoneMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDefaultVerifySMSOTPMessageTextResponse:
            type: object
            properties:
                customText:
                    $ref: '#/components/schemas/MessageCustomText'
        GetDomainPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/DomainPolicy'
        GetDomainSettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                settings:
                    $ref: '#/components/schemas/DomainSettings'
        GetEmailProviderByIdResponse:
            type: object
            properties:
                config:
                    $ref: '#/components/schemas/EmailProvider'
        GetEmailProviderResponse:
            type: object
            properties:
                config:
                    $ref: '#/components/schemas/EmailProvider'
        GetExecution:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                condition:
                    $ref: '#/components/schemas/Condition'
                execution:
                    $ref: '#/components/schemas/Execution'
        GetFileSystemNotificationProviderResponse:
            type: object
            properties:
                provider:
                    $ref: '#/components/schemas/DebugNotificationProvider'
        GetFlowResponse:
            type: object
            properties:
                flow:
                    $ref: '#/components/schemas/Flow'
        GetGeneralSettingsResponse:
            type: object
            properties:
                defaultOrgId:
                    type: string
                defaultLanguage:
                    type: string
                supportedLanguages:
                    type: array
                    items:
                        type: string
        GetGrantedProjectByIDResponse:
            type: object
            properties:
                grantedProject:
                    $ref: '#/components/schemas/GrantedProject'
        GetHumanEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                email:
                    $ref: '#/components/schemas/Email'
        GetHumanPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                phone:
                    $ref: '#/components/schemas/Phone'
        GetHumanProfileResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                profile:
                    $ref: '#/components/schemas/Profile'
        GetIAMResponse:
            type: object
            properties:
                globalOrgId:
                    type: string
                    description: 'deprecated: use default_org_id instead'
                iamProjectId:
                    type: string
                defaultOrgId:
                    type: string
        GetIDPByIDResponse:
            type: object
            properties:
                idp:
                    $ref: '#/components/schemas/IDP'
        GetIdentityProviderIntentResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                idpInformation:
                    allOf:
                        - $ref: '#/components/schemas/IDPInformation'
                    description: |-
                        Information returned by the identity provider (IDP) such as the identification of the user
                         and detailed / profile information.
                id:
                    type: string
                    description: If the user was already federated and linked to a ZITADEL user, it's id will be returned.
        GetInstanceFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                loginDefaultOrg:
                    $ref: '#/components/schemas/FeatureFlag'
                oidcTriggerIntrospectionProjections:
                    $ref: '#/components/schemas/FeatureFlag'
                oidcLegacyIntrospection:
                    $ref: '#/components/schemas/FeatureFlag'
                userSchema:
                    $ref: '#/components/schemas/FeatureFlag'
                oidcTokenExchange:
                    $ref: '#/components/schemas/FeatureFlag'
                actions:
                    $ref: '#/components/schemas/FeatureFlag'
                improvedPerformance:
                    $ref: '#/components/schemas/ImprovedPerformanceFeatureFlag'
                webKey:
                    $ref: '#/components/schemas/FeatureFlag'
                debugOidcParentError:
                    $ref: '#/components/schemas/FeatureFlag'
                oidcSingleV1SessionTermination:
                    $ref: '#/components/schemas/FeatureFlag'
                disableUserTokenEvent:
                    $ref: '#/components/schemas/FeatureFlag'
                enableBackChannelLogout:
                    $ref: '#/components/schemas/FeatureFlag'
                loginV2:
                    $ref: '#/components/schemas/LoginV2FeatureFlag'
        GetInstanceResponse:
            type: object
            properties:
                instance:
                    $ref: '#/components/schemas/InstanceDetail'
        GetLabelPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/LabelPolicy'
                isDefault:
                    type: boolean
                    description: 'deprecated: is_default is also defined in zitadel.policy.v1.LabelPolicy'
        GetLegalAndSupportSettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                settings:
                    $ref: '#/components/schemas/LegalAndSupportSettings'
        GetLockoutPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/LockoutPolicy'
                isDefault:
                    type: boolean
                    description: 'deprecated: is_default is also defined in zitadel.policy.v1.LockoutPolicy'
        GetLockoutSettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                settings:
                    $ref: '#/components/schemas/LockoutSettings'
        GetLogNotificationProviderResponse:
            type: object
            properties:
                provider:
                    $ref: '#/components/schemas/DebugNotificationProvider'
        GetLoginPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/LoginPolicy'
                isDefault:
                    type: boolean
                    description: 'deprecated: is_default is also defined in zitadel.policy.v1.LoginPolicy'
        GetLoginSettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                settings:
                    $ref: '#/components/schemas/LoginSettings'
        GetMachineKeyByIDsResponse:
            type: object
            properties:
                key:
                    $ref: '#/components/schemas/Key'
        GetMyEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                email:
                    $ref: '#/components/schemas/Email'
        GetMyInstanceResponse:
            type: object
            properties:
                instance:
                    $ref: '#/components/schemas/InstanceDetail'
        GetMyLabelPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/LabelPolicy'
        GetMyLoginPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/LoginPolicy'
        GetMyMetadataResponse:
            type: object
            properties:
                metadata:
                    $ref: '#/components/schemas/Metadata'
        GetMyOrgResponse:
            type: object
            properties:
                org:
                    $ref: '#/components/schemas/Org'
        GetMyPasswordComplexityPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/PasswordComplexityPolicy'
        GetMyPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                phone:
                    $ref: '#/components/schemas/Phone'
        GetMyPrivacyPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/PrivacyPolicy'
        GetMyProfileResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                profile:
                    $ref: '#/components/schemas/Profile'
        GetMyUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
                lastLogin:
                    type: string
                    format: date-time
        GetNotificationPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/NotificationPolicy'
        GetOIDCInformationResponse:
            type: object
            properties:
                issuer:
                    type: string
                discoveryEndpoint:
                    type: string
        GetOIDCSettingsResponse:
            type: object
            properties:
                settings:
                    $ref: '#/components/schemas/OIDCSettings'
        GetOrgByDomainGlobalResponse:
            type: object
            properties:
                org:
                    $ref: '#/components/schemas/Org'
        GetOrgByIDResponse:
            type: object
            properties:
                org:
                    $ref: '#/components/schemas/Org'
        GetOrgIAMPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/OrgIAMPolicy'
        GetOrgIDPByIDResponse:
            type: object
            properties:
                idp:
                    $ref: '#/components/schemas/IDP'
        GetOrgMetadataResponse:
            type: object
            properties:
                metadata:
                    $ref: '#/components/schemas/Metadata'
        GetOrganizationFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        GetPasswordAgePolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/PasswordAgePolicy'
                isDefault:
                    type: boolean
                    description: 'deprecated: is_default is also defined in zitadel.policy.v1.PasswordAgePolicy'
        GetPasswordComplexityPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/PasswordComplexityPolicy'
                isDefault:
                    type: boolean
                    description: 'deprecated: is_default is also defined in zitadel.policy.v1.PasswordComplexityPolicy'
        GetPasswordComplexitySettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                settings:
                    $ref: '#/components/schemas/PasswordComplexitySettings'
        GetPasswordExpirySettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                settings:
                    $ref: '#/components/schemas/PasswordExpirySettings'
        GetPersonalAccessTokenByIDsResponse:
            type: object
            properties:
                token:
                    $ref: '#/components/schemas/PersonalAccessToken'
        GetPreviewLabelPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/LabelPolicy'
                isDefault:
                    type: boolean
                    description: 'deprecated: is_default is also defined in zitadel.policy.v1.LabelPolicy'
        GetPrivacyPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/PrivacyPolicy'
        GetProjectByIDResponse:
            type: object
            properties:
                project:
                    $ref: '#/components/schemas/Project'
        GetProjectGrantByIDResponse:
            type: object
            properties:
                projectGrant:
                    $ref: '#/components/schemas/GrantedProject'
        GetProviderByIDResponse:
            type: object
            properties:
                idp:
                    $ref: '#/components/schemas/Provider'
        GetRestrictionsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                disallowPublicOrgRegistration:
                    type: boolean
                allowedLanguages:
                    type: array
                    items:
                        type: string
        GetSAMLRequestResponse:
            type: object
            properties:
                samlRequest:
                    $ref: '#/components/schemas/SAMLRequest'
        GetSMSProviderResponse:
            type: object
            properties:
                config:
                    $ref: '#/components/schemas/SMSProvider'
        GetSMTPConfigByIdResponse:
            type: object
            properties:
                smtpConfig:
                    $ref: '#/components/schemas/SMTPConfig'
        GetSMTPConfigResponse:
            type: object
            properties:
                smtpConfig:
                    $ref: '#/components/schemas/SMTPConfig'
        GetSchema:
            type: object
            properties:
                id:
                    type: string
                    description: The unique identifier of the user schema.
                type:
                    type: string
                    description: The human readable name of the user schema.
                revision:
                    type: integer
                    description: The revision the user's data is based on of the revision.
                    format: uint32
        GetSecretGeneratorResponse:
            type: object
            properties:
                secretGenerator:
                    $ref: '#/components/schemas/SecretGenerator'
        GetSecurityPolicyResponse:
            type: object
            properties:
                policy:
                    $ref: '#/components/schemas/SecurityPolicy'
        GetSecuritySettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                settings:
                    $ref: '#/components/schemas/SecuritySettings'
        GetSessionResponse:
            type: object
            properties:
                session:
                    $ref: '#/components/schemas/Session'
        GetSupportedLanguagesResponse:
            type: object
            properties:
                languages:
                    type: array
                    items:
                        type: string
        GetSystemFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                loginDefaultOrg:
                    $ref: '#/components/schemas/FeatureFlag'
                oidcTriggerIntrospectionProjections:
                    $ref: '#/components/schemas/FeatureFlag'
                oidcLegacyIntrospection:
                    $ref: '#/components/schemas/FeatureFlag'
                userSchema:
                    $ref: '#/components/schemas/FeatureFlag'
                oidcTokenExchange:
                    $ref: '#/components/schemas/FeatureFlag'
                actions:
                    $ref: '#/components/schemas/FeatureFlag'
                improvedPerformance:
                    $ref: '#/components/schemas/ImprovedPerformanceFeatureFlag'
                oidcSingleV1SessionTermination:
                    $ref: '#/components/schemas/FeatureFlag'
                disableUserTokenEvent:
                    $ref: '#/components/schemas/FeatureFlag'
                enableBackChannelLogout:
                    $ref: '#/components/schemas/FeatureFlag'
                loginV2:
                    $ref: '#/components/schemas/LoginV2FeatureFlag'
        GetTarget:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                config:
                    $ref: '#/components/schemas/Target'
                signingKey:
                    type: string
        GetTargetResponse:
            type: object
            properties:
                target:
                    $ref: '#/components/schemas/GetTarget'
        GetUser:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/Details'
                    description: Details provide some base information (such as the last change date) of the user.
                schema:
                    allOf:
                        - $ref: '#/components/schemas/GetSchema'
                    description: The schema the user and it's data is based on.
                data:
                    type: object
                contact:
                    allOf:
                        - $ref: '#/components/schemas/Contact'
                    description: Contact information for the user. ZITADEL will use this in case of internal notifications.
                authenticators:
                    allOf:
                        - $ref: '#/components/schemas/Authenticators'
                    description: |-
                        The user's authenticators. They are used to identify and authenticate the user
                         during the authentication process.
                state:
                    type: integer
                    description: State of the user.
                    format: enum
        GetUserByIDResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        GetUserByLoginNameGlobalResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        GetUserFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        GetUserGrantByIDResponse:
            type: object
            properties:
                userGrant:
                    $ref: '#/components/schemas/UserGrant'
        GetUserMetadataResponse:
            type: object
            properties:
                metadata:
                    $ref: '#/components/schemas/Metadata'
        GetUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/GetUser'
        GetUserSchema:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/Details'
                    description: Details provide some base information (such as the last change date) of the schema.
                config:
                    $ref: '#/components/schemas/UserSchema'
                state:
                    type: integer
                    description: Current state of the schema.
                    format: enum
                revision:
                    type: integer
                    description: Revision is a read only version of the schema, each update of the `schema`-field increases the revision.
                    format: uint32
        GetUserSchemaResponse:
            type: object
            properties:
                userSchema:
                    $ref: '#/components/schemas/GetUserSchema'
        GetWebKey:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                config:
                    $ref: '#/components/schemas/WebKey'
                state:
                    type: integer
                    format: enum
        GitHubConfig:
            type: object
            properties:
                clientId:
                    type: string
                    description: The client ID of the GitHub App.
                scopes:
                    type: array
                    items:
                        type: string
                    description: The scopes requested by ZITADEL during the request to GitHub.
        GitHubEnterpriseServerConfig:
            type: object
            properties:
                clientId:
                    type: string
                    description: The client ID of the GitHub App.
                authorizationEndpoint:
                    type: string
                tokenEndpoint:
                    type: string
                userEndpoint:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                    description: The scopes requested by ZITADEL during the request to GitHub.
        GitLabConfig:
            type: object
            properties:
                clientId:
                    type: string
                    description: Client id of the GitLab application.
                scopes:
                    type: array
                    items:
                        type: string
                    description: The scopes requested by ZITADEL during the request to GitLab.
        GitLabSelfHostedConfig:
            type: object
            properties:
                issuer:
                    type: string
                clientId:
                    type: string
                    description: Client id of the GitLab application.
                scopes:
                    type: array
                    items:
                        type: string
                    description: The scopes requested by ZITADEL during the request to GitLab.
        GoogleConfig:
            type: object
            properties:
                clientId:
                    type: string
                    description: Client id of the Google application.
                scopes:
                    type: array
                    items:
                        type: string
                    description: The scopes requested by ZITADEL during the request to Google.
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        GrantProjectNameQuery:
            type: object
            properties:
                name:
                    type: string
                method:
                    type: integer
                    format: enum
        GrantRoleKeyQuery:
            type: object
            properties:
                roleKey:
                    type: string
                method:
                    type: integer
                    format: enum
        GrantedOrgIDQuery:
            type: object
            properties:
                grantedOrgId:
                    type: string
        GrantedProject:
            type: object
            properties:
                grantId:
                    type: string
                grantedOrgId:
                    type: string
                grantedOrgName:
                    type: string
                grantedRoleKeys:
                    type: array
                    items:
                        type: string
                state:
                    type: integer
                    format: enum
                projectId:
                    type: string
                projectName:
                    type: string
                projectOwnerId:
                    type: string
                projectOwnerName:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        HTTPConfig:
            type: object
            properties:
                endpoint:
                    type: string
        HashedPassword:
            required:
                - hash
            type: object
            properties:
                hash:
                    type: string
                changeRequired:
                    type: boolean
        HealthzResponse:
            type: object
            properties: {}
            description: This is an empty response
        HumanEmail:
            type: object
            properties:
                email:
                    type: string
                isVerified:
                    type: boolean
        HumanPhone:
            type: object
            properties:
                phone:
                    type: string
                isVerified:
                    type: boolean
        HumanProfile:
            type: object
            properties:
                givenName:
                    type: string
                familyName:
                    type: string
                nickName:
                    type: string
                displayName:
                    type: string
                preferredLanguage:
                    type: string
                gender:
                    type: integer
                    format: enum
                avatarUrl:
                    type: string
        HumanUser:
            type: object
            properties:
                userId:
                    type: string
                    description: Unique identifier of the user.
                state:
                    type: integer
                    description: State of the user, for example active, inactive, locked, deleted, initial.
                    format: enum
                username:
                    type: string
                    description: Username of the user, which can be globally unique or unique on organization level.
                loginNames:
                    type: array
                    items:
                        type: string
                    description: Possible usable login names for the user.
                preferredLoginName:
                    type: string
                    description: Preferred login name of the user.
                profile:
                    allOf:
                        - $ref: '#/components/schemas/HumanProfile'
                    description: Profile information of the user.
                email:
                    allOf:
                        - $ref: '#/components/schemas/HumanEmail'
                    description: Email of the user, if defined.
                phone:
                    allOf:
                        - $ref: '#/components/schemas/HumanPhone'
                    description: Phone of the user, if defined.
                passwordChangeRequired:
                    type: boolean
                    description: User is required to change the used password on the next login.
                passwordChanged:
                    type: string
                    description: The time the user last changed their password.
                    format: date-time
        Human_Email:
            type: object
            properties:
                email:
                    type: string
                isEmailVerified:
                    type: boolean
        Human_Phone:
            type: object
            properties:
                phone:
                    type: string
                    description: has to be a global number
                isPhoneVerified:
                    type: boolean
        Human_Profile:
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                nickName:
                    type: string
                displayName:
                    type: string
                preferredLanguage:
                    type: string
                gender:
                    type: integer
                    format: enum
        IDP:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for the identity provider.
                details:
                    $ref: '#/components/schemas/Details'
                state:
                    type: integer
                    description: Current state of the identity provider.
                    format: enum
                name:
                    type: string
                type:
                    type: integer
                    description: Type of the identity provider, for example OIDC, JWT, LDAP and SAML.
                    format: enum
                config:
                    allOf:
                        - $ref: '#/components/schemas/IDPConfig'
                    description: Configuration for the type of the identity provider.
        IDPAuthenticator:
            required:
                - idpId
                - userId
                - userName
            type: object
            properties:
                idpId:
                    type: string
                    description: ID of the identity provider
                userId:
                    type: string
                    description: ID of the user provided by the identity provider
                userName:
                    type: string
                    description: Username of the user provided by the identity provider.
        IDPConfig:
            type: object
            properties:
                options:
                    $ref: '#/components/schemas/Options'
                ldap:
                    $ref: '#/components/schemas/LDAPConfig'
                google:
                    $ref: '#/components/schemas/GoogleConfig'
                oauth:
                    $ref: '#/components/schemas/OAuthConfig'
                oidc:
                    $ref: '#/components/schemas/GenericOIDCConfig'
                jwt:
                    $ref: '#/components/schemas/JWTConfig'
                github:
                    $ref: '#/components/schemas/GitHubConfig'
                githubEs:
                    $ref: '#/components/schemas/GitHubEnterpriseServerConfig'
                gitlab:
                    $ref: '#/components/schemas/GitLabConfig'
                gitlabSelfHosted:
                    $ref: '#/components/schemas/GitLabSelfHostedConfig'
                azureAd:
                    $ref: '#/components/schemas/AzureADConfig'
                apple:
                    $ref: '#/components/schemas/AppleConfig'
                saml:
                    $ref: '#/components/schemas/SAMLConfig'
        IDPIDQuery:
            type: object
            properties:
                id:
                    type: string
        IDPInformation:
            type: object
            properties:
                oauth:
                    $ref: '#/components/schemas/IDPOAuthAccessInformation'
                ldap:
                    $ref: '#/components/schemas/IDPLDAPAccessInformation'
                saml:
                    $ref: '#/components/schemas/IDPSAMLAccessInformation'
                idpId:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                rawInformation:
                    type: object
        IDPIntent:
            type: object
            properties:
                idpIntentId:
                    type: string
                idpIntentToken:
                    type: string
                userId:
                    type: string
        IDPLDAPAccessInformation:
            type: object
            properties:
                attributes:
                    type: object
        IDPLink:
            type: object
            properties:
                idpId:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
        IDPLoginPolicyLink:
            type: object
            properties:
                idpId:
                    type: string
                idpName:
                    type: string
                idpType:
                    type: integer
                    format: enum
        IDPNameQuery:
            type: object
            properties:
                name:
                    type: string
                method:
                    type: integer
                    format: enum
        IDPOAuthAccessInformation:
            type: object
            properties:
                accessToken:
                    type: string
                idToken:
                    type: string
        IDPOwnerTypeQuery:
            type: object
            properties:
                ownerType:
                    type: integer
                    format: enum
        IDPQuery:
            type: object
            properties:
                idpIdQuery:
                    $ref: '#/components/schemas/IDPIDQuery'
                idpNameQuery:
                    $ref: '#/components/schemas/IDPNameQuery'
                ownerTypeQuery:
                    $ref: '#/components/schemas/IDPOwnerTypeQuery'
        IDPSAMLAccessInformation:
            type: object
            properties:
                assertion:
                    type: string
                    format: bytes
        IDPUserLink:
            type: object
            properties:
                userId:
                    type: string
                idpId:
                    type: string
                idpName:
                    type: string
                providedUserId:
                    type: string
                providedUserName:
                    type: string
                idpType:
                    type: integer
                    format: enum
        IdentityProvider:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                type:
                    type: integer
                    format: enum
        IdsQuery:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: string
            description: IdQuery always equals
        ImportDataError:
            type: object
            properties:
                type:
                    type: string
                id:
                    type: string
                message:
                    type: string
        ImportDataOrg:
            type: object
            properties:
                orgs:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataOrg'
        ImportDataRequest:
            type: object
            properties:
                dataOrgs:
                    $ref: '#/components/schemas/ImportDataOrg'
                dataOrgsv1:
                    $ref: '#/components/schemas/ImportDataOrg'
                dataOrgsLocal:
                    $ref: '#/components/schemas/ImportDataRequest_LocalInput'
                dataOrgsv1Local:
                    $ref: '#/components/schemas/ImportDataRequest_LocalInput'
                dataOrgsS3:
                    $ref: '#/components/schemas/ImportDataRequest_S3Input'
                dataOrgsv1S3:
                    $ref: '#/components/schemas/ImportDataRequest_S3Input'
                dataOrgsGcs:
                    $ref: '#/components/schemas/ImportDataRequest_GCSInput'
                dataOrgsv1Gcs:
                    $ref: '#/components/schemas/ImportDataRequest_GCSInput'
                timeout:
                    type: string
        ImportDataRequest_GCSInput:
            type: object
            properties:
                bucket:
                    type: string
                serviceaccountJson:
                    type: string
                path:
                    type: string
        ImportDataRequest_LocalInput:
            type: object
            properties:
                path:
                    type: string
        ImportDataRequest_S3Input:
            type: object
            properties:
                path:
                    type: string
                endpoint:
                    type: string
                accessKeyId:
                    type: string
                secretAccessKey:
                    type: string
                ssl:
                    type: boolean
                bucket:
                    type: string
        ImportDataResponse:
            type: object
            properties:
                errors:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportDataError'
                success:
                    $ref: '#/components/schemas/ImportDataSuccess'
        ImportDataSuccess:
            type: object
            properties:
                orgs:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportDataSuccessOrg'
        ImportDataSuccessOrg:
            type: object
            properties:
                orgId:
                    type: string
                projectIds:
                    type: array
                    items:
                        type: string
                projectRoles:
                    type: array
                    items:
                        type: string
                oidcAppIds:
                    type: array
                    items:
                        type: string
                apiAppIds:
                    type: array
                    items:
                        type: string
                humanUserIds:
                    type: array
                    items:
                        type: string
                machineUserIds:
                    type: array
                    items:
                        type: string
                actionIds:
                    type: array
                    items:
                        type: string
                triggerActions:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetTriggerActionsRequest'
                projectGrants:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportDataSuccessProjectGrant'
                userGrants:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportDataSuccessUserGrant'
                orgMembers:
                    type: array
                    items:
                        type: string
                projectMembers:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportDataSuccessProjectMember'
                projectGrantMembers:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportDataSuccessProjectGrantMember'
                oidcIpds:
                    type: array
                    items:
                        type: string
                jwtIdps:
                    type: array
                    items:
                        type: string
                idpLinks:
                    type: array
                    items:
                        type: string
                userLinks:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportDataSuccessUserLinks'
                userMetadata:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportDataSuccessUserMetadata'
                domains:
                    type: array
                    items:
                        type: string
                appKeys:
                    type: array
                    items:
                        type: string
                machineKeys:
                    type: array
                    items:
                        type: string
        ImportDataSuccessProjectGrant:
            type: object
            properties:
                grantId:
                    type: string
                projectId:
                    type: string
                orgId:
                    type: string
        ImportDataSuccessProjectGrantMember:
            type: object
            properties:
                projectId:
                    type: string
                grantId:
                    type: string
                userId:
                    type: string
        ImportDataSuccessProjectMember:
            type: object
            properties:
                projectId:
                    type: string
                userId:
                    type: string
        ImportDataSuccessUserGrant:
            type: object
            properties:
                projectId:
                    type: string
                userId:
                    type: string
        ImportDataSuccessUserLinks:
            type: object
            properties:
                userId:
                    type: string
                externalUserId:
                    type: string
                displayName:
                    type: string
                idpId:
                    type: string
        ImportDataSuccessUserMetadata:
            type: object
            properties:
                userId:
                    type: string
                key:
                    type: string
        ImportHumanUserRequest:
            required:
                - userName
                - profile
                - email
            type: object
            properties:
                userName:
                    type: string
                profile:
                    $ref: '#/components/schemas/ImportHumanUserRequest_Profile'
                email:
                    $ref: '#/components/schemas/ImportHumanUserRequest_Email'
                phone:
                    $ref: '#/components/schemas/ImportHumanUserRequest_Phone'
                password:
                    type: string
                hashedPassword:
                    $ref: '#/components/schemas/ImportHumanUserRequest_HashedPassword'
                passwordChangeRequired:
                    type: boolean
                requestPasswordlessRegistration:
                    type: boolean
                otpCode:
                    type: string
                idps:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportHumanUserRequest_IDP'
            description: Describe my Import Human User Request
        ImportHumanUserRequest_Email:
            required:
                - email
            type: object
            properties:
                email:
                    type: string
                isEmailVerified:
                    type: boolean
        ImportHumanUserRequest_HashedPassword:
            type: object
            properties:
                value:
                    type: string
        ImportHumanUserRequest_IDP:
            type: object
            properties:
                configId:
                    type: string
                externalUserId:
                    type: string
                displayName:
                    type: string
        ImportHumanUserRequest_Phone:
            type: object
            properties:
                phone:
                    type: string
                isPhoneVerified:
                    type: boolean
        ImportHumanUserRequest_Profile:
            required:
                - firstName
                - lastName
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                nickName:
                    type: string
                displayName:
                    type: string
                preferredLanguage:
                    type: string
                gender:
                    type: integer
                    format: enum
        ImportHumanUserResponse:
            type: object
            properties:
                userId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                passwordlessRegistration:
                    $ref: '#/components/schemas/ImportHumanUserResponse_PasswordlessRegistration'
        ImportHumanUserResponse_PasswordlessRegistration:
            type: object
            properties:
                link:
                    type: string
                lifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                    description: 'deprecated: use expiration instead'
                expiration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
        ImprovedPerformanceFeatureFlag:
            type: object
            properties:
                executionPaths:
                    type: array
                    items:
                        type: integer
                        format: enum
                source:
                    type: integer
                    format: enum
        InConditionsFilter:
            type: object
            properties:
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Condition'
                    description: Defines the conditions to query for.
        InTargetIDsFilter:
            type: object
            properties:
                targetIds:
                    type: array
                    items:
                        type: string
                    description: Defines the ids to query for.
        InUserEmailsQuery:
            type: object
            properties:
                userEmails:
                    type: array
                    items:
                        type: string
            description: Query for users with email in list of emails.
        InUserIDQuery:
            type: object
            properties:
                userIds:
                    type: array
                    items:
                        type: string
            description: Query for users with ID in list of IDs.
        IncludeFilter:
            type: object
            properties:
                include:
                    allOf:
                        - $ref: '#/components/schemas/Condition'
                    description: Defines the include to query for.
        InitMFADoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                cancelButtonText:
                    type: string
                nextButtonText:
                    type: string
        InitMFAOTPScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                descriptionOtp:
                    type: string
                secretLabel:
                    type: string
                codeLabel:
                    type: string
                nextButtonText:
                    type: string
                cancelButtonText:
                    type: string
        InitMFAPromptScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                otpOption:
                    type: string
                u2fOption:
                    type: string
                skipButtonText:
                    type: string
                nextButtonText:
                    type: string
        InitMFAU2FScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                tokenNameLabel:
                    type: string
                notSupported:
                    type: string
                registerTokenButtonText:
                    type: string
                errorRetry:
                    type: string
        InitPasswordDoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                nextButtonText:
                    type: string
                cancelButtonText:
                    type: string
        InitPasswordScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                codeLabel:
                    type: string
                newPasswordLabel:
                    type: string
                newPasswordConfirmLabel:
                    type: string
                nextButtonText:
                    type: string
                resendButtonText:
                    type: string
        InitializeUserDoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                cancelButtonText:
                    type: string
                nextButtonText:
                    type: string
        InitializeUserScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                codeLabel:
                    type: string
                newPasswordLabel:
                    type: string
                newPasswordConfirmLabel:
                    type: string
                resendButtonText:
                    type: string
                nextButtonText:
                    type: string
        Instance:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                state:
                    type: integer
                    format: enum
                name:
                    type: string
                version:
                    type: string
                domains:
                    type: array
                    items:
                        $ref: '#/components/schemas/Domain'
        InstanceDetail:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                state:
                    type: integer
                    format: enum
                name:
                    type: string
                version:
                    type: string
                domains:
                    type: array
                    items:
                        $ref: '#/components/schemas/Domain'
        IsOrgUniqueResponse:
            type: object
            properties:
                isUnique:
                    type: boolean
        IsReachedQuery:
            type: object
            properties:
                reached:
                    type: boolean
        IsUserUniqueResponse:
            type: object
            properties:
                isUnique:
                    type: boolean
        JWTConfig:
            type: object
            properties:
                jwtEndpoint:
                    type: string
                    description: The endpoint where the JWT can be extracted.
                issuer:
                    type: string
                    description: The issuer of the JWT (for validation).
                keysEndpoint:
                    type: string
                    description: The endpoint to the key (JWK) which is used to sign the JWT with.
                headerName:
                    type: string
                    description: The name of the header where the JWT is sent in, default is authorization.
        Key:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                type:
                    type: integer
                    format: enum
                expirationDate:
                    type: string
                    format: date-time
        LDAPAttributes:
            type: object
            properties:
                idAttribute:
                    type: string
                firstNameAttribute:
                    type: string
                lastNameAttribute:
                    type: string
                displayNameAttribute:
                    type: string
                nickNameAttribute:
                    type: string
                preferredUsernameAttribute:
                    type: string
                emailAttribute:
                    type: string
                emailVerifiedAttribute:
                    type: string
                phoneAttribute:
                    type: string
                phoneVerifiedAttribute:
                    type: string
                preferredLanguageAttribute:
                    type: string
                avatarUrlAttribute:
                    type: string
                profileAttribute:
                    type: string
        LDAPConfig:
            type: object
            properties:
                servers:
                    type: array
                    items:
                        type: string
                startTls:
                    type: boolean
                baseDn:
                    type: string
                bindDn:
                    type: string
                userBase:
                    type: string
                userObjectClasses:
                    type: array
                    items:
                        type: string
                userFilters:
                    type: array
                    items:
                        type: string
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                attributes:
                    $ref: '#/components/schemas/LDAPAttributes'
        LDAPCredentials:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        LabelPolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                primaryColor:
                    type: string
                    description: hex value for primary color
                isDefault:
                    type: boolean
                    description: defines if the organization's admin changed the policy
                hideLoginNameSuffix:
                    type: boolean
                    description: hides the org suffix on the login form if the scope \"urn:zitadel:iam:org:domain:primary:{domainname}\" is set
                warnColor:
                    type: string
                    description: hex value for secondary color
                backgroundColor:
                    type: string
                    description: hex value for background color
                fontColor:
                    type: string
                    description: hex value for font color
                primaryColorDark:
                    type: string
                    description: hex value for primary color dark theme
                backgroundColorDark:
                    type: string
                    description: hex value for background color dark theme
                warnColorDark:
                    type: string
                    description: hex value for warning color dark theme
                fontColorDark:
                    type: string
                    description: hex value for font color dark theme
                disableWatermark:
                    type: boolean
                logoUrl:
                    type: string
                iconUrl:
                    type: string
                logoUrlDark:
                    type: string
                iconUrlDark:
                    type: string
                fontUrl:
                    type: string
                themeMode:
                    type: integer
                    format: enum
        LastNameQuery:
            required:
                - lastName
            type: object
            properties:
                lastName:
                    type: string
                method:
                    type: integer
                    format: enum
            description: Query for users with a specific last name.
        LegalAndSupportSettings:
            type: object
            properties:
                tosLink:
                    type: string
                privacyPolicyLink:
                    type: string
                helpLink:
                    type: string
                supportEmail:
                    type: string
                resourceOwnerType:
                    type: integer
                    description: resource_owner_type returns if the setting is managed on the organization or on the instance
                    format: enum
                docsLink:
                    type: string
                customLink:
                    type: string
                customLinkText:
                    type: string
        LinkingUserDoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                cancelButtonText:
                    type: string
                nextButtonText:
                    type: string
        LinkingUserPromptScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                linkButtonText:
                    type: string
                otherButtonText:
                    type: string
        ListActionsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                sortingColumn:
                    type: integer
                    description: the field the result is sorted
                    format: enum
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/ActionQuery'
                    description: criteria the client is looking for
        ListActionsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Action'
        ListAggregateTypesRequest:
            type: object
            properties: {}
        ListAggregateTypesResponse:
            type: object
            properties:
                aggregateTypes:
                    type: array
                    items:
                        $ref: '#/components/schemas/AggregateType'
        ListAllProjectGrantsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/AllProjectGrantQuery'
                    description: criteria the client is looking for
        ListAllProjectGrantsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/GrantedProject'
        ListAppChangesResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Change'
                    description: zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
        ListAppKeysRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                appId:
                    type: string
                projectId:
                    type: string
        ListAppKeysResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Key'
        ListAppsRequest:
            type: object
            properties:
                projectId:
                    type: string
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/AppQuery'
                    description: criteria the client is looking for
        ListAppsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/App'
        ListAuthenticationFactorsResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthFactor'
        ListAuthenticationMethodTypesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                authMethodTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
        ListDebugEventsStatesResponse:
            type: object
            properties:
                states:
                    type: array
                    items:
                        $ref: '#/components/schemas/State'
        ListDetails:
            type: object
            properties:
                totalResult:
                    type: string
                processedSequence:
                    type: string
                timestamp:
                    type: string
                    format: date-time
        ListDomainsRequest:
            type: object
            properties:
                instanceId:
                    type: string
                query:
                    $ref: '#/components/schemas/ListQuery'
                sortingColumn:
                    type: integer
                    description: the field the result is sorted
                    format: enum
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/DomainSearchQuery'
                    description: criterias the client is looking for
        ListDomainsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Domain'
        ListEmailProvidersRequest:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/ListQuery'
        ListEmailProvidersResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/EmailProvider'
        ListEventTypesRequest:
            type: object
            properties: {}
        ListEventTypesResponse:
            type: object
            properties:
                eventTypes:
                    type: array
                    items:
                        $ref: '#/components/schemas/EventType'
        ListEventsRequest:
            type: object
            properties:
                sequence:
                    type: string
                limit:
                    type: integer
                    format: uint32
                asc:
                    type: boolean
                editorUserId:
                    type: string
                eventTypes:
                    type: array
                    items:
                        type: string
                aggregateId:
                    type: string
                aggregateTypes:
                    type: array
                    items:
                        type: string
                resourceOwner:
                    type: string
                creationDate:
                    type: string
                    format: date-time
                range:
                    $ref: '#/components/schemas/ListEventsRequest_creation_date_range'
                from:
                    type: string
                    format: date-time
        ListEventsRequest_creation_date_range:
            type: object
            properties:
                since:
                    type: string
                    format: date-time
                until:
                    type: string
                    format: date-time
        ListEventsResponse:
            type: object
            properties:
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/Event'
        ListExecutionFunctionsResponse:
            type: object
            properties:
                functions:
                    type: array
                    items:
                        type: string
                    description: All available methods
        ListExecutionMethodsResponse:
            type: object
            properties:
                methods:
                    type: array
                    items:
                        type: string
                    description: All available methods
        ListExecutionServicesResponse:
            type: object
            properties:
                services:
                    type: array
                    items:
                        type: string
                    description: All available methods
        ListFailedEventsRequest:
            type: object
            properties: {}
            description: This is an empty request
        ListFailedEventsResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/FailedEvent'
                    description: 'TODO: list details'
        ListFlowTriggerTypesResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/TriggerType'
        ListFlowTypesResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/FlowType'
        ListGrantedProjectRolesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Role'
        ListGrantedProjectsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectQuery'
                    description: criteria the client is looking for
        ListGrantedProjectsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/GrantedProject'
        ListHumanAuthFactorsResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthFactor'
        ListHumanLinkedIDPsRequest:
            type: object
            properties:
                userId:
                    type: string
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
        ListHumanLinkedIDPsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDPUserLink'
        ListHumanPasswordlessResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/WebAuthNToken'
        ListIAMMemberRolesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                roles:
                    type: array
                    items:
                        type: string
        ListIAMMembersRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchQuery'
                    description: criteria the client is looking for
        ListIAMMembersResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Member'
        ListIDPLinksRequest:
            type: object
            properties:
                userId:
                    type: string
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
        ListIDPLinksResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDPLink'
        ListIDPsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                sortingColumn:
                    type: integer
                    description: the field the result is sorted
                    format: enum
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDPQuery'
                    description: criteria the client is looking for
        ListIDPsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDP'
        ListInstanceDomainsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Domain'
        ListInstanceTrustedDomainsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/TrustedDomain'
        ListInstancesRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                sortingColumn:
                    type: integer
                    description: the field the result is sorted
                    format: enum
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/Query'
                    description: criterias the client is looking for
        ListInstancesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Instance'
        ListLoginPolicyIDPsRequest:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/ListQuery'
        ListLoginPolicyIDPsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDPLoginPolicyLink'
        ListLoginPolicyMultiFactorsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        type: integer
                        format: enum
        ListLoginPolicySecondFactorsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        type: integer
                        format: enum
        ListMachineKeysRequest:
            type: object
            properties:
                userId:
                    type: string
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
        ListMachineKeysResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Key'
        ListMilestonesRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                sortingColumn:
                    type: integer
                    description: the field the result is sorted
                    format: enum
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/MilestoneQuery'
                    description: criteria the client is looking for
        ListMilestonesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Milestone'
        ListMyAuthFactorsResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthFactor'
        ListMyLinkedIDPsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
        ListMyLinkedIDPsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDPUserLink'
        ListMyMembershipsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: the field the result is sorted
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/MembershipQuery'
                    description: criteria the client is looking for
        ListMyMembershipsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Membership'
        ListMyMetadataRequest:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/ListQuery'
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataQuery'
        ListMyMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Metadata'
        ListMyPasswordlessResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/WebAuthNToken'
        ListMyProjectOrgsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrgQuery'
                    description: criteria the client is looking for
                sortingColumn:
                    type: integer
                    description: States by which field the results are sorted.
                    format: enum
        ListMyProjectOrgsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Org'
        ListMyProjectPermissionsResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        type: string
        ListMyRefreshTokensRequest:
            type: object
            properties: {}
            description: This is an empty request
        ListMyRefreshTokensResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/RefreshToken'
        ListMyUserChangesRequest:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/ChangeQuery'
        ListMyUserChangesResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Change'
                    description: zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
        ListMyUserGrantsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
        ListMyUserGrantsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserGrant'
        ListMyUserSessionsRequest:
            type: object
            properties: {}
            description: This is an empty request
        ListMyUserSessionsResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Session'
        ListMyZitadelPermissionsResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        type: string
        ListOrgChangesRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ChangeQuery'
                    description: list limitations and ordering
        ListOrgChangesResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Change'
                    description: zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
        ListOrgDomainsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/DomainSearchQuery'
                    description: criteria the client is looking for
        ListOrgDomainsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Domain'
        ListOrgIDPsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                sortingColumn:
                    type: integer
                    description: the field the result is sorted
                    format: enum
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDPQuery'
                    description: criteria the client is looking for
        ListOrgIDPsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDP'
        ListOrgMemberRolesResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        type: string
        ListOrgMembersRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchQuery'
                    description: criteria the client is looking for
        ListOrgMembersResponse:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/ListDetails'
                    description: list limitations and ordering
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Member'
                    description: criteria the client is looking for
        ListOrgMetadataRequest:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/ListQuery'
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataQuery'
        ListOrgMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Metadata'
        ListOrganizationsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                sortingColumn:
                    type: integer
                    description: the field the result is sorted
                    format: enum
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchQuery'
                    description: criteria the client is looking for
        ListOrganizationsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Organization'
        ListOrgsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                sortingColumn:
                    type: integer
                    description: the field the result is sorted
                    format: enum
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrgQuery'
                    description: criteria the client is looking for
        ListOrgsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Org'
        ListPasskeysRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
        ListPasskeysResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Passkey'
        ListPersonalAccessTokensRequest:
            type: object
            properties:
                userId:
                    type: string
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
        ListPersonalAccessTokensResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/PersonalAccessToken'
        ListProjectChangesResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Change'
                    description: zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
        ListProjectGrantChangesResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Change'
                    description: zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
        ListProjectGrantMemberRolesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        type: string
        ListProjectGrantMembersRequest:
            type: object
            properties:
                projectId:
                    type: string
                grantId:
                    type: string
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchQuery'
                    description: criteria the client is looking for
        ListProjectGrantMembersResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Member'
        ListProjectGrantsRequest:
            type: object
            properties:
                projectId:
                    type: string
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectGrantQuery'
                    description: criteria the client is looking for
        ListProjectGrantsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/GrantedProject'
        ListProjectMemberRolesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        type: string
        ListProjectMembersRequest:
            type: object
            properties:
                projectId:
                    type: string
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchQuery'
                    description: criteria the client is looking for
        ListProjectMembersResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Member'
        ListProjectRolesRequest:
            type: object
            properties:
                projectId:
                    type: string
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleQuery'
                    description: criteria the client is looking for
        ListProjectRolesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Role'
        ListProjectsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectQuery'
                    description: criteria the client is looking for
        ListProjectsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Project'
        ListProvidersRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProviderQuery'
                    description: criteria the client is looking for
        ListProvidersResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Provider'
        ListQuery:
            type: object
            properties:
                offset:
                    type: string
                limit:
                    type: integer
                    format: uint32
                asc:
                    type: boolean
        ListSMSProvidersRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
        ListSMSProvidersResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/SMSProvider'
        ListSMTPConfigsRequest:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/ListQuery'
        ListSMTPConfigsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/SMTPConfig'
        ListSecretGeneratorsRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SecretGeneratorQuery'
                    description: criteria the client is looking for
        ListSecretGeneratorsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/SecretGenerator'
        ListSessionsRequest:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/ListQuery'
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchQuery'
                sortingColumn:
                    type: integer
                    format: enum
        ListSessionsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sessions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Session'
        ListUserChangesRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ChangeQuery'
                    description: list limitations and ordering
                userId:
                    type: string
        ListUserChangesResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Change'
                    description: zitadel.v1.ListDetails details = 1; was always returned empty (as we cannot get the necessary info)
        ListUserGrantRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserGrantQuery'
                    description: criteria the client is looking for
        ListUserGrantResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserGrant'
        ListUserMembershipsRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: list limitations and ordering
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: the field the result is sorted
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/MembershipQuery'
                    description: criteria the client is looking for
        ListUserMembershipsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Membership'
        ListUserMetadataRequest:
            type: object
            properties:
                id:
                    type: string
                query:
                    $ref: '#/components/schemas/ListQuery'
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataQuery'
        ListUserMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/Metadata'
        ListUsersRequest:
            type: object
            properties:
                query:
                    allOf:
                        - $ref: '#/components/schemas/ListQuery'
                    description: list limitations and ordering
                sortingColumn:
                    type: integer
                    description: the field the result is sorted
                    format: enum
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchQuery'
                    description: criteria the client is looking for
        ListUsersResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                sortingColumn:
                    type: integer
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
        ListViewsRequest:
            type: object
            properties: {}
            description: This is an empty request
        ListViewsResponse:
            type: object
            properties:
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/View'
                    description: 'TODO: list details'
        ListWebKeysResponse:
            type: object
            properties:
                webKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetWebKey'
        LocalizedMessage:
            type: object
            properties:
                key:
                    type: string
                localizedMessage:
                    type: string
        LockUserRequest:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
        LockUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        LockoutPolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                maxPasswordAttempts:
                    type: string
                maxOtpAttempts:
                    type: string
                isDefault:
                    type: boolean
        LockoutSettings:
            type: object
            properties:
                maxPasswordAttempts:
                    type: string
                resourceOwnerType:
                    type: integer
                    description: resource_owner_type returns if the settings is managed on the organization or on the instance
                    format: enum
                maxOtpAttempts:
                    type: string
        LoginCustomText:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                selectAccountText:
                    $ref: '#/components/schemas/SelectAccountScreenText'
                loginText:
                    $ref: '#/components/schemas/LoginScreenText'
                passwordText:
                    $ref: '#/components/schemas/PasswordScreenText'
                usernameChangeText:
                    $ref: '#/components/schemas/UsernameChangeScreenText'
                usernameChangeDoneText:
                    $ref: '#/components/schemas/UsernameChangeDoneScreenText'
                initPasswordText:
                    $ref: '#/components/schemas/InitPasswordScreenText'
                initPasswordDoneText:
                    $ref: '#/components/schemas/InitPasswordDoneScreenText'
                emailVerificationText:
                    $ref: '#/components/schemas/EmailVerificationScreenText'
                emailVerificationDoneText:
                    $ref: '#/components/schemas/EmailVerificationDoneScreenText'
                initializeUserText:
                    $ref: '#/components/schemas/InitializeUserScreenText'
                initializeDoneText:
                    $ref: '#/components/schemas/InitializeUserDoneScreenText'
                initMfaPromptText:
                    $ref: '#/components/schemas/InitMFAPromptScreenText'
                initMfaOtpText:
                    $ref: '#/components/schemas/InitMFAOTPScreenText'
                initMfaU2fText:
                    $ref: '#/components/schemas/InitMFAU2FScreenText'
                initMfaDoneText:
                    $ref: '#/components/schemas/InitMFADoneScreenText'
                mfaProvidersText:
                    $ref: '#/components/schemas/MFAProvidersText'
                verifyMfaOtpText:
                    $ref: '#/components/schemas/VerifyMFAOTPScreenText'
                verifyMfaU2fText:
                    $ref: '#/components/schemas/VerifyMFAU2FScreenText'
                passwordlessText:
                    $ref: '#/components/schemas/PasswordlessScreenText'
                passwordChangeText:
                    $ref: '#/components/schemas/PasswordChangeScreenText'
                passwordChangeDoneText:
                    $ref: '#/components/schemas/PasswordChangeDoneScreenText'
                passwordResetDoneText:
                    $ref: '#/components/schemas/PasswordResetDoneScreenText'
                registrationOptionText:
                    $ref: '#/components/schemas/RegistrationOptionScreenText'
                registrationUserText:
                    $ref: '#/components/schemas/RegistrationUserScreenText'
                registrationOrgText:
                    $ref: '#/components/schemas/RegistrationOrgScreenText'
                linkingUserDoneText:
                    $ref: '#/components/schemas/LinkingUserDoneScreenText'
                externalUserNotFoundText:
                    $ref: '#/components/schemas/ExternalUserNotFoundScreenText'
                successLoginText:
                    $ref: '#/components/schemas/SuccessLoginScreenText'
                logoutText:
                    $ref: '#/components/schemas/LogoutDoneScreenText'
                footerText:
                    $ref: '#/components/schemas/FooterText'
                passwordlessPromptText:
                    $ref: '#/components/schemas/PasswordlessPromptScreenText'
                passwordlessRegistrationText:
                    $ref: '#/components/schemas/PasswordlessRegistrationScreenText'
                passwordlessRegistrationDoneText:
                    $ref: '#/components/schemas/PasswordlessRegistrationDoneScreenText'
                externalRegistrationUserOverviewText:
                    $ref: '#/components/schemas/ExternalRegistrationUserOverviewScreenText'
                isDefault:
                    type: boolean
                linkingUserPromptText:
                    allOf:
                        - $ref: '#/components/schemas/LinkingUserPromptScreenText'
                    description: 'Deprecated: the linking user prompt screen no longer exists'
        LoginNameQuery:
            required:
                - loginName
            type: object
            properties:
                loginName:
                    type: string
                method:
                    type: integer
                    format: enum
            description: Query for users with a specific state.
        LoginPolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                allowUsernamePassword:
                    type: boolean
                allowRegister:
                    type: boolean
                allowExternalIdp:
                    type: boolean
                forceMfa:
                    type: boolean
                passwordlessType:
                    type: integer
                    format: enum
                isDefault:
                    type: boolean
                hidePasswordReset:
                    type: boolean
                ignoreUnknownUsernames:
                    type: boolean
                defaultRedirectUri:
                    type: string
                passwordCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                externalLoginCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                mfaInitSkipLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                secondFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                multiFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                secondFactors:
                    type: array
                    items:
                        type: integer
                        format: enum
                multiFactors:
                    type: array
                    items:
                        type: integer
                        format: enum
                idps:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDPLoginPolicyLink'
                allowDomainDiscovery:
                    type: boolean
                    description: If set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
                disableLoginWithEmail:
                    type: boolean
                disableLoginWithPhone:
                    type: boolean
                forceMfaLocalOnly:
                    type: boolean
        LoginScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                titleLinkingProcess:
                    type: string
                descriptionLinkingProcess:
                    type: string
                userMustBeMemberOfOrg:
                    type: string
                loginNameLabel:
                    type: string
                registerButtonText:
                    type: string
                nextButtonText:
                    type: string
                externalUserDescription:
                    type: string
                userNamePlaceholder:
                    type: string
                loginNamePlaceholder:
                    type: string
        LoginSettings:
            type: object
            properties:
                allowUsernamePassword:
                    type: boolean
                allowRegister:
                    type: boolean
                allowExternalIdp:
                    type: boolean
                forceMfa:
                    type: boolean
                passkeysType:
                    type: integer
                    format: enum
                hidePasswordReset:
                    type: boolean
                ignoreUnknownUsernames:
                    type: boolean
                defaultRedirectUri:
                    type: string
                passwordCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                externalLoginCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                mfaInitSkipLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                secondFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                multiFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                secondFactors:
                    type: array
                    items:
                        type: integer
                        format: enum
                multiFactors:
                    type: array
                    items:
                        type: integer
                        format: enum
                allowDomainDiscovery:
                    type: boolean
                    description: If set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
                disableLoginWithEmail:
                    type: boolean
                disableLoginWithPhone:
                    type: boolean
                resourceOwnerType:
                    type: integer
                    description: resource_owner_type returns if the settings is managed on the organization or on the instance
                    format: enum
                forceMfaLocalOnly:
                    type: boolean
        LoginV1:
            type: object
            properties: {}
        LoginV2:
            type: object
            properties:
                baseUri:
                    type: string
                    description: Optionally specify a base uri of the login UI. If unspecified the default URI will be used.
        LoginV2FeatureFlag:
            type: object
            properties:
                required:
                    type: boolean
                baseUri:
                    type: string
                source:
                    type: integer
                    format: enum
        LoginVersion:
            type: object
            properties:
                loginV1:
                    $ref: '#/components/schemas/LoginV1'
                loginV2:
                    $ref: '#/components/schemas/LoginV2'
        LogoutDoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                loginButtonText:
                    type: string
        MFAProvidersText:
            type: object
            properties:
                chooseOther:
                    type: string
                otp:
                    type: string
                u2f:
                    type: string
        MachineUser:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                hasSecret:
                    type: boolean
                accessTokenType:
                    type: integer
                    format: enum
        Member:
            type: object
            properties:
                userId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                roles:
                    type: array
                    items:
                        type: string
                preferredLoginName:
                    type: string
                email:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                displayName:
                    type: string
                avatarUrl:
                    type: string
                userType:
                    type: integer
                    format: enum
        Membership:
            type: object
            properties:
                userId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                roles:
                    type: array
                    items:
                        type: string
                displayName:
                    type: string
                iam:
                    type: boolean
                orgId:
                    type: string
                projectId:
                    type: string
                projectGrantId:
                    type: string
        MembershipIAMQuery:
            type: object
            properties:
                iam:
                    type: boolean
            description: this query always equals
        MembershipOrgQuery:
            type: object
            properties:
                orgId:
                    type: string
            description: this query always equals
        MembershipProjectGrantQuery:
            type: object
            properties:
                projectGrantId:
                    type: string
            description: this query always equals
        MembershipProjectQuery:
            type: object
            properties:
                projectId:
                    type: string
            description: this query always equals
        MembershipQuery:
            type: object
            properties:
                orgQuery:
                    $ref: '#/components/schemas/MembershipOrgQuery'
                projectQuery:
                    $ref: '#/components/schemas/MembershipProjectQuery'
                projectGrantQuery:
                    $ref: '#/components/schemas/MembershipProjectGrantQuery'
                iamQuery:
                    $ref: '#/components/schemas/MembershipIAMQuery'
        MessageCustomText:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
                isDefault:
                    type: boolean
        Metadata:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                key:
                    type: string
                value:
                    type: string
                    format: bytes
        MetadataKeyQuery:
            type: object
            properties:
                key:
                    type: string
                method:
                    type: integer
                    format: enum
        MetadataQuery:
            type: object
            properties:
                keyQuery:
                    $ref: '#/components/schemas/MetadataKeyQuery'
        MigrateGenericOIDCProviderRequest:
            type: object
            properties:
                id:
                    type: string
                azure:
                    $ref: '#/components/schemas/AddAzureADProviderRequest'
                google:
                    $ref: '#/components/schemas/AddGoogleProviderRequest'
        MigrateGenericOIDCProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        Milestone:
            type: object
            properties:
                type:
                    type: integer
                    format: enum
                reachedDate:
                    type: string
                    format: date-time
        MilestoneQuery:
            type: object
            properties:
                isReachedQuery:
                    $ref: '#/components/schemas/IsReachedQuery'
        NickNameQuery:
            required:
                - nickName
            type: object
            properties:
                nickName:
                    type: string
                method:
                    type: integer
                    format: enum
            description: Query for users with a specific nickname.
        NotFilter:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/SearchFilter'
        NotQuery:
            type: object
            properties:
                query:
                    $ref: '#/components/schemas/SearchQuery'
            description: Negate the sub-condition.
        Notification:
            type: object
            properties:
                percent:
                    type: integer
                    description: The percentage relative to the quotas amount on which the call_url should be called.
                    format: uint32
                repeat:
                    type: boolean
                    description: If true, the call_url is called each time a factor of percentage is reached.
                callUrl:
                    type: string
                    description: The URL, which is called with HTTP method POST and a JSON payload with the properties "unit", "id" (notification id), "callURL", "periodStart", "threshold" and "usage".
        NotificationPolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                isDefault:
                    type: boolean
                passwordChange:
                    type: boolean
        OAuthConfig:
            type: object
            properties:
                clientId:
                    type: string
                    description: Client id generated by the identity provider.
                authorizationEndpoint:
                    type: string
                    description: The endpoint where ZITADEL send the user to authenticate.
                tokenEndpoint:
                    type: string
                    description: The endpoint where ZITADEL can get the token.
                userEndpoint:
                    type: string
                    description: The endpoint where ZITADEL can get the user information.
                scopes:
                    type: array
                    items:
                        type: string
                    description: The scopes requested by ZITADEL during the request on the identity provider.
                idAttribute:
                    type: string
                    description: Defines how the attribute is called where ZITADEL can get the id of the user.
        OIDCConfig:
            type: object
            properties:
                redirectUris:
                    type: array
                    items:
                        type: string
                responseTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                grantTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                appType:
                    type: integer
                    format: enum
                clientId:
                    type: string
                authMethodType:
                    type: integer
                    format: enum
                postLogoutRedirectUris:
                    type: array
                    items:
                        type: string
                version:
                    type: integer
                    format: enum
                noneCompliant:
                    type: boolean
                complianceProblems:
                    type: array
                    items:
                        $ref: '#/components/schemas/LocalizedMessage'
                devMode:
                    type: boolean
                accessTokenType:
                    type: integer
                    format: enum
                accessTokenRoleAssertion:
                    type: boolean
                idTokenRoleAssertion:
                    type: boolean
                idTokenUserinfoAssertion:
                    type: boolean
                clockSkew:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                additionalOrigins:
                    type: array
                    items:
                        type: string
                allowedOrigins:
                    type: array
                    items:
                        type: string
                skipNativeAppSuccessPage:
                    type: boolean
                backChannelLogoutUri:
                    type: string
                loginVersion:
                    $ref: '#/components/schemas/LoginVersion'
        OIDCSettings:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                accessTokenLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                idTokenLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                refreshTokenIdleExpiration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                refreshTokenExpiration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
        OTPEmail:
            type: object
            properties:
                otpEmailId:
                    type: string
                    description: unique identifier of the one-time password (OTP) Email authenticator.
                address:
                    type: string
                    description: The email address used for the OTP Email authenticator.
                isVerified:
                    type: boolean
                    description: State whether the OTP Email registration has been completed.
        OTPEmail_ReturnCode:
            type: object
            properties: {}
        OTPEmail_SendCode:
            type: object
            properties:
                urlTemplate:
                    type: string
        OTPSMS:
            type: object
            properties:
                otpSmsId:
                    type: string
                    description: unique identifier of the one-time password (OTP) SMS authenticator.
                phone:
                    type: string
                    description: The phone number used for the OTP SMS authenticator.
                isVerified:
                    type: boolean
                    description: State whether the OTP SMS registration has been completed.
        ObjectDetails:
            type: object
            properties:
                sequence:
                    type: string
                    description: |-
                        sequence represents the order of events. It's always counting

                         on read: the sequence of the last event reduced by the projection

                         on manipulation: the timestamp of the event(s) added by the manipulation
                creationDate:
                    type: string
                    description: |-
                        creation_date is the timestamp where the first operation on the object was made

                         on read: the timestamp of the first event of the object

                         on create: the timestamp of the event(s) added by the manipulation
                    format: date-time
                changeDate:
                    type: string
                    description: |-
                        change_date is the timestamp when the object was changed

                         on read: the timestamp of the last event reduced by the projection

                         on manipulation: the
                    format: date-time
                resourceOwner:
                    type: string
                    description: resource_owner is the organization an object belongs to
        Options:
            type: object
            properties:
                authOption:
                    $ref: '#/components/schemas/AuthOption'
                httpResponse:
                    $ref: '#/components/schemas/CustomHTTPResponse'
        OrFilter:
            type: object
            properties:
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchFilter'
        OrQuery:
            type: object
            properties:
                queries:
                    type: array
                    items:
                        $ref: '#/components/schemas/SearchQuery'
            description: Connect multiple sub-condition with and OR operator.
        Org:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                state:
                    type: integer
                    format: enum
                name:
                    type: string
                primaryDomain:
                    type: string
        OrgDomainQuery:
            type: object
            properties:
                domain:
                    type: string
                method:
                    type: integer
                    format: enum
        OrgIAMPolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                userLoginMustBeDomain:
                    type: boolean
                isDefault:
                    type: boolean
            description: 'deprecated: please use DomainPolicy instead'
        OrgIDQuery:
            type: object
            properties:
                id:
                    type: string
        OrgNameQuery:
            type: object
            properties:
                name:
                    type: string
                method:
                    type: integer
                    format: enum
        OrgQuery:
            type: object
            properties:
                nameQuery:
                    $ref: '#/components/schemas/OrgNameQuery'
                domainQuery:
                    $ref: '#/components/schemas/OrgDomainQuery'
                stateQuery:
                    $ref: '#/components/schemas/OrgStateQuery'
                idQuery:
                    $ref: '#/components/schemas/OrgIDQuery'
        OrgStateQuery:
            type: object
            properties:
                state:
                    type: integer
                    format: enum
        Organization:
            type: object
            properties:
                orgId:
                    type: string
                orgDomain:
                    type: string
        OrganizationIDFilter:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Defines the ID of the organization to query for.
                method:
                    type: integer
                    description: Defines which text comparison method used for the id query.
                    format: enum
        OrganizationIdQuery:
            required:
                - organizationId
            type: object
            properties:
                organizationId:
                    type: string
            description: Query for users under a specific organization as resource owner.
        Passkey:
            type: object
            properties:
                id:
                    type: string
                state:
                    type: integer
                    format: enum
                name:
                    type: string
        PasskeyRegistrationCode:
            required:
                - id
                - code
            type: object
            properties:
                id:
                    type: string
                code:
                    type: string
        Password:
            required:
                - password
            type: object
            properties:
                password:
                    type: string
                changeRequired:
                    type: boolean
        PasswordAgePolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                maxAgeDays:
                    type: string
                    description: Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
                expireWarnDays:
                    type: string
                    description: Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
                isDefault:
                    type: boolean
                    description: If true, the returned values represent the instance settings, e.g. by an organization without custom settings.
        PasswordChangeDoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                nextButtonText:
                    type: string
        PasswordChangeScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                oldPasswordLabel:
                    type: string
                newPasswordLabel:
                    type: string
                newPasswordConfirmLabel:
                    type: string
                cancelButtonText:
                    type: string
                nextButtonText:
                    type: string
                expiredDescription:
                    type: string
        PasswordComplexityPolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                minLength:
                    type: string
                hasUppercase:
                    type: boolean
                hasLowercase:
                    type: boolean
                hasNumber:
                    type: boolean
                hasSymbol:
                    type: boolean
                isDefault:
                    type: boolean
        PasswordComplexitySettings:
            type: object
            properties:
                minLength:
                    type: string
                requiresUppercase:
                    type: boolean
                requiresLowercase:
                    type: boolean
                requiresNumber:
                    type: boolean
                requiresSymbol:
                    type: boolean
                resourceOwnerType:
                    type: integer
                    description: resource_owner_type returns if the settings is managed on the organization or on the instance
                    format: enum
        PasswordExpirySettings:
            type: object
            properties:
                maxAgeDays:
                    type: string
                    description: Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
                expireWarnDays:
                    type: string
                    description: Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
                resourceOwnerType:
                    type: integer
                    description: resource_owner_type returns if the settings is managed on the organization or on the instance
                    format: enum
        PasswordResetDoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                nextButtonText:
                    type: string
        PasswordResetRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
                sendLink:
                    $ref: '#/components/schemas/SendPasswordResetLink'
                returnCode:
                    $ref: '#/components/schemas/ReturnPasswordResetCode'
        PasswordResetResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: in case the medium was set to return_code, the code will be returned
        PasswordScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                passwordLabel:
                    type: string
                resetLinkText:
                    type: string
                backButtonText:
                    type: string
                nextButtonText:
                    type: string
                minLength:
                    type: string
                hasUppercase:
                    type: string
                hasLowercase:
                    type: string
                hasNumber:
                    type: string
                hasSymbol:
                    type: string
                confirmation:
                    type: string
        PasswordlessPromptScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                descriptionInit:
                    type: string
                passwordlessButtonText:
                    type: string
                nextButtonText:
                    type: string
                skipButtonText:
                    type: string
        PasswordlessRegistrationDoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                nextButtonText:
                    type: string
                cancelButtonText:
                    type: string
                descriptionClose:
                    type: string
        PasswordlessRegistrationScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                tokenNameLabel:
                    type: string
                notSupported:
                    type: string
                registerTokenButtonText:
                    type: string
                errorRetry:
                    type: string
        PasswordlessScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                loginWithPwButtonText:
                    type: string
                validateTokenButtonText:
                    type: string
                notSupported:
                    type: string
                errorRetry:
                    type: string
        PatchTarget:
            type: object
            properties:
                name:
                    type: string
                restWebhook:
                    $ref: '#/components/schemas/SetRESTWebhook'
                restCall:
                    $ref: '#/components/schemas/SetRESTCall'
                restAsync:
                    $ref: '#/components/schemas/SetRESTAsync'
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                    description: Timeout defines the duration until ZITADEL cancels the execution.
                endpoint:
                    type: string
                expirationSigningKey:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                    description: |-
                        Regenerate the key used for signing and checking the payload sent to the target.
                         Set the graceful period for the existing key. During that time, the previous
                         signing key and the new one will be used to sign the request to allow you a smooth
                         transition onf your API.

                         Note that we currently only allow an immediate rotation ("0s") and will support
                         longer expirations in the future.
        PatchTargetResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                signingKey:
                    type: string
                    description: Key used to sign and check payload sent to the target.
        PatchUser:
            type: object
            properties:
                schemaId:
                    type: string
                data:
                    type: object
                contact:
                    allOf:
                        - $ref: '#/components/schemas/SetContact'
                    description: Set the contact information (email, phone) for the user.
        PatchUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                emailCode:
                    type: string
                    description: The email code will be set if a contact email was set with a return_code verification option.
                phoneCode:
                    type: string
                    description: The phone code will be set if a contact phone was set with a return_code verification option.
        PatchUserSchema:
            required:
                - type
                - schema
            type: object
            properties:
                type:
                    type: string
                    description: Type is a human readable word describing the schema.
                schema:
                    type: object
                    description: JSON schema representation defining the user.
                possibleAuthenticators:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: |-
                        Defines the possible types of authenticators.

                         Removal of an authenticator does not remove the authenticator on a user.
        PatchUserSchemaResponse:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/Details'
                    description: Details provide some base information (such as the last change date) of the schema.
        PersonalAccessToken:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                expirationDate:
                    type: string
                    format: date-time
                scopes:
                    type: array
                    items:
                        type: string
        Phone:
            type: object
            properties:
                number:
                    type: string
                    description: Phone number of the user.
                isVerified:
                    type: boolean
                    description: IsVerified states if the phone number has been verified to belong to the user.
        PhoneFilter:
            required:
                - number
            type: object
            properties:
                number:
                    type: string
                    description: Defines the phone of the user to query for.
                method:
                    type: integer
                    description: Defines which text comparison method used for the phone query.
                    format: enum
        PhoneQuery:
            required:
                - number
            type: object
            properties:
                number:
                    type: string
                method:
                    type: integer
                    format: enum
            description: Query for users with a specific phone.
        PostResponse:
            type: object
            properties:
                relayState:
                    type: string
                samlResponse:
                    type: string
        PrivacyPolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                tosLink:
                    type: string
                privacyLink:
                    type: string
                isDefault:
                    type: boolean
                helpLink:
                    type: string
                supportEmail:
                    type: string
                docsLink:
                    type: string
                customLink:
                    type: string
                customLinkText:
                    type: string
        Profile:
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                nickName:
                    type: string
                displayName:
                    type: string
                preferredLanguage:
                    type: string
                gender:
                    type: integer
                    format: enum
                avatarUrl:
                    type: string
        Project:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                name:
                    type: string
                state:
                    type: integer
                    format: enum
                projectRoleAssertion:
                    type: boolean
                    description: describes if the roles of the user should be added to the token
                projectRoleCheck:
                    type: boolean
                    description: ZITADEL checks if the user has at least one on this project
                hasProjectCheck:
                    type: boolean
                    description: ZITADEL checks if the org of the user has permission for this project
                privateLabelingSetting:
                    type: integer
                    description: Defines from where the private labeling should be triggered
                    format: enum
        ProjectGrantQuery:
            type: object
            properties:
                projectNameQuery:
                    $ref: '#/components/schemas/GrantProjectNameQuery'
                roleKeyQuery:
                    $ref: '#/components/schemas/GrantRoleKeyQuery'
        ProjectIDQuery:
            type: object
            properties:
                projectId:
                    type: string
        ProjectNameQuery:
            type: object
            properties:
                name:
                    type: string
                method:
                    type: integer
                    format: enum
        ProjectQuery:
            type: object
            properties:
                nameQuery:
                    $ref: '#/components/schemas/ProjectNameQuery'
                projectResourceOwnerQuery:
                    $ref: '#/components/schemas/ProjectResourceOwnerQuery'
        ProjectResourceOwnerQuery:
            type: object
            properties:
                resourceOwner:
                    type: string
        Provider:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                state:
                    type: integer
                    format: enum
                name:
                    type: string
                owner:
                    type: integer
                    format: enum
                type:
                    type: integer
                    format: enum
                config:
                    $ref: '#/components/schemas/ProviderConfig'
        ProviderConfig:
            type: object
            properties:
                options:
                    $ref: '#/components/schemas/Options'
                ldap:
                    $ref: '#/components/schemas/LDAPConfig'
                google:
                    $ref: '#/components/schemas/GoogleConfig'
                oauth:
                    $ref: '#/components/schemas/OAuthConfig'
                oidc:
                    $ref: '#/components/schemas/GenericOIDCConfig'
                jwt:
                    $ref: '#/components/schemas/JWTConfig'
                github:
                    $ref: '#/components/schemas/GitHubConfig'
                githubEs:
                    $ref: '#/components/schemas/GitHubEnterpriseServerConfig'
                gitlab:
                    $ref: '#/components/schemas/GitLabConfig'
                gitlabSelfHosted:
                    $ref: '#/components/schemas/GitLabSelfHostedConfig'
                azureAd:
                    $ref: '#/components/schemas/AzureADConfig'
                apple:
                    $ref: '#/components/schemas/AppleConfig'
                saml:
                    $ref: '#/components/schemas/SAMLConfig'
        ProviderQuery:
            type: object
            properties:
                idpIdQuery:
                    $ref: '#/components/schemas/IDPIDQuery'
                idpNameQuery:
                    $ref: '#/components/schemas/IDPNameQuery'
                ownerTypeQuery:
                    $ref: '#/components/schemas/IDPOwnerTypeQuery'
        Query:
            type: object
            properties:
                idQuery:
                    $ref: '#/components/schemas/IdsQuery'
                domainQuery:
                    $ref: '#/components/schemas/DomainsQuery'
        ReactivateActionRequest:
            type: object
            properties:
                id:
                    type: string
        ReactivateActionResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ReactivateAppRequest:
            type: object
            properties:
                projectId:
                    type: string
                appId:
                    type: string
        ReactivateAppResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ReactivateIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ReactivateOrgIDPRequest:
            type: object
            properties:
                idpId:
                    type: string
        ReactivateOrgIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ReactivateOrgRequest:
            type: object
            properties: {}
            description: This is an empty request
        ReactivateOrgResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ReactivateProjectGrantRequest:
            type: object
            properties:
                projectId:
                    type: string
                grantId:
                    type: string
        ReactivateProjectGrantResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ReactivateProjectRequest:
            type: object
            properties:
                id:
                    type: string
        ReactivateProjectResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ReactivateUserGrantRequest:
            type: object
            properties:
                userId:
                    type: string
                grantId:
                    type: string
        ReactivateUserGrantResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ReactivateUserRequest:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
        ReactivateUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ReactivateUserSchemaResponse:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/Details'
                    description: Details provide some base information (such as the last change date) of the schema.
        RedirectResponse:
            type: object
            properties: {}
        RedirectURLs:
            type: object
            properties:
                successUrl:
                    type: string
                failureUrl:
                    type: string
        RefreshToken:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                clientId:
                    type: string
                authTime:
                    type: string
                    format: date-time
                idleExpiration:
                    type: string
                    format: date-time
                expiration:
                    type: string
                    format: date-time
                scopes:
                    type: array
                    items:
                        type: string
                audience:
                    type: array
                    items:
                        type: string
        RegenerateAPIClientSecretRequest:
            type: object
            properties:
                projectId:
                    type: string
                appId:
                    type: string
        RegenerateAPIClientSecretResponse:
            type: object
            properties:
                clientSecret:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RegenerateOIDCClientSecretRequest:
            type: object
            properties:
                projectId:
                    type: string
                appId:
                    type: string
        RegenerateOIDCClientSecretResponse:
            type: object
            properties:
                clientSecret:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RegenerateSAMLProviderCertificateRequest:
            type: object
            properties:
                id:
                    type: string
        RegenerateSAMLProviderCertificateResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RegisterPasskeyRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
                code:
                    $ref: '#/components/schemas/PasskeyRegistrationCode'
                authenticator:
                    type: integer
                    format: enum
                domain:
                    type: string
        RegisterPasskeyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                passkeyId:
                    type: string
                publicKeyCredentialCreationOptions:
                    type: object
        RegisterTOTPRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
        RegisterTOTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                uri:
                    type: string
                secret:
                    type: string
        RegisterU2FRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
                domain:
                    type: string
        RegisterU2FResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                u2fId:
                    type: string
                publicKeyCredentialCreationOptions:
                    type: object
        RegistrationOptionScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                userNameButtonText:
                    type: string
                externalLoginDescription:
                    type: string
                loginButtonText:
                    type: string
        RegistrationOrgScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                orgnameLabel:
                    type: string
                firstnameLabel:
                    type: string
                lastnameLabel:
                    type: string
                usernameLabel:
                    type: string
                emailLabel:
                    type: string
                passwordLabel:
                    type: string
                passwordConfirmLabel:
                    type: string
                tosAndPrivacyLabel:
                    type: string
                tosConfirm:
                    type: string
                tosLinkText:
                    type: string
                privacyConfirm:
                    type: string
                privacyLinkText:
                    type: string
                saveButtonText:
                    type: string
        RegistrationUserScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                descriptionOrgRegister:
                    type: string
                firstnameLabel:
                    type: string
                lastnameLabel:
                    type: string
                emailLabel:
                    type: string
                usernameLabel:
                    type: string
                languageLabel:
                    type: string
                genderLabel:
                    type: string
                passwordLabel:
                    type: string
                passwordConfirmLabel:
                    type: string
                tosAndPrivacyLabel:
                    type: string
                tosConfirm:
                    type: string
                tosLinkText:
                    type: string
                privacyConfirm:
                    type: string
                privacyLinkText:
                    type: string
                nextButtonText:
                    type: string
                backButtonText:
                    type: string
        RemoveAppKeyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveAppResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveCustomLabelPolicyFontResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveCustomLabelPolicyIconDarkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveCustomLabelPolicyIconResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveCustomLabelPolicyLogoDarkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveCustomLabelPolicyLogoResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveDomainResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveEmailProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveFailedEventResponse:
            type: object
            properties: {}
            description: This is an empty response
        RemoveHumanAuthFactorOTPEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveHumanAuthFactorOTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveHumanAuthFactorOTPSMSResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveHumanAuthFactorU2FResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveHumanAvatarResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveHumanLinkedIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveHumanPasswordlessResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveHumanPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveIAMMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveIDPAuthenticatorResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveIDPFromLoginPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveIDPLinkRequest:
            required:
                - userId
                - idpId
                - linkedUserId
            type: object
            properties:
                userId:
                    type: string
                idpId:
                    type: string
                linkedUserId:
                    type: string
        RemoveIDPLinkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveInstanceResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveInstanceTrustedDomainResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveLabelPolicyFontResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveLabelPolicyIconDarkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveLabelPolicyIconResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveLabelPolicyLogoDarkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveLabelPolicyLogoResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMachineKeyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMachineSecretResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMultiFactorFromLoginPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMyAuthFactorOTPEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMyAuthFactorOTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMyAuthFactorOTPSMSResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMyAuthFactorU2FResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMyAvatarResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMyLinkedIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMyPasswordlessResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMyPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveMyUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveOTPEmailAuthenticatorResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveOTPEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveOTPSMSAuthenticatorResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveOTPSMSResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveOrgDomainResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveOrgIDPResponse:
            type: object
            properties: {}
            description: This is an empty response
        RemoveOrgMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveOrgMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveOrgResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemovePasskeyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemovePersonalAccessTokenResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemovePhoneRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
        RemovePhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveProjectGrantMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveProjectGrantResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveProjectMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveProjectResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveProjectRoleResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveQuotaResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveSMSProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveSMTPConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveSecondFactorFromLoginPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveTOTPAuthenticatorResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveTOTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveU2FResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveUserGrantResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveUserMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        RemoveUsernameResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RemoveWebAuthNAuthenticatorResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        RequestChallenges:
            type: object
            properties:
                webAuthN:
                    $ref: '#/components/schemas/RequestChallenges_WebAuthN'
                otpSms:
                    $ref: '#/components/schemas/RequestChallenges_OTPSMS'
                otpEmail:
                    $ref: '#/components/schemas/RequestChallenges_OTPEmail'
        RequestChallenges_OTPEmail:
            type: object
            properties:
                sendCode:
                    $ref: '#/components/schemas/OTPEmail_SendCode'
                returnCode:
                    $ref: '#/components/schemas/OTPEmail_ReturnCode'
        RequestChallenges_OTPSMS:
            type: object
            properties:
                returnCode:
                    type: boolean
        RequestChallenges_WebAuthN:
            required:
                - domain
                - userVerificationRequirement
            type: object
            properties:
                domain:
                    type: string
                userVerificationRequirement:
                    type: integer
                    format: enum
        RequestExecution:
            type: object
            properties:
                method:
                    type: string
                    description: GRPC-method as condition.
                service:
                    type: string
                    description: GRPC-service as condition.
                all:
                    type: boolean
                    description: All calls to any available services and methods as condition.
        RequestPasswordResetRequest:
            required:
                - id
            type: object
            properties:
                instance:
                    $ref: '#/components/schemas/Instance'
                organization:
                    allOf:
                        - $ref: '#/components/schemas/Organization'
                    description: Optionally expect the user to be in this organization.
                id:
                    type: string
                    description: unique identifier of the user.
                sendEmail:
                    allOf:
                        - $ref: '#/components/schemas/SendPasswordResetEmail'
                    description: Let ZITADEL send the link to the user via email.
                sendSms:
                    allOf:
                        - $ref: '#/components/schemas/SendPasswordResetSMS'
                    description: Let ZITADEL send the link to the user via SMS.
                returnCode:
                    allOf:
                        - $ref: '#/components/schemas/ReturnPasswordResetCode'
                    description: Get the code back to provide it to the user in your preferred mechanism.
        RequestPasswordResetResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: In case the medium was set to return_code, the code will be returned.
        ResendContactEmailCodeRequest:
            required:
                - id
            type: object
            properties:
                instance:
                    $ref: '#/components/schemas/Instance'
                organization:
                    allOf:
                        - $ref: '#/components/schemas/Organization'
                    description: Optionally expect the user to be in this organization.
                id:
                    type: string
                    description: unique identifier of the user.
                sendCode:
                    allOf:
                        - $ref: '#/components/schemas/SendEmailVerificationCode'
                    description: Let ZITADEL send the link to the user via email.
                returnCode:
                    allOf:
                        - $ref: '#/components/schemas/ReturnEmailVerificationCode'
                    description: Get the code back to provide it to the user in your preferred mechanism.
        ResendContactEmailCodeResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: in case the verification was set to return_code, the code will be returned.
        ResendContactPhoneCodeRequest:
            required:
                - id
            type: object
            properties:
                instance:
                    $ref: '#/components/schemas/Instance'
                organization:
                    allOf:
                        - $ref: '#/components/schemas/Organization'
                    description: Optionally expect the user to be in this organization.
                id:
                    type: string
                    description: unique identifier of the user.
                sendCode:
                    allOf:
                        - $ref: '#/components/schemas/SendPhoneVerificationCode'
                    description: Let ZITADEL send the link to the user via SMS.
                returnCode:
                    allOf:
                        - $ref: '#/components/schemas/ReturnPhoneVerificationCode'
                    description: Get the code back to provide it to the user in your preferred mechanism.
        ResendContactPhoneCodeResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: in case the verification was set to return_code, the code will be returned.
        ResendEmailCodeRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
                sendCode:
                    $ref: '#/components/schemas/SendEmailVerificationCode'
                returnCode:
                    $ref: '#/components/schemas/ReturnEmailVerificationCode'
        ResendEmailCodeResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: in case the verification was set to return_code, the code will be returned
        ResendHumanEmailVerificationRequest:
            type: object
            properties:
                userId:
                    type: string
        ResendHumanEmailVerificationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResendHumanInitializationRequest:
            type: object
            properties:
                userId:
                    type: string
                email:
                    type: string
        ResendHumanInitializationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResendHumanPhoneVerificationRequest:
            type: object
            properties:
                userId:
                    type: string
        ResendHumanPhoneVerificationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResendInviteCodeResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        ResendMyEmailVerificationRequest:
            type: object
            properties: {}
            description: This is an empty request
        ResendMyEmailVerificationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResendMyPhoneVerificationRequest:
            type: object
            properties: {}
            description: This is an empty request
        ResendMyPhoneVerificationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResendPhoneCodeRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
                sendCode:
                    $ref: '#/components/schemas/SendPhoneVerificationCode'
                returnCode:
                    $ref: '#/components/schemas/ReturnPhoneVerificationCode'
        ResendPhoneCodeResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: in case the verification was set to return_code, the code will be returned
        ResetCustomDomainClaimedMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomDomainPolicyToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomInitMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomInviteUserMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomLoginTextsToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomOrgIAMPolicyToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomPasswordChangeMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomPasswordResetMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomVerifyEmailMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomVerifyEmailOTPMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomVerifyPhoneMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetCustomVerifySMSOTPMessageTextToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetInstanceFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        ResetLabelPolicyToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetLimitsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetLockoutPolicyToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetLoginPolicyToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetNotificationPolicyToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetOrganizationFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        ResetPasswordAgePolicyToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetPasswordComplexityPolicyToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetPrivacyPolicyToDefaultResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        ResetSystemFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        ResetUserFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        ResponseExecution:
            type: object
            properties:
                method:
                    type: string
                    description: GRPC-method as condition.
                service:
                    type: string
                    description: GRPC-service as condition.
                all:
                    type: boolean
                    description: All calls to any available services and methods as condition.
        RetrieveIdentityProviderIntentRequest:
            type: object
            properties:
                idpIntentId:
                    type: string
                idpIntentToken:
                    type: string
        RetrieveIdentityProviderIntentResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                idpInformation:
                    $ref: '#/components/schemas/IDPInformation'
                userId:
                    type: string
        ReturnEmailVerificationCode:
            type: object
            properties: {}
        ReturnInviteCode:
            type: object
            properties: {}
        ReturnPasskeyRegistrationCode:
            type: object
            properties: {}
        ReturnPasswordResetCode:
            type: object
            properties: {}
        ReturnPhoneVerificationCode:
            type: object
            properties: {}
        ReturnWebAuthNRegistrationCode:
            type: object
            properties: {}
        RevokeAllMyRefreshTokensRequest:
            type: object
            properties: {}
            description: This is an empty request
        RevokeAllMyRefreshTokensResponse:
            type: object
            properties: {}
            description: This is an empty response
        RevokeMyRefreshTokenResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        Role:
            type: object
            properties:
                key:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                displayName:
                    type: string
                group:
                    type: string
        RoleDisplayNameQuery:
            type: object
            properties:
                displayName:
                    type: string
                method:
                    type: integer
                    format: enum
        RoleKeyQuery:
            type: object
            properties:
                key:
                    type: string
                method:
                    type: integer
                    format: enum
        RoleQuery:
            type: object
            properties:
                keyQuery:
                    $ref: '#/components/schemas/RoleKeyQuery'
                displayNameQuery:
                    $ref: '#/components/schemas/RoleDisplayNameQuery'
        SAMLConfig:
            type: object
            properties:
                metadataXml:
                    type: string
                    description: Metadata of the SAML identity provider.
                    format: bytes
                binding:
                    type: integer
                    description: Binding which defines the type of communication with the identity provider.
                    format: enum
                withSignedRequest:
                    type: boolean
                    description: Boolean which defines if the authentication requests are signed.
                nameIdFormat:
                    type: integer
                    description: '`nameid-format` for the SAML Request.'
                    format: enum
                transientMappingAttributeName:
                    type: string
                    description: |-
                        Optional name of the attribute, which will be used to map the user
                         in case the nameid-format returned is `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
        SAMLRequest:
            type: object
            properties:
                id:
                    type: string
                creationDate:
                    type: string
                    format: date-time
                issuer:
                    type: string
                assertionConsumerService:
                    type: string
                relayState:
                    type: string
                binding:
                    type: string
        SMSProvider:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                id:
                    type: string
                state:
                    type: integer
                    format: enum
                description:
                    type: string
                twilio:
                    $ref: '#/components/schemas/TwilioConfig'
                http:
                    $ref: '#/components/schemas/HTTPConfig'
        SMTPConfig:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                senderAddress:
                    type: string
                senderName:
                    type: string
                tls:
                    type: boolean
                host:
                    type: string
                user:
                    type: string
                replyToAddress:
                    type: string
                state:
                    type: integer
                    format: enum
                description:
                    type: string
                id:
                    type: string
        SchemaIDFilter:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Defines the ID of the schema to query for.
        SchemaTypeFilter:
            required:
                - type
            type: object
            properties:
                type:
                    type: string
                    description: Defines which type to query for.
                method:
                    type: integer
                    description: Defines which text comparison method used for the type query.
                    format: enum
        SearchExecutionsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetExecution'
        SearchFilter:
            type: object
            properties:
                orFilter:
                    allOf:
                        - $ref: '#/components/schemas/OrFilter'
                    description: Union the results of each sub filter ('OR').
                andFilter:
                    allOf:
                        - $ref: '#/components/schemas/AndFilter'
                    description: |-
                        Limit the result to match all sub queries ('AND').
                         Note that if you specify multiple queries, they will be implicitly used as andQueries.
                         Use the andFilter in combination with orFilter and notFilter.
                notFilter:
                    allOf:
                        - $ref: '#/components/schemas/NotFilter'
                    description: Exclude / Negate the result of the sub query ('NOT').
                userIdFilter:
                    allOf:
                        - $ref: '#/components/schemas/UserIDFilter'
                    description: Limit the result to a specific user ID.
                organizationIdFilter:
                    allOf:
                        - $ref: '#/components/schemas/OrganizationIDFilter'
                    description: Limit the result to a specific organization.
                usernameFilter:
                    allOf:
                        - $ref: '#/components/schemas/UsernameFilter'
                    description: Limit the result to a specific username.
                emailFilter:
                    allOf:
                        - $ref: '#/components/schemas/EmailFilter'
                    description: Limit the result to a specific contact email.
                phoneFilter:
                    allOf:
                        - $ref: '#/components/schemas/PhoneFilter'
                    description: Limit the result to a specific contact phone.
                stateFilter:
                    allOf:
                        - $ref: '#/components/schemas/StateFilter'
                    description: Limit the result to a specific state of the user.
                schemaIdFilter:
                    allOf:
                        - $ref: '#/components/schemas/SchemaIDFilter'
                    description: Limit the result to a specific schema ID.
                schemaTypeFilter:
                    allOf:
                        - $ref: '#/components/schemas/SchemaTypeFilter'
                    description: Limit the result to a specific schema type.
        SearchQuery:
            type: object
            properties:
                userNameQuery:
                    $ref: '#/components/schemas/UserNameQuery'
                firstNameQuery:
                    $ref: '#/components/schemas/FirstNameQuery'
                lastNameQuery:
                    $ref: '#/components/schemas/LastNameQuery'
                nickNameQuery:
                    $ref: '#/components/schemas/NickNameQuery'
                displayNameQuery:
                    $ref: '#/components/schemas/DisplayNameQuery'
                emailQuery:
                    $ref: '#/components/schemas/EmailQuery'
                stateQuery:
                    $ref: '#/components/schemas/StateQuery'
                typeQuery:
                    $ref: '#/components/schemas/TypeQuery'
                loginNameQuery:
                    $ref: '#/components/schemas/LoginNameQuery'
                inUserIdsQuery:
                    $ref: '#/components/schemas/InUserIDQuery'
                orQuery:
                    $ref: '#/components/schemas/OrQuery'
                andQuery:
                    $ref: '#/components/schemas/AndQuery'
                notQuery:
                    $ref: '#/components/schemas/NotQuery'
                inUserEmailsQuery:
                    $ref: '#/components/schemas/InUserEmailsQuery'
                organizationIdQuery:
                    $ref: '#/components/schemas/OrganizationIdQuery'
                phoneQuery:
                    $ref: '#/components/schemas/PhoneQuery'
        SearchTargetsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ListDetails'
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetTarget'
        SearchUserSchemasResponse:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/ListDetails'
                    description: Details provides information about the returned result including total amount found.
                sortingColumn:
                    type: integer
                    description: States by which field the results are sorted.
                    format: enum
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetUserSchema'
                    description: The result contains the user schemas, which matched the queries.
        SearchUsersResponse:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/ListDetails'
                    description: Details provides information about the returned result including total amount found.
                result:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetUser'
                    description: The result contains the user schemas, which matched the queries.
        SecretGenerator:
            type: object
            properties:
                generatorType:
                    type: integer
                    format: enum
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                length:
                    type: integer
                    format: uint32
                expiry:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                includeLowerLetters:
                    type: boolean
                includeUpperLetters:
                    type: boolean
                includeDigits:
                    type: boolean
                includeSymbols:
                    type: boolean
        SecretGeneratorQuery:
            type: object
            properties:
                typeQuery:
                    $ref: '#/components/schemas/SecretGeneratorTypeQuery'
        SecretGeneratorTypeQuery:
            type: object
            properties:
                generatorType:
                    type: integer
                    format: enum
        SecurityPolicy:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                enableIframeEmbedding:
                    type: boolean
                    description: states if iframe embedding is enabled or disabled
                allowedOrigins:
                    type: array
                    items:
                        type: string
                    description: origins allowed loading ZITADEL in an iframe if enable_iframe_embedding is true
                enableImpersonation:
                    type: boolean
                    description: allows users to impersonate other users. The impersonator needs the appropriate `*_IMPERSONATOR` roles assigned as well"
        SecuritySettings:
            type: object
            properties:
                embeddedIframe:
                    $ref: '#/components/schemas/EmbeddedIframeSettings'
                enableImpersonation:
                    type: boolean
        SelectAccountScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                titleLinkingProcess:
                    type: string
                descriptionLinkingProcess:
                    type: string
                otherUser:
                    type: string
                sessionStateActive:
                    type: string
                sessionStateInactive:
                    type: string
                userMustBeMemberOfOrg:
                    type: string
        SelectLanguages:
            type: object
            properties:
                list:
                    type: array
                    items:
                        type: string
            description: We have to wrap the languages list into a message so we can serialize empty lists.
        SendEmailCodeRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    type: string
                sendCode:
                    $ref: '#/components/schemas/SendEmailVerificationCode'
                returnCode:
                    $ref: '#/components/schemas/ReturnEmailVerificationCode'
        SendEmailCodeResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: in case the verification was set to return_code, the code will be returned
        SendEmailVerificationCode:
            type: object
            properties:
                urlTemplate:
                    type: string
        SendHumanResetPasswordNotificationRequest:
            type: object
            properties:
                userId:
                    type: string
                type:
                    type: integer
                    format: enum
        SendHumanResetPasswordNotificationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SendInviteCode:
            type: object
            properties:
                urlTemplate:
                    type: string
                    description: |-
                        Optionally set a url_template, which will be used in the invite mail sent by ZITADEL to guide the user to your invitation page.
                         If no template is set, the default ZITADEL url will be used.

                         The following placeholders can be used: UserID, OrgID, Code
                applicationName:
                    type: string
                    description: |-
                        Optionally set an application name, which will be used in the invite mail sent by ZITADEL.
                         If no application name is set, ZITADEL will be used as default.
        SendMyPasswordlessLinkRequest:
            type: object
            properties: {}
            description: This is an empty request
        SendMyPasswordlessLinkResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SendPasskeyRegistrationLink:
            type: object
            properties:
                urlTemplate:
                    type: string
        SendPasswordResetEmail:
            type: object
            properties:
                urlTemplate:
                    type: string
                    description: |-
                        Optionally set a url_template, which will be used in the password reset mail
                         sent by ZITADEL to guide the user to your password change page.
                         If no template is set, the default ZITADEL url will be used.
        SendPasswordResetLink:
            type: object
            properties:
                notificationType:
                    type: integer
                    format: enum
                urlTemplate:
                    type: string
        SendPasswordResetSMS:
            type: object
            properties: {}
        SendPasswordlessRegistrationRequest:
            type: object
            properties:
                userId:
                    type: string
        SendPasswordlessRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SendPhoneVerificationCode:
            type: object
            properties: {}
        SendWebAuthNRegistrationLink:
            type: object
            properties:
                urlTemplate:
                    type: string
                    description: |-
                        Optionally set a url_template, which will be used in the mail sent by ZITADEL
                         to guide the user to your passkey registration page.
                         If no template is set, the default ZITADEL url will be used.
        Session:
            type: object
            properties:
                sessionId:
                    type: string
                sessionToken:
                    type: string
        SetAuthenticators:
            type: object
            properties:
                usernames:
                    type: array
                    items:
                        $ref: '#/components/schemas/SetUsername'
                password:
                    $ref: '#/components/schemas/SetPassword'
        SetContact:
            type: object
            properties:
                email:
                    $ref: '#/components/schemas/SetEmail'
                phone:
                    $ref: '#/components/schemas/SetPhone'
        SetContactEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: The verification code will be set if a contact email was set with a return_code verification option.
        SetContactPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: The phone verification code will be set if a contact phone was set with a return_code verification option.
        SetCustomDomainClaimedMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetCustomDomainClaimedMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomInitMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetCustomInitMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomInviteUserMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetCustomInviteUserMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomLoginTextsRequest:
            type: object
            properties:
                language:
                    type: string
                selectAccountText:
                    $ref: '#/components/schemas/SelectAccountScreenText'
                loginText:
                    $ref: '#/components/schemas/LoginScreenText'
                passwordText:
                    $ref: '#/components/schemas/PasswordScreenText'
                usernameChangeText:
                    $ref: '#/components/schemas/UsernameChangeScreenText'
                usernameChangeDoneText:
                    $ref: '#/components/schemas/UsernameChangeDoneScreenText'
                initPasswordText:
                    $ref: '#/components/schemas/InitPasswordScreenText'
                initPasswordDoneText:
                    $ref: '#/components/schemas/InitPasswordDoneScreenText'
                emailVerificationText:
                    $ref: '#/components/schemas/EmailVerificationScreenText'
                emailVerificationDoneText:
                    $ref: '#/components/schemas/EmailVerificationDoneScreenText'
                initializeUserText:
                    $ref: '#/components/schemas/InitializeUserScreenText'
                initializeDoneText:
                    $ref: '#/components/schemas/InitializeUserDoneScreenText'
                initMfaPromptText:
                    $ref: '#/components/schemas/InitMFAPromptScreenText'
                initMfaOtpText:
                    $ref: '#/components/schemas/InitMFAOTPScreenText'
                initMfaU2fText:
                    $ref: '#/components/schemas/InitMFAU2FScreenText'
                initMfaDoneText:
                    $ref: '#/components/schemas/InitMFADoneScreenText'
                mfaProvidersText:
                    $ref: '#/components/schemas/MFAProvidersText'
                verifyMfaOtpText:
                    $ref: '#/components/schemas/VerifyMFAOTPScreenText'
                verifyMfaU2fText:
                    $ref: '#/components/schemas/VerifyMFAU2FScreenText'
                passwordlessText:
                    $ref: '#/components/schemas/PasswordlessScreenText'
                passwordChangeText:
                    $ref: '#/components/schemas/PasswordChangeScreenText'
                passwordChangeDoneText:
                    $ref: '#/components/schemas/PasswordChangeDoneScreenText'
                passwordResetDoneText:
                    $ref: '#/components/schemas/PasswordResetDoneScreenText'
                registrationOptionText:
                    $ref: '#/components/schemas/RegistrationOptionScreenText'
                registrationUserText:
                    $ref: '#/components/schemas/RegistrationUserScreenText'
                registrationOrgText:
                    $ref: '#/components/schemas/RegistrationOrgScreenText'
                linkingUserDoneText:
                    $ref: '#/components/schemas/LinkingUserDoneScreenText'
                externalUserNotFoundText:
                    $ref: '#/components/schemas/ExternalUserNotFoundScreenText'
                successLoginText:
                    $ref: '#/components/schemas/SuccessLoginScreenText'
                logoutText:
                    $ref: '#/components/schemas/LogoutDoneScreenText'
                footerText:
                    $ref: '#/components/schemas/FooterText'
                passwordlessPromptText:
                    $ref: '#/components/schemas/PasswordlessPromptScreenText'
                passwordlessRegistrationText:
                    $ref: '#/components/schemas/PasswordlessRegistrationScreenText'
                passwordlessRegistrationDoneText:
                    $ref: '#/components/schemas/PasswordlessRegistrationDoneScreenText'
                externalRegistrationUserOverviewText:
                    $ref: '#/components/schemas/ExternalRegistrationUserOverviewScreenText'
                linkingUserPromptText:
                    allOf:
                        - $ref: '#/components/schemas/LinkingUserPromptScreenText'
                    description: 'Deprecated: the linking user prompt screen no longer exists'
        SetCustomLoginTextsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomPasswordChangeMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetCustomPasswordChangeMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomPasswordResetMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetCustomPasswordResetMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomPasswordlessRegistrationMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetCustomPasswordlessRegistrationMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomVerifyEmailMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetCustomVerifyEmailMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomVerifyEmailOTPMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetCustomVerifyEmailOTPMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomVerifyPhoneMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetCustomVerifyPhoneMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetCustomVerifySMSOTPMessageTextRequest:
            type: object
            properties:
                language:
                    type: string
                text:
                    type: string
        SetCustomVerifySMSOTPMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultDomainClaimedMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetDefaultDomainClaimedMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultInitMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetDefaultInitMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultInviteUserMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetDefaultInviteUserMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultLanguageResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultOrgResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultPasswordChangeMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetDefaultPasswordChangeMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultPasswordResetMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetDefaultPasswordResetMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultPasswordlessRegistrationMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetDefaultPasswordlessRegistrationMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultVerifyEmailMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetDefaultVerifyEmailMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultVerifyEmailOTPMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetDefaultVerifyEmailOTPMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultVerifyPhoneMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                title:
                    type: string
                preHeader:
                    type: string
                subject:
                    type: string
                greeting:
                    type: string
                text:
                    type: string
                buttonText:
                    type: string
                footerText:
                    type: string
        SetDefaultVerifyPhoneMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetDefaultVerifySMSOTPMessageTextRequest:
            required:
                - language
            type: object
            properties:
                language:
                    type: string
                text:
                    type: string
        SetDefaultVerifySMSOTPMessageTextResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetEmail:
            required:
                - address
            type: object
            properties:
                address:
                    type: string
                    description: Set the email address.
                sendCode:
                    allOf:
                        - $ref: '#/components/schemas/SendEmailVerificationCode'
                    description: Let ZITADEL send the link to the user via email.
                returnCode:
                    allOf:
                        - $ref: '#/components/schemas/ReturnEmailVerificationCode'
                    description: Get the code back to provide it to the user in your preferred mechanism.
                isVerified:
                    type: boolean
                    description: Set the email as already verified.
        SetEmailRequest:
            required:
                - userId
                - email
            type: object
            properties:
                userId:
                    type: string
                email:
                    type: string
                sendCode:
                    $ref: '#/components/schemas/SendEmailVerificationCode'
                returnCode:
                    $ref: '#/components/schemas/ReturnEmailVerificationCode'
                isVerified:
                    type: boolean
        SetEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: in case the verification was set to return_code, the code will be returned
        SetExecutionRequest:
            type: object
            properties:
                instance:
                    $ref: '#/components/schemas/Instance'
                condition:
                    $ref: '#/components/schemas/Condition'
                execution:
                    $ref: '#/components/schemas/Execution'
        SetExecutionResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        SetHumanEmail:
            required:
                - email
            type: object
            properties:
                email:
                    type: string
                sendCode:
                    $ref: '#/components/schemas/SendEmailVerificationCode'
                returnCode:
                    $ref: '#/components/schemas/ReturnEmailVerificationCode'
                isVerified:
                    type: boolean
        SetHumanInitialPasswordRequest:
            type: object
            properties:
                userId:
                    type: string
                password:
                    type: string
        SetHumanInitialPasswordResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetHumanPasswordRequest:
            required:
                - password
            type: object
            properties:
                userId:
                    type: string
                password:
                    type: string
                noChangeRequired:
                    type: boolean
        SetHumanPasswordResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetHumanPhone:
            type: object
            properties:
                phone:
                    type: string
                sendCode:
                    $ref: '#/components/schemas/SendPhoneVerificationCode'
                returnCode:
                    $ref: '#/components/schemas/ReturnPhoneVerificationCode'
                isVerified:
                    type: boolean
        SetHumanProfile:
            required:
                - givenName
                - familyName
            type: object
            properties:
                givenName:
                    type: string
                familyName:
                    type: string
                nickName:
                    type: string
                displayName:
                    type: string
                preferredLanguage:
                    type: string
                gender:
                    type: integer
                    format: enum
        SetInstanceFeatureRequest:
            type: object
            properties:
                instanceId:
                    type: string
                featureId:
                    type: integer
                    format: enum
                bool:
                    type: boolean
        SetInstanceFeatureResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetInstanceFeaturesRequest:
            type: object
            properties:
                loginDefaultOrg:
                    type: boolean
                oidcTriggerIntrospectionProjections:
                    type: boolean
                oidcLegacyIntrospection:
                    type: boolean
                userSchema:
                    type: boolean
                oidcTokenExchange:
                    type: boolean
                actions:
                    type: boolean
                improvedPerformance:
                    type: array
                    items:
                        type: integer
                        format: enum
                webKey:
                    type: boolean
                debugOidcParentError:
                    type: boolean
                oidcSingleV1SessionTermination:
                    type: boolean
                disableUserTokenEvent:
                    type: boolean
                enableBackChannelLogout:
                    type: boolean
                loginV2:
                    $ref: '#/components/schemas/LoginV2'
        SetInstanceFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        SetLimitsRequest:
            type: object
            properties:
                instanceId:
                    type: string
                auditLogRetention:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                block:
                    type: boolean
        SetLimitsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetMyEmailRequest:
            required:
                - email
            type: object
            properties:
                email:
                    type: string
        SetMyEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetMyPhoneRequest:
            required:
                - phone
            type: object
            properties:
                phone:
                    type: string
        SetMyPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetOrgMetadataRequest:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
                    format: bytes
        SetOrgMetadataResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetOrganizationFeaturesRequest:
            type: object
            properties:
                organizationId:
                    type: string
        SetOrganizationFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        SetPassword:
            required:
                - currentPassword
                - verificationCode
            type: object
            properties:
                password:
                    $ref: '#/components/schemas/Password'
                hashedPassword:
                    $ref: '#/components/schemas/HashedPassword'
                currentPassword:
                    type: string
                verificationCode:
                    type: string
        SetPasswordRequest:
            required:
                - userId
                - currentPassword
                - verificationCode
            type: object
            properties:
                userId:
                    type: string
                newPassword:
                    $ref: '#/components/schemas/Password'
                currentPassword:
                    type: string
                verificationCode:
                    type: string
        SetPasswordResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        SetPhone:
            required:
                - number
            type: object
            properties:
                number:
                    type: string
                    description: Set the user's phone number.
                sendCode:
                    allOf:
                        - $ref: '#/components/schemas/SendPhoneVerificationCode'
                    description: Let ZITADEL send the link to the user via SMS.
                returnCode:
                    allOf:
                        - $ref: '#/components/schemas/ReturnPhoneVerificationCode'
                    description: Get the code back to provide it to the user in your preferred mechanism.
                isVerified:
                    type: boolean
                    description: Set the phone as already verified.
        SetPhoneRequest:
            required:
                - userId
                - phone
            type: object
            properties:
                userId:
                    type: string
                phone:
                    type: string
                sendCode:
                    $ref: '#/components/schemas/SendPhoneVerificationCode'
                returnCode:
                    $ref: '#/components/schemas/ReturnPhoneVerificationCode'
                isVerified:
                    type: boolean
        SetPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                verificationCode:
                    type: string
                    description: in case the verification was set to return_code, the code will be returned
        SetPrimaryDomainRequest:
            type: object
            properties:
                instanceId:
                    type: string
                domain:
                    type: string
        SetPrimaryDomainResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetPrimaryOrgDomainResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetQuotaRequest:
            type: object
            properties:
                instanceId:
                    type: string
                unit:
                    type: integer
                    description: the unit a quota should be imposed on
                    format: enum
                from:
                    type: string
                    description: the starting time from which the current quota period is calculated from. This is relevant for querying the current usage.
                    format: date-time
                resetInterval:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                    description: the quota periods duration
                amount:
                    type: string
                    description: the quota amount of units
                limit:
                    type: boolean
                    description: whether ZITADEL should block further usage when the configured amount is used
                notifications:
                    type: array
                    items:
                        $ref: '#/components/schemas/Notification'
                    description: the handlers, ZITADEL executes when certain quota percentages are reached
        SetQuotaResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetRESTAsync:
            type: object
            properties: {}
            description: Call is executed in parallel to others, ZITADEL does not wait until the call is finished. The state is ignored, call is sent as post.
        SetRESTCall:
            type: object
            properties:
                interruptOnError:
                    type: boolean
                    description: Define if any error stops the whole execution. By default the process continues as normal.
            description: Wait for response and response body is used, status is checked, call is sent as post.
        SetRESTWebhook:
            type: object
            properties:
                interruptOnError:
                    type: boolean
                    description: Define if any error stops the whole execution. By default the process continues as normal.
            description: Wait for response but response body is ignored, status is checked, call is sent as post.
        SetRestrictionsRequest:
            type: object
            properties:
                disallowPublicOrgRegistration:
                    type: boolean
                allowedLanguages:
                    $ref: '#/components/schemas/SelectLanguages'
        SetRestrictionsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetSecurityPolicyRequest:
            type: object
            properties:
                enableIframeEmbedding:
                    type: boolean
                    description: states if iframe embedding is enabled or disabled
                allowedOrigins:
                    type: array
                    items:
                        type: string
                    description: origins allowed loading ZITADEL in an iframe if enable_iframe_embedding is true
                enableImpersonation:
                    type: boolean
                    description: allows users to impersonate other users. The impersonator needs the appropriate `*_IMPERSONATOR` roles assigned as well"
        SetSecurityPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetSecuritySettingsRequest:
            type: object
            properties:
                embeddedIframe:
                    $ref: '#/components/schemas/EmbeddedIframeSettings'
                enableImpersonation:
                    type: boolean
        SetSecuritySettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        SetSessionRequest:
            type: object
            properties:
                sessionId:
                    type: string
                sessionToken:
                    type: string
                checks:
                    $ref: '#/components/schemas/Checks'
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                        format: bytes
                challenges:
                    $ref: '#/components/schemas/RequestChallenges'
                lifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
        SetSessionResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                sessionToken:
                    type: string
                challenges:
                    $ref: '#/components/schemas/Challenges'
        SetSystemFeaturesRequest:
            type: object
            properties:
                loginDefaultOrg:
                    type: boolean
                oidcTriggerIntrospectionProjections:
                    type: boolean
                oidcLegacyIntrospection:
                    type: boolean
                userSchema:
                    type: boolean
                oidcTokenExchange:
                    type: boolean
                actions:
                    type: boolean
                improvedPerformance:
                    type: array
                    items:
                        type: integer
                        format: enum
                oidcSingleV1SessionTermination:
                    type: boolean
                disableUserTokenEvent:
                    type: boolean
                enableBackChannelLogout:
                    type: boolean
                loginV2:
                    $ref: '#/components/schemas/LoginV2'
        SetSystemFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        SetTriggerActionsRequest:
            type: object
            properties:
                flowType:
                    type: string
                    description: |-
                        id of the flow type.
                         Following flows are currently allowed:
                         - External Authentication: FLOW_TYPE_EXTERNAL_AUTHENTICATION or 1
                         - Internal Authentication: 3
                         - Complement Token: 2
                         - Complement SAML Response: 4
                triggerType:
                    type: string
                    description: "id of the trigger type.\n Following triggers are currently allowed:\n - External Authentication:\n   - Post Authentication: TRIGGER_TYPE_POST_AUTHENTICATION or 1\n   - Pre Creation: TRIGGER_TYPE_PRE_CREATION or 2\n   - Post Creation: TRIGGER_TYPE_POST_CREATION or 3 \n - Internal Authentication:\n   - Post Authentication: TRIGGER_TYPE_POST_AUTHENTICATION or 1\n   - Pre Creation: TRIGGER_TYPE_PRE_CREATION or 2\n   - Post Creation: TRIGGER_TYPE_POST_CREATION or 3 \n - Complement Token:\n   - Pre Userinfo Creation: 4\n   - Pre Access Token Creation: 5\n - Complement SAML Response:\n   - Pre SAML Response Creation: 6"
                actionIds:
                    type: array
                    items:
                        type: string
        SetTriggerActionsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetUpOrgRequest:
            type: object
            properties:
                org:
                    $ref: '#/components/schemas/SetUpOrgRequest_Org'
                human:
                    allOf:
                        - $ref: '#/components/schemas/SetUpOrgRequest_Human'
                    description: oneof field for the user managing the organization
                roles:
                    type: array
                    items:
                        type: string
                    description: specify Org Member Roles for the provided user (default is ORG_OWNER if roles are empty)
        SetUpOrgRequest_Human:
            type: object
            properties:
                userName:
                    type: string
                profile:
                    $ref: '#/components/schemas/Human_Profile'
                email:
                    $ref: '#/components/schemas/Human_Email'
                phone:
                    $ref: '#/components/schemas/Human_Phone'
                password:
                    type: string
        SetUpOrgRequest_Org:
            type: object
            properties:
                name:
                    type: string
                domain:
                    type: string
        SetUpOrgResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                orgId:
                    type: string
                userId:
                    type: string
        SetUserFeatureRequest:
            type: object
            properties:
                userId:
                    type: string
        SetUserFeaturesResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        SetUserMetadataRequest:
            type: object
            properties:
                id:
                    type: string
                key:
                    type: string
                value:
                    type: string
                    format: bytes
        SetUserMetadataResponse:
            type: object
            properties:
                id:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        SetUsername:
            required:
                - username
            type: object
            properties:
                username:
                    type: string
                    description: Set the user's username. This will be used for identification during authentication.
                isOrganizationSpecific:
                    type: boolean
                    description: |-
                        By default username must be unique across all organizations in an instance.
                         This option allow to restrict the uniqueness to the user's own organization.
                         As a result, this username can only be used if the authentication is limited
                         to the corresponding organization.

                         This can be useful if you provide multiple usernames for a single user, where one
                         if specific to your organization, e.g.:
                         - gigi-giraffe@zitadel.com (unique across organizations)
                         - gigi-giraffe (unique only inside the ZITADEL organization)
        StartIdentityProviderIntentRequest:
            type: object
            properties:
                idpId:
                    type: string
                urls:
                    $ref: '#/components/schemas/RedirectURLs'
                ldap:
                    $ref: '#/components/schemas/LDAPCredentials'
        StartIdentityProviderIntentResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                authUrl:
                    type: string
                idpIntent:
                    $ref: '#/components/schemas/IDPIntent'
                postForm:
                    type: string
                    format: bytes
        StartTOTPRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                totpId:
                    type: string
                    description: unique identifier of the TOTP registration.
                uri:
                    type: string
                    description: The TOTP URI, which can be used to create a QR Code for scanning with an authenticator app.
                secret:
                    type: string
                    description: The TOTP secret, which can be used for manually adding in an authenticator app.
        StartWebAuthNRegistration:
            required:
                - domain
            type: object
            properties:
                domain:
                    type: string
                    description: Domain on which the user currently is or will be authenticated.
                authenticatorType:
                    type: integer
                    description: |-
                        Optionally specify the authenticator type of the passkey device (platform or cross-platform).
                         If none is provided, both values are allowed.
                    format: enum
                code:
                    allOf:
                        - $ref: '#/components/schemas/AuthenticatorRegistrationCode'
                    description: |-
                        Optionally provide a one time code generated by ZITADEL.
                         This is required to start the passkey registration without user authentication.
        StartWebAuthNRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                webAuthNId:
                    type: string
                    description: unique identifier of the WebAuthN registration.
                publicKeyCredentialCreationOptions:
                    type: object
                    description: |-
                        Options for Credential Creation (dictionary PublicKeyCredentialCreationOptions).
                         Generated helper methods transform the field to JSON, for use in a WebauthN client.
                         See also:  https://www.w3.org/TR/webauthn/#dictdef-publickeycredentialcreationoptions
        State:
            type: object
            properties:
                details:
                    allOf:
                        - $ref: '#/components/schemas/Details'
                    description: Details provide some base information (such as the last change date) of the schema.
                blob:
                    type: string
        StateFilter:
            type: object
            properties:
                state:
                    type: integer
                    description: Defines the state to query for.
                    format: enum
        StateQuery:
            required:
                - state
            type: object
            properties:
                state:
                    type: integer
                    format: enum
            description: Query for users with a specific state.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        SuccessLoginScreenText:
            type: object
            properties:
                title:
                    type: string
                autoRedirectDescription:
                    type: string
                    description: Text to describe that auto-redirect should happen after successful login
                redirectedDescription:
                    type: string
                    description: Text to describe that the window can be closed after redirect
                nextButtonText:
                    type: string
        TOTP:
            type: object
            properties:
                totpId:
                    type: string
                    description: unique identifier of the time-based one-time password (TOTP) authenticator.
                name:
                    type: string
                    description: The name provided during registration. This is used for easier identification.
                isVerified:
                    type: boolean
                    description: State whether the TOTP registration has been completed.
        Target:
            type: object
            properties:
                name:
                    type: string
                restWebhook:
                    $ref: '#/components/schemas/SetRESTWebhook'
                restCall:
                    $ref: '#/components/schemas/SetRESTCall'
                restAsync:
                    $ref: '#/components/schemas/SetRESTAsync'
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                    description: Timeout defines the duration until ZITADEL cancels the execution.
                endpoint:
                    type: string
        TargetFilter:
            type: object
            properties:
                targetId:
                    type: string
                    description: Defines the id to query for.
        TargetNameFilter:
            type: object
            properties:
                targetName:
                    type: string
                    description: Defines the name of the target to query for.
                method:
                    type: integer
                    description: Defines which text comparison method used for the name query.
                    format: enum
        TargetSearchFilter:
            type: object
            properties:
                targetNameFilter:
                    $ref: '#/components/schemas/TargetNameFilter'
                inTargetIdsFilter:
                    $ref: '#/components/schemas/InTargetIDsFilter'
        TestEmailProviderSMTPByIdRequest:
            required:
                - receiverAddress
            type: object
            properties:
                id:
                    type: string
                receiverAddress:
                    type: string
        TestEmailProviderSMTPByIdResponse:
            type: object
            properties: {}
            description: This is an empty response
        TestEmailProviderSMTPRequest:
            required:
                - senderAddress
                - senderName
                - host
                - receiverAddress
            type: object
            properties:
                senderAddress:
                    type: string
                senderName:
                    type: string
                tls:
                    type: boolean
                host:
                    type: string
                user:
                    type: string
                password:
                    type: string
                receiverAddress:
                    type: string
                id:
                    type: string
        TestEmailProviderSMTPResponse:
            type: object
            properties: {}
            description: This is an empty response
        TestSMTPConfigByIdRequest:
            required:
                - receiverAddress
            type: object
            properties:
                id:
                    type: string
                receiverAddress:
                    type: string
        TestSMTPConfigByIdResponse:
            type: object
            properties: {}
            description: This is an empty response
        TestSMTPConfigRequest:
            required:
                - senderAddress
                - senderName
                - host
                - receiverAddress
            type: object
            properties:
                senderAddress:
                    type: string
                senderName:
                    type: string
                tls:
                    type: boolean
                host:
                    type: string
                user:
                    type: string
                password:
                    type: string
                receiverAddress:
                    type: string
                id:
                    type: string
        TestSMTPConfigResponse:
            type: object
            properties: {}
            description: This is an empty response
        Theme:
            type: object
            properties:
                primaryColor:
                    type: string
                    description: hex value for primary color
                backgroundColor:
                    type: string
                    description: hex value for background color
                warnColor:
                    type: string
                    description: hex value for warning color
                fontColor:
                    type: string
                    description: hex value for font color
                logoUrl:
                    type: string
                    description: url where the logo is served
                iconUrl:
                    type: string
                    description: url where the icon is served
        TriggerAction:
            type: object
            properties:
                triggerType:
                    allOf:
                        - $ref: '#/components/schemas/TriggerType'
                    description: id of the trigger type
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Action'
        TriggerType:
            type: object
            properties:
                id:
                    type: string
                    description: identifier of the type
                name:
                    allOf:
                        - $ref: '#/components/schemas/LocalizedMessage'
                    description: key and name of the type
        TrustedDomain:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                domain:
                    type: string
        TwilioConfig:
            type: object
            properties:
                sid:
                    type: string
                senderNumber:
                    type: string
                verifyServiceSid:
                    type: string
        TypeQuery:
            required:
                - type
            type: object
            properties:
                type:
                    type: integer
                    format: enum
            description: Query for users with a specific type.
        UnlockUserRequest:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
        UnlockUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateAPIAppConfigRequest:
            type: object
            properties:
                projectId:
                    type: string
                appId:
                    type: string
                authMethodType:
                    type: integer
                    format: enum
        UpdateAPIAppConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateActionRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                script:
                    type: string
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                allowedToFail:
                    type: boolean
        UpdateActionResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateAppRequest:
            required:
                - name
            type: object
            properties:
                projectId:
                    type: string
                appId:
                    type: string
                name:
                    type: string
        UpdateAppResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateAppleProviderRequest:
            required:
                - clientId
                - teamId
                - keyId
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                clientId:
                    type: string
                teamId:
                    type: string
                keyId:
                    type: string
                privateKey:
                    type: string
                    format: bytes
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateAppleProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateAzureADProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                    description: client_secret will only be updated if provided
                tenant:
                    allOf:
                        - $ref: '#/components/schemas/AzureADTenant'
                    description: if not provided the `common` tenant will be used
                emailVerified:
                    type: boolean
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateAzureADProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateCustomDomainPolicyRequest:
            type: object
            properties:
                orgId:
                    type: string
                userLoginMustBeDomain:
                    type: boolean
                validateOrgDomains:
                    type: boolean
                smtpSenderAddressMatchesInstanceDomain:
                    type: boolean
        UpdateCustomDomainPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateCustomLabelPolicyRequest:
            type: object
            properties:
                primaryColor:
                    type: string
                hideLoginNameSuffix:
                    type: boolean
                warnColor:
                    type: string
                backgroundColor:
                    type: string
                fontColor:
                    type: string
                primaryColorDark:
                    type: string
                backgroundColorDark:
                    type: string
                warnColorDark:
                    type: string
                fontColorDark:
                    type: string
                disableWatermark:
                    type: boolean
                themeMode:
                    type: integer
                    format: enum
        UpdateCustomLabelPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateCustomLockoutPolicyRequest:
            type: object
            properties:
                maxPasswordAttempts:
                    type: integer
                    format: uint32
                maxOtpAttempts:
                    type: integer
                    format: uint32
        UpdateCustomLockoutPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateCustomLoginPolicyRequest:
            type: object
            properties:
                allowUsernamePassword:
                    type: boolean
                allowRegister:
                    type: boolean
                allowExternalIdp:
                    type: boolean
                forceMfa:
                    type: boolean
                passwordlessType:
                    type: integer
                    format: enum
                hidePasswordReset:
                    type: boolean
                ignoreUnknownUsernames:
                    type: boolean
                defaultRedirectUri:
                    type: string
                passwordCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                externalLoginCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                mfaInitSkipLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                secondFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                multiFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                allowDomainDiscovery:
                    type: boolean
                    description: If set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
                disableLoginWithEmail:
                    type: boolean
                disableLoginWithPhone:
                    type: boolean
                forceMfaLocalOnly:
                    type: boolean
        UpdateCustomLoginPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateCustomNotificationPolicyRequest:
            type: object
            properties:
                passwordChange:
                    type: boolean
        UpdateCustomNotificationPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateCustomOrgIAMPolicyRequest:
            type: object
            properties:
                orgId:
                    type: string
                userLoginMustBeDomain:
                    type: boolean
        UpdateCustomOrgIAMPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateCustomPasswordAgePolicyRequest:
            type: object
            properties:
                maxAgeDays:
                    type: integer
                    description: Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
                    format: uint32
                expireWarnDays:
                    type: integer
                    description: Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
                    format: uint32
        UpdateCustomPasswordAgePolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateCustomPasswordComplexityPolicyRequest:
            type: object
            properties:
                minLength:
                    type: string
                hasUppercase:
                    type: boolean
                hasLowercase:
                    type: boolean
                hasNumber:
                    type: boolean
                hasSymbol:
                    type: boolean
        UpdateCustomPasswordComplexityPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateCustomPrivacyPolicyRequest:
            type: object
            properties:
                tosLink:
                    type: string
                privacyLink:
                    type: string
                helpLink:
                    type: string
                supportEmail:
                    type: string
                docsLink:
                    type: string
                customLink:
                    type: string
                customLinkText:
                    type: string
        UpdateCustomPrivacyPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateDomainPolicyRequest:
            type: object
            properties:
                userLoginMustBeDomain:
                    type: boolean
                validateOrgDomains:
                    type: boolean
                smtpSenderAddressMatchesInstanceDomain:
                    type: boolean
        UpdateDomainPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateEmailProviderHTTPRequest:
            required:
                - endpoint
            type: object
            properties:
                id:
                    type: string
                endpoint:
                    type: string
                description:
                    type: string
        UpdateEmailProviderHTTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateEmailProviderSMTPPasswordRequest:
            type: object
            properties:
                password:
                    type: string
                id:
                    type: string
        UpdateEmailProviderSMTPPasswordResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateEmailProviderSMTPRequest:
            required:
                - senderAddress
                - senderName
                - host
            type: object
            properties:
                senderAddress:
                    type: string
                senderName:
                    type: string
                tls:
                    type: boolean
                host:
                    type: string
                user:
                    type: string
                replyToAddress:
                    type: string
                password:
                    type: string
                description:
                    type: string
                id:
                    type: string
        UpdateEmailProviderSMTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateGenericOAuthProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                    description: client_secret will only be updated if provided
                authorizationEndpoint:
                    type: string
                tokenEndpoint:
                    type: string
                userEndpoint:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                idAttribute:
                    type: string
                    description: identifying attribute of the user in the response of the user_endpoint
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateGenericOAuthProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateGenericOIDCProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                issuer:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                    description: client_secret will only be updated if provided
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
                isIdTokenMapping:
                    type: boolean
        UpdateGenericOIDCProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateGitHubEnterpriseServerProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                    description: client_secret will only be updated if provided
                authorizationEndpoint:
                    type: string
                tokenEndpoint:
                    type: string
                userEndpoint:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateGitHubEnterpriseServerProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateGitHubProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                    description: client_secret will only be updated if provided
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateGitHubProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateGitLabProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                    description: client_secret will only be updated if provided
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateGitLabProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateGitLabSelfHostedProviderRequest:
            type: object
            properties:
                id:
                    type: string
                issuer:
                    type: string
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                    description: client_secret will only be updated if provided
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateGitLabSelfHostedProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateGoogleProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                    description: client_secret will only be updated if provided
                scopes:
                    type: array
                    items:
                        type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateGoogleProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateHumanEmailRequest:
            type: object
            properties:
                userId:
                    type: string
                email:
                    type: string
                isEmailVerified:
                    type: boolean
        UpdateHumanEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateHumanPhoneRequest:
            required:
                - phone
            type: object
            properties:
                userId:
                    type: string
                phone:
                    type: string
                isPhoneVerified:
                    type: boolean
        UpdateHumanPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateHumanProfileRequest:
            required:
                - firstName
                - lastName
                - displayName
            type: object
            properties:
                userId:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                nickName:
                    type: string
                displayName:
                    type: string
                preferredLanguage:
                    type: string
                gender:
                    type: integer
                    format: enum
        UpdateHumanProfileResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateHumanUserRequest:
            type: object
            properties:
                userId:
                    type: string
                username:
                    type: string
                profile:
                    $ref: '#/components/schemas/SetHumanProfile'
                email:
                    $ref: '#/components/schemas/SetHumanEmail'
                phone:
                    $ref: '#/components/schemas/SetHumanPhone'
                password:
                    $ref: '#/components/schemas/SetPassword'
        UpdateHumanUserResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
                emailCode:
                    type: string
                phoneCode:
                    type: string
        UpdateIAMMemberRequest:
            type: object
            properties:
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        type: string
        UpdateIAMMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateIDPJWTConfigRequest:
            type: object
            properties:
                idpId:
                    type: string
                jwtEndpoint:
                    type: string
                issuer:
                    type: string
                keysEndpoint:
                    type: string
                headerName:
                    type: string
        UpdateIDPJWTConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateIDPOIDCConfigRequest:
            type: object
            properties:
                idpId:
                    type: string
                issuer:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                displayNameMapping:
                    type: integer
                    format: enum
                usernameMapping:
                    type: integer
                    format: enum
        UpdateIDPOIDCConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateIDPRequest:
            type: object
            properties:
                idpId:
                    type: string
                name:
                    type: string
                stylingType:
                    type: integer
                    format: enum
                autoRegister:
                    type: boolean
        UpdateIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateInstanceRequest:
            type: object
            properties:
                instanceId:
                    type: string
                instanceName:
                    type: string
        UpdateInstanceResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateJWTProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                issuer:
                    type: string
                jwtEndpoint:
                    type: string
                keysEndpoint:
                    type: string
                headerName:
                    type: string
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateJWTProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateLDAPProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                servers:
                    type: array
                    items:
                        type: string
                startTls:
                    type: boolean
                baseDn:
                    type: string
                bindDn:
                    type: string
                bindPassword:
                    type: string
                userBase:
                    type: string
                userObjectClasses:
                    type: array
                    items:
                        type: string
                userFilters:
                    type: array
                    items:
                        type: string
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                attributes:
                    $ref: '#/components/schemas/LDAPAttributes'
                providerOptions:
                    $ref: '#/components/schemas/Options'
        UpdateLDAPProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateLabelPolicyRequest:
            type: object
            properties:
                primaryColor:
                    type: string
                hideLoginNameSuffix:
                    type: boolean
                warnColor:
                    type: string
                backgroundColor:
                    type: string
                fontColor:
                    type: string
                primaryColorDark:
                    type: string
                backgroundColorDark:
                    type: string
                warnColorDark:
                    type: string
                fontColorDark:
                    type: string
                disableWatermark:
                    type: boolean
                themeMode:
                    type: integer
                    format: enum
        UpdateLabelPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateLockoutPolicyRequest:
            type: object
            properties:
                maxPasswordAttempts:
                    type: integer
                    description: failed attempts until a user gets locked
                    format: uint32
                maxOtpAttempts:
                    type: integer
                    format: uint32
        UpdateLockoutPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateLoginPolicyRequest:
            type: object
            properties:
                allowUsernamePassword:
                    type: boolean
                allowRegister:
                    type: boolean
                allowExternalIdp:
                    type: boolean
                forceMfa:
                    type: boolean
                passwordlessType:
                    type: integer
                    format: enum
                hidePasswordReset:
                    type: boolean
                ignoreUnknownUsernames:
                    type: boolean
                defaultRedirectUri:
                    type: string
                passwordCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                externalLoginCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                mfaInitSkipLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                secondFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                multiFactorCheckLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                allowDomainDiscovery:
                    type: boolean
                    description: If set to true, the suffix (@domain.com) of an unknown username input on the login screen will be matched against the org domains and will redirect to the registration of that organization on success.
                disableLoginWithEmail:
                    type: boolean
                disableLoginWithPhone:
                    type: boolean
                forceMfaLocalOnly:
                    type: boolean
        UpdateLoginPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateMachineRequest:
            type: object
            properties:
                userId:
                    type: string
                description:
                    type: string
                name:
                    type: string
                accessTokenType:
                    type: integer
                    format: enum
        UpdateMachineResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateMyPasswordRequest:
            required:
                - oldPassword
                - newPassword
            type: object
            properties:
                oldPassword:
                    type: string
                newPassword:
                    type: string
        UpdateMyPasswordResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateMyProfileRequest:
            required:
                - firstName
                - lastName
                - displayName
            type: object
            properties:
                firstName:
                    type: string
                lastName:
                    type: string
                nickName:
                    type: string
                displayName:
                    type: string
                preferredLanguage:
                    type: string
                gender:
                    type: integer
                    format: enum
        UpdateMyProfileResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateMyUserNameRequest:
            type: object
            properties:
                userName:
                    type: string
        UpdateMyUserNameResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateNotificationPolicyRequest:
            type: object
            properties:
                passwordChange:
                    type: boolean
        UpdateNotificationPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateOIDCAppConfigRequest:
            type: object
            properties:
                projectId:
                    type: string
                appId:
                    type: string
                redirectUris:
                    type: array
                    items:
                        type: string
                responseTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                grantTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
                appType:
                    type: integer
                    format: enum
                authMethodType:
                    type: integer
                    format: enum
                postLogoutRedirectUris:
                    type: array
                    items:
                        type: string
                devMode:
                    type: boolean
                accessTokenType:
                    type: integer
                    format: enum
                accessTokenRoleAssertion:
                    type: boolean
                idTokenRoleAssertion:
                    type: boolean
                idTokenUserinfoAssertion:
                    type: boolean
                clockSkew:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                additionalOrigins:
                    type: array
                    items:
                        type: string
                skipNativeAppSuccessPage:
                    type: boolean
                backChannelLogoutUri:
                    type: string
                loginVersion:
                    $ref: '#/components/schemas/LoginVersion'
        UpdateOIDCAppConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateOIDCSettingsRequest:
            type: object
            properties:
                accessTokenLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                idTokenLifetime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                refreshTokenIdleExpiration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                refreshTokenExpiration:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
        UpdateOIDCSettingsResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateOrgIAMPolicyRequest:
            type: object
            properties:
                userLoginMustBeDomain:
                    type: boolean
        UpdateOrgIAMPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateOrgIDPJWTConfigRequest:
            required:
                - jwtEndpoint
                - issuer
                - keysEndpoint
                - headerName
            type: object
            properties:
                idpId:
                    type: string
                jwtEndpoint:
                    type: string
                issuer:
                    type: string
                keysEndpoint:
                    type: string
                headerName:
                    type: string
        UpdateOrgIDPJWTConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateOrgIDPOIDCConfigRequest:
            required:
                - clientId
                - issuer
            type: object
            properties:
                idpId:
                    type: string
                clientId:
                    type: string
                clientSecret:
                    type: string
                issuer:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                displayNameMapping:
                    type: integer
                    format: enum
                usernameMapping:
                    type: integer
                    format: enum
        UpdateOrgIDPOIDCConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateOrgIDPRequest:
            required:
                - name
            type: object
            properties:
                idpId:
                    type: string
                name:
                    type: string
                stylingType:
                    type: integer
                    format: enum
                autoRegister:
                    type: boolean
        UpdateOrgIDPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateOrgMemberRequest:
            type: object
            properties:
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        type: string
        UpdateOrgMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateOrgRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
        UpdateOrgResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdatePasswordAgePolicyRequest:
            type: object
            properties:
                maxAgeDays:
                    type: integer
                    description: Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
                    format: uint32
                expireWarnDays:
                    type: integer
                    description: Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
                    format: uint32
        UpdatePasswordAgePolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdatePasswordComplexityPolicyRequest:
            type: object
            properties:
                minLength:
                    type: integer
                    format: uint32
                hasUppercase:
                    type: boolean
                hasLowercase:
                    type: boolean
                hasNumber:
                    type: boolean
                hasSymbol:
                    type: boolean
        UpdatePasswordComplexityPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdatePrivacyPolicyRequest:
            type: object
            properties:
                tosLink:
                    type: string
                privacyLink:
                    type: string
                helpLink:
                    type: string
                supportEmail:
                    type: string
                docsLink:
                    type: string
                customLink:
                    type: string
                customLinkText:
                    type: string
        UpdatePrivacyPolicyResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateProjectGrantMemberRequest:
            required:
                - userId
            type: object
            properties:
                projectId:
                    type: string
                grantId:
                    type: string
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        type: string
        UpdateProjectGrantMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateProjectGrantRequest:
            type: object
            properties:
                projectId:
                    type: string
                grantId:
                    type: string
                roleKeys:
                    type: array
                    items:
                        type: string
        UpdateProjectGrantResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateProjectMemberRequest:
            type: object
            properties:
                projectId:
                    type: string
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        type: string
        UpdateProjectMemberResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateProjectRequest:
            required:
                - name
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                projectRoleAssertion:
                    type: boolean
                projectRoleCheck:
                    type: boolean
                hasProjectCheck:
                    type: boolean
                privateLabelingSetting:
                    type: integer
                    format: enum
        UpdateProjectResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateProjectRoleRequest:
            required:
                - roleKey
                - displayName
            type: object
            properties:
                projectId:
                    type: string
                roleKey:
                    type: string
                displayName:
                    type: string
                group:
                    type: string
        UpdateProjectRoleResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateSAMLAppConfigRequest:
            type: object
            properties:
                projectId:
                    type: string
                appId:
                    type: string
                metadataXml:
                    type: string
                    format: bytes
                metadataUrl:
                    type: string
        UpdateSAMLAppConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateSAMLProviderRequest:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                metadataXml:
                    type: string
                    format: bytes
                metadataUrl:
                    type: string
                    description: Url to the metadata of the SAML identity provider.
                binding:
                    type: integer
                    description: Binding which defines the type of communication with the identity provider.
                    format: enum
                withSignedRequest:
                    type: boolean
                    description: Boolean which defines if the authentication requests are signed.
                providerOptions:
                    $ref: '#/components/schemas/Options'
                nameIdFormat:
                    type: integer
                    description: Optionally specify the `nameid-format` requested.
                    format: enum
                transientMappingAttributeName:
                    type: string
                    description: |-
                        Optionally specify the name of the attribute, which will be used to map the user
                         in case the nameid-format returned is `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`.
        UpdateSAMLProviderResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateSMSProviderHTTPRequest:
            required:
                - endpoint
            type: object
            properties:
                id:
                    type: string
                endpoint:
                    type: string
                description:
                    type: string
        UpdateSMSProviderHTTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateSMSProviderTwilioRequest:
            required:
                - sid
            type: object
            properties:
                id:
                    type: string
                sid:
                    type: string
                senderNumber:
                    type: string
                description:
                    type: string
                verifyServiceSid:
                    type: string
        UpdateSMSProviderTwilioResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateSMSProviderTwilioTokenRequest:
            type: object
            properties:
                id:
                    type: string
                token:
                    type: string
        UpdateSMSProviderTwilioTokenResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateSMTPConfigPasswordRequest:
            type: object
            properties:
                password:
                    type: string
                id:
                    type: string
        UpdateSMTPConfigPasswordResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateSMTPConfigRequest:
            required:
                - senderAddress
                - senderName
                - host
            type: object
            properties:
                senderAddress:
                    type: string
                senderName:
                    type: string
                tls:
                    type: boolean
                host:
                    type: string
                user:
                    type: string
                replyToAddress:
                    type: string
                password:
                    type: string
                description:
                    type: string
                id:
                    type: string
        UpdateSMTPConfigResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateSecretGeneratorRequest:
            type: object
            properties:
                generatorType:
                    type: integer
                    format: enum
                length:
                    type: integer
                    format: uint32
                expiry:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                includeLowerLetters:
                    type: boolean
                includeUpperLetters:
                    type: boolean
                includeDigits:
                    type: boolean
                includeSymbols:
                    type: boolean
        UpdateSecretGeneratorResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateUserGrantRequest:
            type: object
            properties:
                userId:
                    type: string
                grantId:
                    type: string
                roleKeys:
                    type: array
                    items:
                        type: string
        UpdateUserGrantResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        UpdateUserNameRequest:
            required:
                - userId
                - userName
            type: object
            properties:
                userId:
                    type: string
                userName:
                    type: string
        UpdateUserNameResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        User:
            type: object
            properties:
                userId:
                    type: string
                details:
                    $ref: '#/components/schemas/Details'
                state:
                    type: integer
                    format: enum
                username:
                    type: string
                loginNames:
                    type: array
                    items:
                        type: string
                preferredLoginName:
                    type: string
                human:
                    $ref: '#/components/schemas/HumanUser'
                machine:
                    $ref: '#/components/schemas/MachineUser'
        UserAgent:
            type: object
            properties:
                fingerprintId:
                    type: string
                ip:
                    type: string
                description:
                    type: string
                header:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/UserAgent_HeaderValues'
        UserAgent_HeaderValues:
            type: object
            properties:
                values:
                    type: array
                    items:
                        type: string
            description: |-
                A header may have multiple values.
                 In Go, headers are defined
                 as map[string][]string, but protobuf
                 doesn't allow this scheme.
        UserGrant:
            type: object
            properties:
                orgId:
                    type: string
                projectId:
                    type: string
                userId:
                    type: string
                roles:
                    type: array
                    items:
                        type: string
                    description: 'Deprecated: user role_keys'
                orgName:
                    type: string
                grantId:
                    type: string
                details:
                    $ref: '#/components/schemas/ObjectDetails'
                orgDomain:
                    type: string
                projectName:
                    type: string
                projectGrantId:
                    type: string
                roleKeys:
                    type: array
                    items:
                        type: string
                userType:
                    type: integer
                    format: enum
                state:
                    type: integer
                    format: enum
        UserGrantDisplayNameQuery:
            type: object
            properties:
                displayName:
                    type: string
                method:
                    type: integer
                    format: enum
        UserGrantEmailQuery:
            type: object
            properties:
                email:
                    type: string
                method:
                    type: integer
                    format: enum
        UserGrantFirstNameQuery:
            type: object
            properties:
                firstName:
                    type: string
                method:
                    type: integer
                    format: enum
        UserGrantLastNameQuery:
            type: object
            properties:
                lastName:
                    type: string
                method:
                    type: integer
                    format: enum
        UserGrantOrgDomainQuery:
            type: object
            properties:
                orgDomain:
                    type: string
                method:
                    type: integer
                    format: enum
        UserGrantOrgNameQuery:
            type: object
            properties:
                orgName:
                    type: string
                method:
                    type: integer
                    format: enum
        UserGrantProjectGrantIDQuery:
            type: object
            properties:
                projectGrantId:
                    type: string
        UserGrantProjectIDQuery:
            type: object
            properties:
                projectId:
                    type: string
        UserGrantProjectNameQuery:
            type: object
            properties:
                projectName:
                    type: string
                method:
                    type: integer
                    format: enum
        UserGrantQuery:
            type: object
            properties:
                projectIdQuery:
                    $ref: '#/components/schemas/UserGrantProjectIDQuery'
                userIdQuery:
                    $ref: '#/components/schemas/UserGrantUserIDQuery'
                withGrantedQuery:
                    $ref: '#/components/schemas/UserGrantWithGrantedQuery'
                roleKeyQuery:
                    $ref: '#/components/schemas/UserGrantRoleKeyQuery'
                projectGrantIdQuery:
                    $ref: '#/components/schemas/UserGrantProjectGrantIDQuery'
                userNameQuery:
                    $ref: '#/components/schemas/UserGrantUserNameQuery'
                firstNameQuery:
                    $ref: '#/components/schemas/UserGrantFirstNameQuery'
                lastNameQuery:
                    $ref: '#/components/schemas/UserGrantLastNameQuery'
                emailQuery:
                    $ref: '#/components/schemas/UserGrantEmailQuery'
                orgNameQuery:
                    $ref: '#/components/schemas/UserGrantOrgNameQuery'
                orgDomainQuery:
                    $ref: '#/components/schemas/UserGrantOrgDomainQuery'
                projectNameQuery:
                    $ref: '#/components/schemas/UserGrantProjectNameQuery'
                displayNameQuery:
                    $ref: '#/components/schemas/UserGrantDisplayNameQuery'
                userTypeQuery:
                    $ref: '#/components/schemas/UserGrantUserTypeQuery'
        UserGrantRoleKeyQuery:
            type: object
            properties:
                roleKey:
                    type: string
                method:
                    type: integer
                    format: enum
        UserGrantUserIDQuery:
            type: object
            properties:
                userId:
                    type: string
        UserGrantUserNameQuery:
            type: object
            properties:
                userName:
                    type: string
                method:
                    type: integer
                    format: enum
        UserGrantUserTypeQuery:
            type: object
            properties:
                type:
                    type: integer
                    format: enum
        UserGrantWithGrantedQuery:
            type: object
            properties:
                withGranted:
                    type: boolean
        UserIDFilter:
            required:
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Defines the ID of the user to query for.
                method:
                    type: integer
                    description: Defines which text comparison method used for the id query.
                    format: enum
        UserNameQuery:
            required:
                - userName
            type: object
            properties:
                userName:
                    type: string
                method:
                    type: integer
                    format: enum
            description: Query for users with a specific user name.
        UserSchema:
            required:
                - type
                - schema
            type: object
            properties:
                type:
                    type: string
                    description: Type is a human readable word describing the schema.
                schema:
                    type: object
                    description: JSON schema representation defining the user.
                possibleAuthenticators:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: Defines the possible types of authenticators.
        Username:
            type: object
            properties:
                usernameId:
                    type: string
                    description: unique identifier of the username.
                username:
                    type: string
                    description: The user's unique username. It is used for identification during authentication.
                isOrganizationSpecific:
                    type: boolean
                    description: |-
                        By default usernames must be unique across all organizations in an instance.
                         This option allow to restrict the uniqueness to the user's own organization.
                         As a result, this username can only be used if the authentication is limited
                         to the corresponding organization.

                         This can be useful if you provide multiple usernames for a single user, where one
                         if specific to your organization, e.g.:
                         - gigi-giraffe@zitadel.com (unique across organizations)
                         - gigi-giraffe (unique only inside the ZITADEL organization)
        UsernameChangeDoneScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                nextButtonText:
                    type: string
        UsernameChangeScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                usernameLabel:
                    type: string
                cancelButtonText:
                    type: string
                nextButtonText:
                    type: string
        UsernameFilter:
            required:
                - username
            type: object
            properties:
                username:
                    type: string
                    description: Defines the username to query for.
                method:
                    type: integer
                    description: Defines which text comparison method used for the username query.
                    format: enum
                isOrganizationSpecific:
                    type: boolean
                    description: Defines that the username must only be unique in the organisation.
        ValidateOrgDomainRequest:
            type: object
            properties:
                domain:
                    type: string
        ValidateOrgDomainResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        VerifyContactEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyContactPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyEmailRequest:
            required:
                - userId
                - verificationCode
            type: object
            properties:
                userId:
                    type: string
                verificationCode:
                    type: string
        VerifyEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyInviteCodeRequest:
            required:
                - userId
                - verificationCode
            type: object
            properties:
                userId:
                    type: string
                verificationCode:
                    type: string
        VerifyInviteCodeResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyMFAOTPScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                codeLabel:
                    type: string
                nextButtonText:
                    type: string
        VerifyMFAU2FScreenText:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                validateTokenText:
                    type: string
                notSupported:
                    type: string
                errorRetry:
                    type: string
        VerifyMyAuthFactorOTPRequest:
            required:
                - code
            type: object
            properties:
                code:
                    type: string
        VerifyMyAuthFactorOTPResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        VerifyMyAuthFactorU2FRequest:
            type: object
            properties:
                verification:
                    $ref: '#/components/schemas/WebAuthNVerification'
        VerifyMyAuthFactorU2FResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        VerifyMyEmailRequest:
            required:
                - code
            type: object
            properties:
                code:
                    type: string
        VerifyMyEmailResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        VerifyMyPasswordlessRequest:
            type: object
            properties:
                verification:
                    $ref: '#/components/schemas/WebAuthNVerification'
        VerifyMyPasswordlessResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        VerifyMyPhoneRequest:
            required:
                - code
            type: object
            properties:
                code:
                    type: string
        VerifyMyPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/ObjectDetails'
        VerifyOTPEmailRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyOTPSMSRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyPasskeyRegistrationRequest:
            required:
                - userId
                - passkeyId
                - publicKeyCredential
                - passkeyName
            type: object
            properties:
                userId:
                    type: string
                passkeyId:
                    type: string
                publicKeyCredential:
                    type: object
                passkeyName:
                    type: string
        VerifyPasskeyRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyPhoneRequest:
            required:
                - userId
                - verificationCode
            type: object
            properties:
                userId:
                    type: string
                verificationCode:
                    type: string
        VerifyPhoneResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyTOTPRegistrationRequest:
            required:
                - userId
                - code
            type: object
            properties:
                userId:
                    type: string
                code:
                    type: string
        VerifyTOTPRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyU2FRegistrationRequest:
            required:
                - userId
                - u2fId
                - publicKeyCredential
                - tokenName
            type: object
            properties:
                userId:
                    type: string
                u2fId:
                    type: string
                publicKeyCredential:
                    type: object
                tokenName:
                    type: string
        VerifyU2FRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        VerifyWebAuthNRegistration:
            required:
                - publicKeyCredential
                - webAuthNName
            type: object
            properties:
                publicKeyCredential:
                    type: object
                    description: |-
                        PublicKeyCredential Interface.
                         Generated helper methods populate the field from JSON created by a WebAuthN client.
                         See also:  https://www.w3.org/TR/webauthn/#publickeycredential
                webAuthNName:
                    type: string
                    description: Provide a name for the WebAuthN device. This will help identify it in the future.
        VerifyWebAuthNRegistrationResponse:
            type: object
            properties:
                details:
                    $ref: '#/components/schemas/Details'
        View:
            type: object
            properties:
                database:
                    type: string
                viewName:
                    type: string
                processedSequence:
                    type: string
                eventTimestamp:
                    type: string
                    format: date-time
                lastSuccessfulSpoolerRun:
                    type: string
                    format: date-time
        WebAuthN:
            type: object
            properties:
                webAuthNId:
                    type: string
                    description: unique identifier of the WebAuthN authenticator.
                name:
                    type: string
                    description: Name of the WebAuthN authenticator. This is used for easier identification.
                isVerified:
                    type: boolean
                    description: State whether the WebAuthN registration has been completed.
                userVerified:
                    type: boolean
                    description: |-
                        States if the user has been verified during the registration. Authentication with this device
                         will be considered as multi-factor authentication (MFA) without the need to check a password
                         (typically known as Passkeys).
                         Without user verification it will be a second factor authentication (2FA), typically done
                         after a password check.

                         More on WebAuthN User Verification: https://www.w3.org/TR/webauthn/#user-verification
        WebAuthNKey:
            type: object
            properties:
                publicKey:
                    type: string
                    format: bytes
        WebAuthNToken:
            type: object
            properties:
                id:
                    type: string
                state:
                    type: integer
                    format: enum
                name:
                    type: string
        WebAuthNVerification:
            type: object
            properties:
                publicKeyCredential:
                    type: string
                    format: bytes
                tokenName:
                    type: string
        WebKey:
            type: object
            properties:
                rsa:
                    $ref: '#/components/schemas/WebKeyRSAConfig'
                ecdsa:
                    $ref: '#/components/schemas/WebKeyECDSAConfig'
                ed25519:
                    $ref: '#/components/schemas/WebKeyED25519Config'
        WebKeyECDSAConfig:
            type: object
            properties:
                curve:
                    type: integer
                    format: enum
        WebKeyED25519Config:
            type: object
            properties: {}
        WebKeyRSAConfig:
            type: object
            properties:
                bits:
                    type: integer
                    description: bit size of the RSA key
                    format: enum
                hasher:
                    type: integer
                    description: signing algrithm used
                    format: enum
tags:
    - name: AdminService
    - name: AuthService
    - name: FeatureService
      description: |-
        FeatureService is intended to manage features for ZITADEL.

         Feature settings that are available on multiple "levels", such as instance and organization.
         The higher level (instance) acts as a default for the lower level (organization).
         When a feature is set on multiple levels, the lower level takes precedence.

         Features can be experimental where ZITADEL will assume a sane default, such as disabled.
         When over time confidence in such a feature grows, ZITADEL can default to enabling the feature.
         As a final step we might choose to always enable a feature and remove the setting from this API,
         reserving the proto field number. Such removal is not considered a breaking change.
         Setting a removed field will effectively result in a no-op.
    - name: FeatureService
      description: |-
        FeatureService is intended to manage features for ZITADEL.

         Feature settings that are available on multiple "levels", such as instance and organization.
         The higher level (instance) acts as a default for the lower level (organization).
         When a feature is set on multiple levels, the lower level takes precedence.

         Features can be experimental where ZITADEL will assume a sane default, such as disabled.
         When over time confidence in such a feature grows, ZITADEL can default to enabling the feature.
         As a final step we might choose to always enable a feature and remove the setting from this API,
         reserving the proto field number. Such removal is not considered a breaking change.
         Setting a removed field will effectively result in a no-op.
    - name: IdentityProviderService
    - name: ManagementService
    - name: OIDCService
    - name: OIDCService
    - name: OrganizationService
    - name: OrganizationService
    - name: SAMLService
    - name: SessionService
    - name: SessionService
    - name: SettingsService
    - name: SettingsService
    - name: SystemService
    - name: UserService
    - name: UserService
    - name: ZITADELActions
    - name: ZITADELDebugEvents
    - name: ZITADELUserSchemas
    - name: ZITADELUsers
    - name: ZITADELWebKeys
