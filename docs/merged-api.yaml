openapi: 3.0.0
info:
  title: Unified API
  description: Combined API for all services.
  version: 1.0.0
externalDocs:
  description: Detailed information about ZITADEL
  url: https://zitadel.com/docs
paths:
  /users:
    /v2/users/human:
      post:
        summary: Create a new human user
        description: Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.
        operationId: UserService_AddHumanUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2AddHumanUserResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2AddHumanUserRequest'
        tags:
          - UserService
    /v2/users/{userId}:
      get:
        summary: User by ID
        description: Returns the full user object (human or machine) including the profile, email, etc..
        operationId: UserService_GetUserByID
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2GetUserByIDResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            description: User ID of the user you like to get.
            in: path
            required: true
            type: string
        tags:
          - UserService
      delete:
        summary: Delete user
        description: The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found..
        operationId: UserService_DeleteUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2DeleteUserResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
    /v2/users:
      post:
        summary: Search Users
        description: Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.
        operationId: UserService_ListUsers
        responses:
          '200':
            description: A list of all users matching the query
            schema:
              $ref: '#/definitions/userv2ListUsersResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2ListUsersRequest'
        tags:
          - UserService
    /v2/users/{userId}/email:
      post:
        summary: Change the user email
        description: Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email..
        operationId: UserService_SetEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2SetEmailResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceSetEmailBody'
        tags:
          - UserService
    /v2/users/{userId}/email/resend:
      post:
        summary: Resend code to verify user email
        description: Resend code to verify user email.
        operationId: UserService_ResendEmailCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2ResendEmailCodeResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceResendEmailCodeBody'
        tags:
          - UserService
    /v2/users/{userId}/email/send:
      post:
        summary: Send code to verify user email
        description: Send code to verify user email.
        operationId: UserService_SendEmailCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2SendEmailCodeResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceSendEmailCodeBody'
        tags:
          - UserService
    /v2/users/{userId}/email/verify:
      post:
        summary: Verify the email
        description: Verify the email with the generated code.
        operationId: UserService_VerifyEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyEmailResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyEmailBody'
        tags:
          - UserService
    /v2/users/{userId}/phone:
      delete:
        summary: Delete the user phone
        description: Delete the phone number of a user.
        operationId: UserService_RemovePhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RemovePhoneResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRemovePhoneBody'
        tags:
          - UserService
      post:
        summary: Set the user phone
        description: Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms..
        operationId: UserService_SetPhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2SetPhoneResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceSetPhoneBody'
        tags:
          - UserService
    /v2/users/{userId}/phone/resend:
      post:
        summary: Resend code to verify user phone
        description: Resend code to verify user phone.
        operationId: UserService_ResendPhoneCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2ResendPhoneCodeResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceResendPhoneCodeBody'
        tags:
          - UserService
    /v2/users/{userId}/phone/verify:
      post:
        summary: Verify the phone
        description: Verify the phone with the generated code..
        operationId: UserService_VerifyPhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyPhoneResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyPhoneBody'
        tags:
          - UserService
    /v2/users/human/{userId}:
      put:
        summary: Update User
        description: Update all information from a user..
        operationId: UserService_UpdateHumanUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2UpdateHumanUserResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceUpdateHumanUserBody'
        tags:
          - UserService
    /v2/users/{userId}/deactivate:
      post:
        summary: Deactivate user
        description: The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data..
        operationId: UserService_DeactivateUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2DeactivateUserResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceDeactivateUserBody'
        tags:
          - UserService
    /v2/users/{userId}/reactivate:
      post:
        summary: Reactivate user
        description: Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'..
        operationId: UserService_ReactivateUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2ReactivateUserResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceReactivateUserBody'
        tags:
          - UserService
    /v2/users/{userId}/lock:
      post:
        summary: Lock user
        description: The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.)..
        operationId: UserService_LockUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2LockUserResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceLockUserBody'
        tags:
          - UserService
    /v2/users/{userId}/unlock:
      post:
        summary: Unlock user
        description: The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.)..
        operationId: UserService_UnlockUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2UnlockUserResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceUnlockUserBody'
        tags:
          - UserService
    /v2/users/{userId}/passkeys:
      post:
        summary: Start the registration of passkey for a user
        description: Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey..
        operationId: UserService_RegisterPasskey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RegisterPasskeyResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRegisterPasskeyBody'
        tags:
          - UserService
    /v2/users/{userId}/passkeys/{passkeyId}:
      delete:
        summary: Remove passkey from a user
        description: Remove passkey from a user.
        operationId: UserService_RemovePasskey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2RemovePasskeyResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: passkeyId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Verify a passkey for a user
        description: Verify the passkey registration with the public key credential..
        operationId: UserService_VerifyPasskeyRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyPasskeyRegistrationResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: passkeyId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyPasskeyRegistrationBody'
        tags:
          - UserService
    /v2/users/{userId}/passkeys/registration_link:
      post:
        summary: Create a passkey registration link for a user
        description: Create a passkey registration link which includes a code and either return it or send it to the user..
        operationId: UserService_CreatePasskeyRegistrationLink
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2CreatePasskeyRegistrationLinkResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceCreatePasskeyRegistrationLinkBody'
        tags:
          - UserService
    /v2/users/{userId}/passkeys/_search:
      post:
        summary: List passkeys of an user
        description: List passkeys of an user
        operationId: UserService_ListPasskeys
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2ListPasskeysResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceListPasskeysBody'
        tags:
          - UserService
    /v2/users/{userId}/u2f:
      post:
        summary: Start the registration of a u2f token for a user
        description: Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token..
        operationId: UserService_RegisterU2F
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RegisterU2FResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRegisterU2FBody'
        tags:
          - UserService
    /v2/users/{userId}/u2f/{u2fId}:
      delete:
        summary: Remove u2f token from a user
        description: Remove u2f token from a user
        operationId: UserService_RemoveU2F
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2RemoveU2FResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: u2fId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Verify a u2f token for a user
        description: Verify the u2f token registration with the public key credential..
        operationId: UserService_VerifyU2FRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyU2FRegistrationResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: u2fId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyU2FRegistrationBody'
        tags:
          - UserService
    /v2/users/{userId}/totp:
      delete:
        summary: Remove TOTP generator from a user
        description: Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.
        operationId: UserService_RemoveTOTP
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RemoveTOTPResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Start the registration of a TOTP generator for a user
        description: Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device..
        operationId: UserService_RegisterTOTP
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RegisterTOTPResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRegisterTOTPBody'
        tags:
          - UserService
    /v2/users/{userId}/totp/verify:
      post:
        summary: Verify a TOTP generator for a user
        description: Verify the TOTP registration with a generated code..
        operationId: UserService_VerifyTOTPRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyTOTPRegistrationResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyTOTPRegistrationBody'
        tags:
          - UserService
    /v2/users/{userId}/otp_sms:
      delete:
        summary: Remove One-Time Password (OTP) SMS from a user
        description: Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
        operationId: UserService_RemoveOTPSMS
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RemoveOTPSMSResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Add OTP SMS for a user
        description: Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor..
        operationId: UserService_AddOTPSMS
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2AddOTPSMSResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceAddOTPSMSBody'
        tags:
          - UserService
    /v2/users/{userId}/otp_email:
      delete:
        summary: Remove One-Time Password (OTP) Email from a user
        description: Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
        operationId: UserService_RemoveOTPEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RemoveOTPEmailResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Add OTP Email for a user
        description: Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor..
        operationId: UserService_AddOTPEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2AddOTPEmailResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceAddOTPEmailBody'
        tags:
          - UserService
    /v2/idp_intents:
      post:
        summary: Start flow with an identity provider
        description: Start a flow with an identity provider, for external login, registration or linking..
        operationId: UserService_StartIdentityProviderIntent
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2StartIdentityProviderIntentResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2StartIdentityProviderIntentRequest'
        tags:
          - UserService
    /v2/idp_intents/{idpIntentId}:
      post:
        summary: Retrieve the information returned by the identity provider
        description: Retrieve the information returned by the identity provider for registration or updating an existing user with new information..
        operationId: UserService_RetrieveIdentityProviderIntent
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RetrieveIdentityProviderIntentResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpIntentId
            description: ID of the idp intent, previously returned on the success response of the IDP callback
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRetrieveIdentityProviderIntentBody'
        tags:
          - UserService
    /v2/users/{userId}/links:
      post:
        summary: Add link to an identity provider to an user
        description: Add link to an identity provider to an user..
        operationId: UserService_AddIDPLink
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2AddIDPLinkResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceAddIDPLinkBody'
        tags:
          - UserService
    /v2/users/{userId}/links/_search:
      post:
        summary: List links to an identity provider of an user
        description: List links to an identity provider of an user.
        operationId: UserService_ListIDPLinks
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2ListIDPLinksResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceListIDPLinksBody'
        tags:
          - UserService
    /v2/users/{userId}/links/{idpId}/{linkedUserId}:
      delete:
        summary: Remove link of an identity provider to an user
        description: Remove link of an identity provider to an user.
        operationId: UserService_RemoveIDPLink
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2RemoveIDPLinkResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: idpId
            in: path
            required: true
            type: string
          - name: linkedUserId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceRemoveIDPLinkBody'
        tags:
          - UserService
    /v2/users/{userId}/password_reset:
      post:
        summary: Request a code to reset a password
        description: Request a code to reset a password..
        operationId: UserService_PasswordReset
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2PasswordResetResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServicePasswordResetBody'
        tags:
          - UserService
    /v2/users/{userId}/password:
      post:
        summary: Change password
        description: Change the password of a user with either a verification code or the current password..
        operationId: UserService_SetPassword
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2SetPasswordResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceSetPasswordBody'
        tags:
          - UserService
    /v2/users/{userId}/authentication_methods:
      get:
        summary: List all possible authentication methods of a user
        description: List all possible authentication methods of a user like password, passwordless, (T)OTP and more..
        operationId: UserService_ListAuthenticationMethodTypes
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2ListAuthenticationMethodTypesResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: domainQuery.includeWithoutDomain
            description: List also auth method types without domain information like passkey and U2F added through V1 APIs / Login UI.
            in: query
            required: false
            type: boolean
          - name: domainQuery.domain
            description: List only auth methods with specific domain.
            in: query
            required: false
            type: string
        tags:
          - UserService
    /v2/users/{userId}/authentication_factors/_search:
      post:
        operationId: UserService_ListAuthenticationFactors
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2ListAuthenticationFactorsResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: authFactors
            description: Specify the Auth Factors you are interested in
            in: query
            required: false
            type: array
            items:
              type: string
              enum:
                - OTP
                - OTP_SMS
                - OTP_EMAIL
                - U2F
            collectionFormat: multi
          - name: states
            description: Specify the state of the Auth Factors
            in: query
            required: false
            type: array
            items:
              type: string
              enum:
                - AUTH_FACTOR_STATE_UNSPECIFIED
                - AUTH_FACTOR_STATE_NOT_READY
                - AUTH_FACTOR_STATE_READY
                - AUTH_FACTOR_STATE_REMOVED
            collectionFormat: multi
        tags:
          - UserService
    /v2/users/{userId}/invite_code:
      post:
        summary: Create an invite code for a user
        description: Create an invite code for a user to initialize their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
        operationId: UserService_CreateInviteCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2CreateInviteCodeResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceCreateInviteCodeBody'
        tags:
          - UserService
    /v2/users/{userId}/invite_code/resend:
      post:
        summary: Resend an invite code for a user
        description: |-
          Resend an invite code for a user to initialize their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
          A resend is only possible if a code has been created previously and sent to the user. If there is no code or it was directly returned, an error will be returned.
        operationId: UserService_ResendInviteCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2ResendInviteCodeResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
    /v2/users/{userId}/invite_code/verify:
      post:
        summary: Verify an invite code for a user
        description: |-
          Verify the invite code of a user previously issued. This will set their email to a verified state and
          allow the user to set up their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
        operationId: UserService_VerifyInviteCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2VerifyInviteCodeResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceVerifyInviteCodeBody'
        tags:
          - UserService
  /sessions:
    /v2/sessions/search:
      post:
        summary: Search sessions
        description: Search for sessions
        operationId: SessionService_ListSessions
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2ListSessionsResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2ListSessionsRequest'
        tags:
          - SessionService
    /v2/sessions/{sessionId}:
      get:
        summary: Get a session
        description: Get a session and all its information like the time of the user or password verification
        operationId: SessionService_GetSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2GetSessionResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: sessionId
            in: path
            required: true
            type: string
          - name: sessionToken
            in: query
            required: false
            type: string
        tags:
          - SessionService
      delete:
        summary: Terminate an existing session
        description: Terminate your own session or if granted any other session.
        operationId: SessionService_DeleteSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2DeleteSessionResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: sessionId
            description: '"id of the session to terminate"'
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2SessionServiceDeleteSessionBody'
        tags:
          - SessionService
      patch:
        summary: Update an existing session
        description: Update an existing session with new information.
        operationId: SessionService_SetSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2SetSessionResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: sessionId
            description: '"id of the session to update"'
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2SessionServiceSetSessionBody'
        tags:
          - SessionService
    /v2/sessions:
      post:
        summary: Create a new session
        description: Create a new session. A token will be returned, which is required for further updates of the session.
        operationId: SessionService_CreateSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2CreateSessionResponse'
          '403':
            description: Returned when the user does not have permission to access the resource.
            schema:
              $ref: '#/definitions/rpcStatus'
          '404':
            description: Returned when the resource does not exist.
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2CreateSessionRequest'
        tags:
          - SessionService
components: {}
