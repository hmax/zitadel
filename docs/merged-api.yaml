openapi: 3.0.0
info:
  title: Unified API
  description: Combined API for all services.
  version: 1.0.0
externalDocs:
  description: Detailed information about ZITADEL
  url: https://zitadel.com/docs
paths:
  /v2:
    /healthz:
      get:
        summary: |-
          Indicates if ZITADEL is running.
          It respondes as soon as ZITADEL started
        operationId: SystemService_Healthz
        responses:
          '200':
            description: ZITADEL started
            schema:
              $ref: '#/definitions/zitadelsystemv1HealthzResponse'
          default:
            description: ZITADEL NOT started yet
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - General
    /zitadel/docs:
      get:
        summary: ZITADEL documentation
        description: This endpoint returns some general needed (OIDC) information about ZITADEL like the issuer or discovery endpoint.
        operationId: ManagementService_GetOIDCInformation
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1GetOIDCInformationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - General
    /iam:
      get:
        summary: Instance information
        description: 'Some needed settings made in ZITADEL like the global organization id or ZITADEL project ID '
        operationId: ManagementService_GetIAM
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1GetIAMResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - General
    /languages:
      get:
        summary: Supported Languages
        description: Use GetSupportedLanguages on the admin service instead.
        operationId: AuthService_GetSupportedLanguages
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelauthv1GetSupportedLanguagesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - General
        deprecated: true
    /users/{id}:
      get:
        summary: User by ID
        description: |-
          Returns the full user object (human or machine) including the profile, email, etc.

          Deprecated: please use user service v2 GetUserByID
        operationId: ManagementService_GetUserByID
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/managementv1GetUserByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: User ID of the user you like to get.
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
      delete:
        summary: Delete user
        description: |-
          The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.

          Deprecated: please use user service v2 RemoveUser
        operationId: ManagementService_RemoveUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /global/users/_by_login_name:
      get:
        summary: Get User by login name (globally)
        description: |-
          Get a user by login name searched over all organizations. The request only returns data if the login name matches exactly.

          Deprecated: please use user service v2 ListUsers, with LoginNameQuery
        operationId: ManagementService_GetUserByLoginNameGlobal
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1GetUserByLoginNameGlobalResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: loginName
            in: query
            required: false
            type: string
        tags:
          - Users
          - Global
        deprecated: true
    /users/_search:
      post:
        summary: Search Users
        description: |-
          Search for users within an organization. By default, we will return users of your organization. Make sure to include a limit and sorting for pagination.

          Deprecated: please use user service v2 ListUsers
        operationId: ManagementService_ListUsers
        responses:
          '200':
            description: A list of all users matching the query
            schema:
              $ref: '#/definitions/managementv1ListUsersResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/managementv1ListUsersRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/{userId}/changes/_search:
      post:
        summary: Get User History
        description: Returns a list of changes/events that have happened on the user. It's the history of the user. Make sure to send a limit.
        operationId: ManagementService_ListUserChanges
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListUserChangesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListUserChangesBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
    /users/_is_unique:
      get:
        summary: Check for existing user
        description: |-
          Returns if a user with the requested email or username is unique. So you can create the user. 

          Deprecated: please use user service v2 ListUsers, is unique when no user is returned
        operationId: ManagementService_IsUserUnique
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1IsUserUniqueResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userName
            in: query
            required: false
            type: string
          - name: email
            in: query
            required: false
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/human:
      post:
        summary: 'Deprecated: Create User (Human)'
        description: |-
          Create a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.

          Deprecated: use ImportHumanUser
        operationId: ManagementService_AddHumanUser
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/managementv1AddHumanUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/managementv1AddHumanUserRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/human/_import:
      post:
        summary: Create/Import User (Human)
        description: |-
          Create/import a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.

          Deprecated: please use user service v2 [AddHumanUser](apis/resources/user_service_v2/user-service-add-human-user.api.mdx)
        operationId: ManagementService_ImportHumanUser
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ImportHumanUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ImportHumanUserRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to add users to another organization include the header. Make sure the user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/machine:
      post:
        summary: Create User (Machine)
        description: Create a new user with the type machine for your API, service or device. These users are used for non-interactive authentication flows.
        operationId: ManagementService_AddMachineUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1AddMachineUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddMachineUserRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
    /users/{id}/_deactivate:
      post:
        summary: Deactivate user
        description: |-
          The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.

          Deprecated: please use user service v2 DeactivateUser
        operationId: ManagementService_DeactivateUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/managementv1DeactivateUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceDeactivateUserBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/{id}/_reactivate:
      post:
        summary: Reactivate user
        description: |-
          Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'.

          Deprecated: please use user service v2 ReactivateUser
        operationId: ManagementService_ReactivateUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/managementv1ReactivateUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceReactivateUserBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/{id}/_lock:
      post:
        summary: Lock user
        description: |-
          The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.),

          Deprecated: please use user service v2 LockUser
        operationId: ManagementService_LockUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/managementv1LockUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceLockUserBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/{id}/_unlock:
      post:
        summary: Unlock user
        description: |-
          Unlock a user with the state 'locked'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'locked'.

          Deprecated: please use user service v2 UnlockUser
        operationId: ManagementService_UnlockUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/managementv1UnlockUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUnlockUserBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/{userId}/username:
      put:
        summary: Change user name
        description: |-
          Change the username of the user. Be aware that the user has to log in with the newly added username afterward.

          Deprecated: please use user service v2 UpdateHumanUser
        operationId: ManagementService_UpdateUserName
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1UpdateUserNameResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateUserNameBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/{id}/metadata/{key}:
      get:
        summary: Get User Metadata By Key
        description: Get a metadata object from a user by a specific key.
        operationId: ManagementService_GetUserMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetUserMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: key
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Metadata
      delete:
        summary: Delete User Metadata By Key
        description: Remove a metadata object from a user with a specific key.
        operationId: ManagementService_RemoveUserMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveUserMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: key
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Metadata
      post:
        summary: Set User Metadata
        description: This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
        operationId: ManagementService_SetUserMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetUserMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: key
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetUserMetadataBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Metadata
    /users/{id}/metadata/_bulk:
      delete:
        summary: Bulk Delete Metadata
        description: Remove a list of metadata objects from a user with a list of keys.
        operationId: ManagementService_BulkRemoveUserMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1BulkRemoveUserMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceBulkRemoveUserMetadataBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Metadata
      post:
        summary: Bulk Set User Metadata
        description: Add or update multiple metadata values for a user. Make sure the values are base64 encoded.
        operationId: ManagementService_BulkSetUserMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1BulkSetUserMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceBulkSetUserMetadataBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Metadata
    /users/{id}/metadata/_search:
      post:
        summary: Search User Metadata
        description: Get the metadata of a user filtered by your query.
        operationId: ManagementService_ListUserMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListUserMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListUserMetadataBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Metadata
    /users/{userId}/profile:
      get:
        summary: Get User Profile (Human)
        description: |-
          Get basic information like first_name and last_name of a user.

          Deprecated: please use user service v2 GetUserByID
        operationId: ManagementService_GetHumanProfile
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1GetHumanProfileResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
      put:
        summary: Update User Profile (Human)
        description: |-
          Update the profile information from a user. The profile includes basic information like first_name and last_name.

          Deprecated: please use user service v2 UpdateHumanUser
        operationId: ManagementService_UpdateHumanProfile
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1UpdateHumanProfileResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateHumanProfileBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/email:
      get:
        summary: Get User Email (Human)
        description: |-
          Get the email address and the verification state of the address.

          Deprecated: please use user service v2 GetUserByID
        operationId: ManagementService_GetHumanEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1GetHumanEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
      put:
        summary: Update User Email (Human)
        description: |-
          Change the email address of a user. If the state is set to not verified, the user will get a verification email.

          Deprecated: please use user service v2 SetEmail
        operationId: ManagementService_UpdateHumanEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1UpdateHumanEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateHumanEmailBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/_resend_initialization:
      post:
        summary: Resend User Initialization Email
        description: |-
          A newly created user will get an initialization email to verify the email address and set a password. Resend the email with this request to the user's email address, or a newly added address.

          Deprecated: not used anymore in user state
        operationId: ManagementService_ResendHumanInitialization
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1ResendHumanInitializationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceResendHumanInitializationBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/email/_resend_verification:
      post:
        summary: Resend User Email Verification
        description: |-
          Resend the email verification notification to the given email address of the user.

          Deprecated: please use user service v2 ResendEmailCode
        operationId: ManagementService_ResendHumanEmailVerification
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1ResendHumanEmailVerificationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceResendHumanEmailVerificationBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/phone:
      get:
        summary: Get User Phone (Human)
        description: |-
          Get the phone number and the verification state of the number. The phone number is only for informational purposes and to send messages, not for Authentication (2FA).

          Deprecated: please use user service v2 GetUserByID
        operationId: ManagementService_GetHumanPhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1GetHumanPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
      delete:
        summary: Remove User Phone (Human)
        description: |-
          Remove the configured phone number of a user.

          Deprecated: please use user service v2 SetPhone
        operationId: ManagementService_RemoveHumanPhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveHumanPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
      put:
        summary: Update User Phone (Human)
        description: |-
          Change the phone number of a user. If the state is set to not verified, the user will get an SMS to verify (if a notification provider is configured). The phone number is only for informational purposes and to send messages, not for Authentication (2FA).

          Deprecated: please use user service v2 SetPhone
        operationId: ManagementService_UpdateHumanPhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1UpdateHumanPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateHumanPhoneBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/phone/_resend_verification:
      post:
        summary: Resend User Phone Verification
        description: |-
          Resend the notification for the verification of the phone number, to the number stored on the user.

          Deprecated: please use user service v2 ResendPhoneCode
        operationId: ManagementService_ResendHumanPhoneVerification
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1ResendHumanPhoneVerificationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceResendHumanPhoneVerificationBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/avatar:
      delete:
        summary: Delete User Avatar (Human)
        description: Removes the avatar that is currently set on the user.
        operationId: ManagementService_RemoveHumanAvatar
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveHumanAvatarResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
    /users/{userId}/password/_initialize:
      post:
        summary: |-
          Set Human Initial Password

          Deprecated: please use user service v2 SetPassword
        operationId: ManagementService_SetHumanInitialPassword
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetHumanInitialPasswordResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetHumanInitialPasswordBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/password:
      post:
        summary: Set User Password
        description: |-
          Set a new password for a user. Per default, the user has to change the password on the next login. You can set no_change_required to true, to avoid the change on the next login.

          Deprecated: please use user service v2 SetPassword
        operationId: ManagementService_SetHumanPassword
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1SetHumanPasswordResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetHumanPasswordBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/password/_reset:
      post:
        summary: Send Reset Password Notification
        description: |-
          The user will receive an email with a link to change the password.

          Deprecated: please use user service v2 PasswordReset
        operationId: ManagementService_SendHumanResetPasswordNotification
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1SendHumanResetPasswordNotificationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSendHumanResetPasswordNotificationBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/auth_factors/_search:
      post:
        summary: Get User Authentication Factors (2FA/MFA)
        description: |-
          Get a list of authentication factors the user has set. Including Second Factors (2FA) and Multi-Factors (MFA).

          Deprecated: please use user service v2 ListAuthenticationMethodTypes
        operationId: ManagementService_ListHumanAuthFactors
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1ListHumanAuthFactorsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/auth_factors/otp:
      delete:
        summary: Remove Multi-Factor OTP
        description: |-
          Remove the configured One-Time Password (OTP) as a factor from the user. OTP is an authentication app, like Authy or Google/Microsoft Authenticator.

          Deprecated: please use user service v2 RemoveTOTP
        operationId: ManagementService_RemoveHumanAuthFactorOTP
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveHumanAuthFactorOTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/auth_factors/u2f/{tokenId}:
      delete:
        summary: Remove Multi-Factor U2F
        description: |-
          Remove the configured Universal Second Factor (U2F) as a factor from the user. U2F is a device-dependent factor like FingerPrint, Windows-Hello, etc.

          Deprecated: please use user service v2 RemoveU2F
        operationId: ManagementService_RemoveHumanAuthFactorU2F
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveHumanAuthFactorU2FResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: tokenId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/auth_factors/otp_sms:
      delete:
        summary: Remove Multi-Factor OTP SMS
        description: |-
          Remove the configured One-Time Password (OTP) SMS as a factor from the user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.

          Deprecated: please use user service v2 RemoveOTPSMS
        operationId: ManagementService_RemoveHumanAuthFactorOTPSMS
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveHumanAuthFactorOTPSMSResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/auth_factors/otp_email:
      delete:
        summary: Remove Multi-Factor OTP SMS
        description: |-
          Remove the configured One-Time Password (OTP) Email as a factor from the user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.

          Deprecated: please use user service v2 RemoveOTPEmail
        operationId: ManagementService_RemoveHumanAuthFactorOTPEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveHumanAuthFactorOTPEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/passwordless/_search:
      post:
        summary: Search Passwordless/Passkey authentication
        description: |-
          Get a list of configured passwordless/passkey authentication methods from the user. Passwordless/passkey is a device-dependent authentication like FingerScan, WindowsHello or a Hardware Token.

          Deprecated: please use user service v2 ListPasskeys
        operationId: ManagementService_ListHumanPasswordless
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1ListHumanPasswordlessResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/passwordless/_link:
      post:
        summary: Add Passwordless/Passkey Registration Link
        description: |-
          Adds a new passwordless/passkey authenticator link to the user and returns it in the response. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone

          Deprecated: please use user service v2 RegisterPasskey
        operationId: ManagementService_AddPasswordlessRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1AddPasswordlessRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/passwordless/_send_link:
      post:
        summary: Send Passwordless/Passkey Registration Link
        description: |-
          Adds a new passwordless/passkey authenticator link to the user and sends it to the user per email. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.

          Deprecated: please use user service v2 RegisterPasskey
        operationId: ManagementService_SendPasswordlessRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1SendPasswordlessRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSendPasswordlessRegistrationBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/passwordless/{tokenId}:
      delete:
        summary: Delete Passwordless/Passkey
        description: |-
          Remove a configured passwordless/passkey authentication method from the user. (e.g FaceID, FingerScane, WindowsHello, etc.).

          Deprecated: please use user service v2 RemovePasskey
        operationId: ManagementService_RemoveHumanPasswordless
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveHumanPasswordlessResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: tokenId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Human
        deprecated: true
    /users/{userId}/machine:
      put:
        summary: Update Machine User
        description: Change a service account/machine user. It is used for accounts with non-interactive authentication possibilities.
        operationId: ManagementService_UpdateMachine
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1UpdateMachineResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateMachineBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
    /users/{userId}/secret:
      delete:
        summary: Delete Secret of Machine User
        description: Delete a secret of a machine user/service account. The user will not be able to authenticate with the secret afterward.
        operationId: ManagementService_RemoveMachineSecret
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveMachineSecretResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
      put:
        summary: Create Secret for Machine User
        description: Create a new secret for a machine user/service account. It is used to authenticate the user (client credential grant).
        operationId: ManagementService_GenerateMachineSecret
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1GenerateMachineSecretResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceGenerateMachineSecretBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
    /users/{userId}/keys/{keyId}:
      get:
        summary: Get Machine user Key By ID
        description: Get a specific Key of a machine user by its id. Machine keys are used to authenticate with jwt profile authentication.
        operationId: ManagementService_GetMachineKeyByIDs
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1GetMachineKeyByIDsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: keyId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
      delete:
        summary: Delete Key for machine user
        description: Delete a specific key from a user. The user will not be able to authenticate with that key afterward.
        operationId: ManagementService_RemoveMachineKey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemoveMachineKeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: keyId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
    /users/{userId}/keys/_search:
      post:
        summary: Get Machine user Key By ID
        description: Get the list of keys of a machine user. Machine keys are used to authenticate with jwt profile authentication.
        operationId: ManagementService_ListMachineKeys
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1ListMachineKeysResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListMachineKeysBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
    /users/{userId}/keys:
      post:
        summary: Create Key for machine user
        description: If a public key is not supplied, a new key is generated and will be returned in the response. Make sure to store the returned key. If an RSA public key is supplied, the private key is omitted from the response. Machine keys are used to authenticate with jwt profile.
        operationId: ManagementService_AddMachineKey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1AddMachineKeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddMachineKeyBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
    /users/{userId}/pats/{tokenId}:
      get:
        summary: Get a Personal-Access-Token (PAT) by ID
        description: Returns the PAT for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
        operationId: ManagementService_GetPersonalAccessTokenByIDs
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1GetPersonalAccessTokenByIDsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: tokenId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
      delete:
        summary: Get a Personal-Access-Token (PAT) by ID
        description: Delete a PAT from a user. Afterward, the user will not be able to authenticate with that token anymore.
        operationId: ManagementService_RemovePersonalAccessToken
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1RemovePersonalAccessTokenResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: tokenId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a result from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
    /users/{userId}/pats/_search:
      post:
        summary: Get a Personal-Access-Token (PAT) by ID
        description: Returns a list of PATs for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
        operationId: ManagementService_ListPersonalAccessTokens
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1ListPersonalAccessTokensResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListPersonalAccessTokensBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
    /users/{userId}/pats:
      post:
        summary: Create a Personal-Access-Token (PAT)
        description: Generates a new PAT for the user. Currently only available for machine users. The token will be returned in the response, make sure to store it. PATs are ready-to-use tokens and can be sent directly in the authentication header.
        operationId: ManagementService_AddPersonalAccessToken
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v1AddPersonalAccessTokenResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddPersonalAccessTokenBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to update a user from another organization include the header. Make sure the requesting user has permission in the requested organization.
            in: header
            required: false
            type: string
        tags:
          - Users
          - User Machine
    /users/{userId}/idps/_search:
      post:
        summary: List Social Logins
        description: |-
          Returns a list of all linked identity providers/social logins of the user. (e. Google, Microsoft, AzureAD, etc.).

          Deprecated: please use user service v2 ListLinkedIDPs
        operationId: ManagementService_ListHumanLinkedIDPs
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListHumanLinkedIDPsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListHumanLinkedIDPsBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get the result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/{userId}/idps/{idpId}/{linkedUserId}:
      delete:
        summary: Remove Social Login
        description: |-
          Remove a configured social logins/identity providers of the user (e.g. Google, Microsoft, AzureAD, etc.). The user will not be able to log in with the given provider afterward. Make sure the user does have other possibilities to authenticate.

          Deprecated: please use user service v2 RemoveLinkedIDP
        operationId: ManagementService_RemoveHumanLinkedIDP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveHumanLinkedIDPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: idpId
            in: path
            required: true
            type: string
          - name: linkedUserId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get the result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
        deprecated: true
    /users/{userId}/memberships/_search:
      post:
        summary: List ZITADEL Permissions
        description: Show all the permissions the user has in ZITADEL (ZITADEL Manager).
        operationId: ManagementService_ListUserMemberships
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListUserMembershipsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            description: list limitations and ordering
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListUserMembershipsBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get the result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Users
    /orgs/me:
      get:
        summary: Get My Organization
        description: Returns the organization that is sent in the x-zitadel-orgid. If no header is set the organization of the authenticated user will be returned.
        operationId: ManagementService_GetMyOrg
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyOrgResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
      delete:
        summary: Delete Organization
        description: Deletes my organization and all its resources (Users, Projects, Grants to and from the org). Users of this organization will not be able to log in.
        operationId: ManagementService_RemoveOrg
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1RemoveOrgResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
      put:
        summary: Update Organization
        description: Change the name of the organization.
        operationId: ManagementService_UpdateOrg
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateOrgResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateOrgRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /global/orgs/_by_domain:
      get:
        summary: Get Organization By Domain
        description: Search an organization by the domain, overall organizations. The domain must match exactly.
        operationId: ManagementService_GetOrgByDomainGlobal
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetOrgByDomainGlobalResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: domain
            in: query
            required: true
            type: string
        tags:
          - Organizations
    /orgs/me/changes/_search:
      post:
        summary: Get Organization History
        description: Returns a list of changes/events that have happened in the organization. It's the history of the organization. Make sure to send a limit.
        operationId: ManagementService_ListOrgChanges
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListOrgChangesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListOrgChangesRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /orgs:
      post:
        summary: Create Organization
        description: Create a new organization. Based on the given name a domain will be generated to be able to identify users within an organization.
        operationId: ManagementService_AddOrg
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddOrgResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddOrgRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /orgs/me/_deactivate:
      post:
        summary: Deactivate Organization
        description: Sets the state of my organization to deactivated. Users of this organization will not be able to log in.
        operationId: ManagementService_DeactivateOrg
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateOrgResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1DeactivateOrgRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /orgs/me/_reactivate:
      post:
        summary: Reactivate Organization
        description: Set the state of my organization to active. The state of the organization has to be deactivated to perform the request. Users of this organization will be able to log in again.
        operationId: ManagementService_ReactivateOrg
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ReactivateOrgResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ReactivateOrgRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /metadata/{key}:
      get:
        summary: Get Organization Metadata By Key
        description: Get a metadata object from an organization by a specific key.
        operationId: ManagementService_GetOrgMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetOrgMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: key
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Organization Metadata
      delete:
        summary: Delete Organization Metadata By Key
        description: Remove a metadata object from an organization with a specific key.
        operationId: ManagementService_RemoveOrgMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveOrgMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: key
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Organization Metadata
      post:
        summary: Set Organization Metadata
        description: This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
        operationId: ManagementService_SetOrgMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetOrgMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: key
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetOrgMetadataBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Organization Metadata
    /metadata/_bulk:
      delete:
        summary: Bulk Delete Metadata
        description: Remove a list of metadata objects from an organization with a list of keys.
        operationId: ManagementService_BulkRemoveOrgMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1BulkRemoveOrgMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1BulkRemoveOrgMetadataRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Organization Metadata
      post:
        summary: Bulk Set Organization Metadata
        description: This endpoint sets a list of metadata to the organization. Make sure the values are base64 encoded.
        operationId: ManagementService_BulkSetOrgMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1BulkSetOrgMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1BulkSetOrgMetadataRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Organization Metadata
    /metadata/_search:
      post:
        summary: Search Organization Metadata
        description: Get the metadata of an organization filtered by your query.
        operationId: ManagementService_ListOrgMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListOrgMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListOrgMetadataRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Organization Metadata
    /orgs/me/domains/_search:
      post:
        summary: Search Domains
        description: Returns the list of registered domains of an organization. The domains are used to identify to which organization a user belongs.
        operationId: ManagementService_ListOrgDomains
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListOrgDomainsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListOrgDomainsRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /orgs/me/domains:
      post:
        summary: Add Domain
        description: Add a new domain to an organization. The domains are used to identify to which organization a user belongs.
        operationId: ManagementService_AddOrgDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddOrgDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddOrgDomainRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /orgs/me/domains/{domain}:
      delete:
        summary: Remove Domain
        description: Delete a new domain from an organization. The domains are used to identify to which organization a user belongs. If the uses use the domain for login, this will not be possible afterwards. They have to use another domain instead.
        operationId: ManagementService_RemoveOrgDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveOrgDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: domain
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /orgs/me/domains/{domain}/validation/_generate:
      post:
        summary: Generate Domain Verification
        description: Generate a new file to be able to verify your domain with DNS or HTTP challenge.
        operationId: ManagementService_GenerateOrgDomainValidation
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GenerateOrgDomainValidationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: domain
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceGenerateOrgDomainValidationBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /orgs/me/domains/{domain}/validation/_validate:
      post:
        summary: Verify Domain
        description: Make sure you have added the required verification to your domain, depending on the method you have chosen (HTTP or DNS challenge). ZITADEL will check it and set the domain as verified if it was successful. A verify domain has to be unique.
        operationId: ManagementService_ValidateOrgDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ValidateOrgDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: domain
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceValidateOrgDomainBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /orgs/me/domains/{domain}/_set_primary:
      post:
        summary: Set Primary Domain
        description: Set a domain as primary. It has to be verified to be able to be set as primary. The primary domain will be shown as suffix on the usernames as preferred loginname on this organization.
        operationId: ManagementService_SetPrimaryOrgDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetPrimaryOrgDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: domain
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
    /orgs/members/roles/_search:
      post:
        summary: List Organization Member Roles
        description: Members are users with permission to administrate ZITADEL on different levels. This request returns all roles possible for a ZITADEL member on the organization level.
        operationId: ManagementService_ListOrgMemberRoles
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListOrgMemberRolesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Members
          - ZITADEL Administrators
    /orgs/me/members/_search:
      post:
        summary: List Organization Members
        description: Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the organization level, matching the search queries. The search queries will be AND linked.
        operationId: ManagementService_ListOrgMembers
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListOrgMembersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListOrgMembersRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Members
          - ZITADEL Administrators
    /orgs/me/members:
      post:
        summary: Add Organization Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the organization level with one or multiple roles.
        operationId: ManagementService_AddOrgMember
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddOrgMemberResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddOrgMemberRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Members
          - ZITADEL Administrators
    /orgs/me/members/{userId}:
      delete:
        summary: Remove Organization Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an instance level. The user can still have roles on another level (iam, project)
        operationId: ManagementService_RemoveOrgMember
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveOrgMemberResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Members
          - ZITADEL Administrators
      put:
        summary: Update Organization Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
        operationId: ManagementService_UpdateOrgMember
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateOrgMemberResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateOrgMemberBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Organizations
          - Members
          - ZITADEL Administrators
    /projects/{id}:
      get:
        summary: Get Project By ID
        description: Returns a project owned by the organization (no granted projects). A Project is a vessel for different applications sharing the same role context.
        operationId: ManagementService_GetProjectByID
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetProjectByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
      delete:
        summary: Remove Project
        description: Project and all its sub-resources like project grants, applications, roles and user grants will be removed.
        operationId: ManagementService_RemoveProject
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveProjectResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
      put:
        summary: Update Project
        description: Update a project and its settings. A Project is a vessel for different applications sharing the same role context.
        operationId: ManagementService_UpdateProject
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateProjectResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateProjectBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /granted_projects/{projectId}/grants/{grantId}:
      get:
        summary: Get Granted Project By ID
        description: Returns a project owned by another organization and granted to my organization. A Project is a vessel for different applications sharing the same role context.
        operationId: ManagementService_GetGrantedProjectByID
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetGrantedProjectByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /projects/_search:
      post:
        summary: Search Project
        description: Lists projects my organization is the owner of (no granted projects). A Project is a vessel for different applications sharing the same role context.
        operationId: ManagementService_ListProjects
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListProjectsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListProjectsRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /granted_projects/_search:
      post:
        summary: Search Granted Project
        description: Lists projects my organization got granted from another organization. A Project is a vessel for different applications sharing the same role context.
        operationId: ManagementService_ListGrantedProjects
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListGrantedProjectsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListGrantedProjectsRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /granted_projects/{projectId}/grants/{grantId}/roles/_search:
      get:
        summary: Search Granted Project Roles
        description: Lists the roles a granted projects has. These are the roles, that have been granted by the owner organization to my organization.
        operationId: ManagementService_ListGrantedProjectRoles
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListGrantedProjectRolesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: query.offset
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. The default is set to 1000 in https://github.com/zitadel/zitadel/blob/new-eventstore/cmd/zitadel/startup.yaml. If the limit exceeds the maximum configured ZITADEL will throw an error. If no limit is present the default is taken.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.asc
            description: default is descending
            in: query
            required: false
            type: boolean
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /projects/{projectId}/changes/_search:
      post:
        summary: Project History
        description: Returns a list of changes/events that have happened on the project. It's the history of the project. Make sure to send a limit.
        operationId: ManagementService_ListProjectChanges
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListProjectChangesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: query.sequence
            description: sequence represents the order of events. It's always counting
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. The default is set to 1000 in https://github.com/zitadel/zitadel/blob/new-eventstore/cmd/zitadel/startup.yaml. If no limit is set or the limit exceeds the maximum configured ZITADEL will throw an error. If no limit is present the default is taken.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.asc
            description: default is descending
            in: query
            required: false
            type: boolean
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /projects:
      post:
        summary: Create Project
        description: Create a new project. A Project is a vessel for different applications sharing the same role context.
        operationId: ManagementService_AddProject
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddProjectResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddProjectRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /projects/{id}/_deactivate:
      post:
        summary: Deactivate Project
        description: Set the state of a project to deactivated. Request returns an error if the project is already deactivated.
        operationId: ManagementService_DeactivateProject
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateProjectResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceDeactivateProjectBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /projects/{id}/_reactivate:
      post:
        summary: Reactivate Project
        description: Set the state of a project to active. Request returns an error if the project is not deactivated.
        operationId: ManagementService_ReactivateProject
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ReactivateProjectResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceReactivateProjectBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /projects/{projectId}/roles/_search:
      post:
        summary: Search Project Roles
        description: Returns all roles of a project matching the search query.
        operationId: ManagementService_ListProjectRoles
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListProjectRolesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListProjectRolesBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Roles
    /projects/{projectId}/roles:
      post:
        summary: Add Project Role
        description: Add a new project role to a project. The key must be unique within the project.
        operationId: ManagementService_AddProjectRole
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddProjectRoleResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddProjectRoleBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Roles
    /projects/{projectId}/roles/_bulk:
      post:
        summary: Bulk Add Project Role
        description: Add a list of roles to a project. The keys must be unique within the project.
        operationId: ManagementService_BulkAddProjectRoles
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1BulkAddProjectRolesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceBulkAddProjectRolesBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Roles
    /projects/{projectId}/roles/{roleKey}:
      delete:
        summary: Remove Project Role
        description: Removes the role from the project and on every resource it has a dependency. This includes project grants and user grants.
        operationId: ManagementService_RemoveProjectRole
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveProjectRoleResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: roleKey
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Roles
      put:
        summary: Change Project Role
        description: Change a project role. The key is not editable. If a key should change, remove the role and create a new one.
        operationId: ManagementService_UpdateProjectRole
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateProjectRoleResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: roleKey
            description: The key is the only relevant attribute for ZITADEL regarding the authorization checks.
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateProjectRoleBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Roles
    /projects/members/roles/_search:
      post:
        summary: List Project Member Roles
        description: Members are users with permission to administrate ZITADEL on different levels. This request returns all roles possible for a ZITADEL member on the project level.
        operationId: ManagementService_ListProjectMemberRoles
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListProjectMemberRolesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
          - Members
          - ZITADEL Administrators
    /projects/{projectId}/members/_search:
      post:
        summary: List Project Members
        description: Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project level, matching the search queries. The search queries will be AND linked.
        operationId: ManagementService_ListProjectMembers
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListProjectMembersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListProjectMembersBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
          - Members
          - ZITADEL Administrators
    /projects/{projectId}/members:
      post:
        summary: Add Project Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the project level with one or multiple roles.
        operationId: ManagementService_AddProjectMember
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddProjectMemberResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddProjectMemberBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
          - Members
          - ZITADEL Administrators
    /projects/{projectId}/members/{userId}:
      delete:
        summary: Remove Project Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an project level. The user can still have roles on another level (iam, organization)
        operationId: ManagementService_RemoveProjectMember
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveProjectMemberResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
          - Members
          - ZITADEL Administrators
      put:
        summary: Update Project Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
        operationId: ManagementService_UpdateProjectMember
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateProjectMemberResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateProjectMemberBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
          - Members
          - ZITADEL Administrators
    /projects/{projectId}/apps/{appId}:
      get:
        summary: Get Application By ID
        description: Get an application of any type (OIDC, API, SAML)
        operationId: ManagementService_GetAppByID
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetAppByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
      delete:
        summary: Remove Application
        description: Remove an application. It is not possible to request tokens for removed apps. Request returns an error if the application is already deactivated.
        operationId: ManagementService_RemoveApp
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveAppResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
      put:
        summary: Update Application
        description: Update the basic information of an application. This doesn't include information that are dependent on the application type (OIDC, API, SAML)
        operationId: ManagementService_UpdateApp
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateAppResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateAppBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/_search:
      post:
        summary: Search Applications
        description: Returns all applications within a project, that match the query.
        operationId: ManagementService_ListApps
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListAppsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListAppsBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/changes/_search:
      post:
        summary: Application History
        description: Returns a list of changes/events that have happened on the application. It's the history of the app. Make sure to send a limit.
        operationId: ManagementService_ListAppChanges
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListAppChangesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: query.sequence
            description: sequence represents the order of events. It's always counting
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. The default is set to 1000 in https://github.com/zitadel/zitadel/blob/new-eventstore/cmd/zitadel/startup.yaml. If no limit is set or the limit exceeds the maximum configured ZITADEL will throw an error. If no limit is present the default is taken.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.asc
            description: default is descending
            in: query
            required: false
            type: boolean
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/oidc:
      post:
        summary: Create Application (OIDC)
        description: Create a new OIDC client. The client id will be generated and returned in the response. Depending on the chosen configuration also a secret will be returned.
        operationId: ManagementService_AddOIDCApp
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddOIDCAppResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddOIDCAppBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/saml:
      post:
        summary: Create Application (SAML)
        description: Create a new SAML client. Returns an entity ID
        operationId: ManagementService_AddSAMLApp
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddSAMLAppResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddSAMLAppBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/api:
      post:
        summary: Create Application (API)
        description: Create a new API client. The client id will be generated and returned in the response. Depending on the chosen configuration also a secret will be generated and returned.
        operationId: ManagementService_AddAPIApp
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddAPIAppResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddAPIAppBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/oidc_config:
      put:
        summary: Update OIDC Application Config
        description: Update the OIDC specific configuration of an application.
        operationId: ManagementService_UpdateOIDCAppConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateOIDCAppConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateOIDCAppConfigBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/saml_config:
      put:
        summary: Update SAML Application Config
        description: Update the SAML specific configuration of an application.
        operationId: ManagementService_UpdateSAMLAppConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateSAMLAppConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateSAMLAppConfigBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/api_config:
      put:
        summary: Update API Application Config
        description: Update the OIDC-specific configuration of an application.
        operationId: ManagementService_UpdateAPIAppConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateAPIAppConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateAPIAppConfigBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/_deactivate:
      post:
        summary: Deactivate Application
        description: Set the state of an application to deactivated. It is not possible to request tokens for deactivated apps. Request returns an error if the application is already deactivated.
        operationId: ManagementService_DeactivateApp
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateAppResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceDeactivateAppBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/_reactivate:
      post:
        summary: Reactivate Application
        description: Set the state of an application to active. Request returns an error if the application is not deactivated.
        operationId: ManagementService_ReactivateApp
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ReactivateAppResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceReactivateAppBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/oidc_config/_generate_client_secret:
      post:
        summary: Generate New OIDC Client Secret
        description: Generates a new client secret for the OIDC application, make sure to save the response
        operationId: ManagementService_RegenerateOIDCClientSecret
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RegenerateOIDCClientSecretResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceRegenerateOIDCClientSecretBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/api_config/_generate_client_secret:
      post:
        summary: Generate New API Client Secret
        description: Generates a new client secret for the API application, make sure to save the response
        operationId: ManagementService_RegenerateAPIClientSecret
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RegenerateAPIClientSecretResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceRegenerateAPIClientSecretBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/keys/{keyId}:
      get:
        summary: Get Application Key By ID
        description: Returns an application key. Keys are used for authorizing API Applications.
        operationId: ManagementService_GetAppKey
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetAppKeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: keyId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
      delete:
        summary: Delete Application Key
        description: Remove an application key. The API application will not be able to authorize with the key anymore.
        operationId: ManagementService_RemoveAppKey
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveAppKeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: keyId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/keys/_search:
      post:
        summary: List Application Keys
        description: Search application keys. Keys are used for authorizing API Applications.
        operationId: ManagementService_ListAppKeys
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListAppKeysResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListAppKeysBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/apps/{appId}/keys:
      post:
        summary: Create Application Key
        description: Create a new application key, they are used for authorizing API Applications. Key details will be returned in the response, make sure to save it.
        operationId: ManagementService_AddAppKey
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddAppKeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: appId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddAppKeyBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Applications
    /projects/{projectId}/grants/{grantId}/changes/_search:
      post:
        summary: Project Grant History
        description: Returns a list of changes/events that have happened on the project grant. It's the history of the project. Make sure to send a limit.
        operationId: ManagementService_ListProjectGrantChanges
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListProjectGrantChangesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: query.sequence
            description: sequence represents the order of events. It's always counting
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. The default is set to 1000 in https://github.com/zitadel/zitadel/blob/new-eventstore/cmd/zitadel/startup.yaml. If no limit is set or the limit exceeds the maximum configured ZITADEL will throw an error. If no limit is present the default is taken.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.asc
            description: default is descending
            in: query
            required: false
            type: boolean
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
    /projects/{projectId}/grants/{grantId}:
      get:
        summary: Project Grant By ID
        description: Returns a project grant. A project grant is when the organization grants its project to another organization.
        operationId: ManagementService_GetProjectGrantByID
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetProjectGrantByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Projects
      delete:
        summary: Remove Project Grant
        description: Remove a project grant. All user grants for this project grant will also be removed. A user will not have access to the project afterward (if permissions are checked).
        operationId: ManagementService_RemoveProjectGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveProjectGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
      put:
        summary: Change Project Grant
        description: Change the roles of the project that is granted to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization
        operationId: ManagementService_UpdateProjectGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateProjectGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateProjectGrantBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
    /projects/{projectId}/grants/_search:
      post:
        summary: Search Project Grants from Project
        description: Returns a list of project grants for a specific project. A project grant is when the organization grants its project to another organization.
        operationId: ManagementService_ListProjectGrants
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListProjectGrantsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListProjectGrantsBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
    /projectgrants/_search:
      post:
        summary: Search Project Grants
        description: Returns a list of project grants. A project grant is when the organization grants its project to another organization.
        operationId: ManagementService_ListAllProjectGrants
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListAllProjectGrantsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListAllProjectGrantsRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
    /projects/{projectId}/grants:
      post:
        summary: Add Project Grant
        description: Grant a project to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization
        operationId: ManagementService_AddProjectGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddProjectGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddProjectGrantBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
    /projects/{projectId}/grants/{grantId}/_deactivate:
      post:
        summary: Deactivate Project Grant
        description: Set the state of the project grant to deactivated. The grant has to be active to be able to deactivate.
        operationId: ManagementService_DeactivateProjectGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateProjectGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceDeactivateProjectGrantBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
    /projects/{projectId}/grants/{grantId}/_reactivate:
      post:
        summary: Reactivate Project Grant
        description: Set the state of the project grant to active. The grant has to be deactivated to be able to reactivate.
        operationId: ManagementService_ReactivateProjectGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ReactivateProjectGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceReactivateProjectGrantBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to change/get objects of another organization include the header. Make sure the requesting user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
    /projects/grants/members/roles/_search:
      post:
        summary: List Project Grant Member Roles
        description: Members are users with permission to administrate ZITADEL on different levels. This request returns all roles possible for a ZITADEL member on the project grant level.
        operationId: ManagementService_ListProjectGrantMemberRoles
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListProjectGrantMemberRolesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: query.offset
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. The default is set to 1000 in https://github.com/zitadel/zitadel/blob/new-eventstore/cmd/zitadel/startup.yaml. If the limit exceeds the maximum configured ZITADEL will throw an error. If no limit is present the default is taken.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.asc
            description: default is descending
            in: query
            required: false
            type: boolean
          - name: result
            in: query
            required: false
            type: array
            items:
              type: string
            collectionFormat: multi
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
          - Members
          - ZITADEL Administrators
    /projects/{projectId}/grants/{grantId}/members/_search:
      post:
        summary: List Project Grant Members
        description: Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
        operationId: ManagementService_ListProjectGrantMembers
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListProjectGrantMembersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceListProjectGrantMembersBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
          - Members
          - ZITADEL Administrators
    /projects/{projectId}/grants/{grantId}/members:
      post:
        summary: Add Project Grant Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the project grant level with one or multiple roles.
        operationId: ManagementService_AddProjectGrantMember
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddProjectGrantMemberResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddProjectGrantMemberBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
          - Members
          - ZITADEL Administrators
    /projects/{projectId}/grants/{grantId}/members/{userId}:
      delete:
        summary: Remove Project Grant Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on a project grant level. The user can still have roles on another level (iam, organization, project)
        operationId: ManagementService_RemoveProjectGrantMember
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveProjectGrantMemberResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: userId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
          - Members
          - ZITADEL Administrators
      put:
        summary: Update Project Grant Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
        operationId: ManagementService_UpdateProjectGrantMember
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateProjectGrantMemberResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: projectId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateProjectGrantMemberBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Project Grants
          - Members
          - ZITADEL Administrators
    /users/{userId}/grants/{grantId}:
      get:
        summary: User Grant By ID
        description: Returns a user grant per ID. A user grant is a role a user has for a specific project and organization.
        operationId: ManagementService_GetUserGrantByID
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetUserGrantByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - User Grants
      delete:
        summary: Remove User Grant
        description: Removes the user grant from the user. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
        operationId: ManagementService_RemoveUserGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveUserGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - User Grants
      put:
        summary: Update User Grants
        description: Update the roles of a user grant. User grants are the roles users have for a specific project and organization.
        operationId: ManagementService_UpdateUserGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateUserGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateUserGrantBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - User Grants
    /users/grants/_search:
      post:
        summary: Search User Grants
        description: Returns a list of user grants that match the search queries. User grants are the roles users have for a specific project and organization.
        operationId: ManagementService_ListUserGrants
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListUserGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListUserGrantRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - User Grants
    /users/{userId}/grants:
      post:
        summary: Add User Grant
        description: Add a user grant for a specific user. User grants are the roles users have for a specific project and organization.
        operationId: ManagementService_AddUserGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddUserGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceAddUserGrantBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - User Grants
    /users/{userId}/grants/{grantId}/_deactivate:
      post:
        summary: Deactivate User Grant
        description: Deactivate the user grant. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested. An error will be returned if the user grant is already deactivated.
        operationId: ManagementService_DeactivateUserGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateUserGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceDeactivateUserGrantBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - User Grants
    /users/{userId}/grants/{grantId}/_reactivate:
      post:
        summary: Reactivate User Grant
        description: Reactivate a deactivated user grant. The user will be able to use the granted project again. An error will be returned if the user grant is not deactivated.
        operationId: ManagementService_ReactivateUserGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ReactivateUserGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: grantId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceReactivateUserGrantBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - User Grants
    /user_grants/_bulk:
      delete:
        summary: Bulk Remove User Grants
        description: Remove a list of user grants. The users will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
        operationId: ManagementService_BulkRemoveUserGrant
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1BulkRemoveUserGrantResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1BulkRemoveUserGrantRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - User Grants
    /policies/orgiam:
      get:
        summary: Get Org IAM Policy
        description: Use Get Domain Settings instead
        operationId: AdminService_GetOrgIAMPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetOrgIAMPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Domain Settings
        deprecated: true
      put:
        summary: Update Org IAM Policy
        description: Use Update Domain Settings instead
        operationId: AdminService_UpdateOrgIAMPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateOrgIAMPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateOrgIAMPolicyRequest'
        tags:
          - Settings
          - Domain Settings
        deprecated: true
    /policies/domain:
      get:
        summary: Get Domain Settings
        description: Returns the domain settings configured as default on the instance. Domain settings specify how ZITADEL should handle domains, in regards to usernames, emails and validation..
        operationId: AdminService_GetDomainPolicy
        responses:
          '200':
            description: default domain policy
            schema:
              $ref: '#/definitions/zitadeladminv1GetDomainPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Domain Settings
      put:
        summary: Update Domain Settings
        description: Update the domain settings configured as default on the instance. Domain settings specify how ZITADEL should handle domains, usernames, emails and validation. It affects all organizations that do not have overwritten settings.
        operationId: AdminService_UpdateDomainPolicy
        responses:
          '200':
            description: default domain policy updated
            schema:
              $ref: '#/definitions/v1UpdateDomainPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateDomainPolicyRequest'
        tags:
          - Settings
          - Domain Settings
    /policies/login:
      get:
        summary: Get Login Policy
        description: Returns the login settings that should be used for the authenticated user. It is set either on an instance or organization level. This policy defines what possibilities the user has to authenticate and to use in the login, e.g social logins, MFA, passkey, etc.
        operationId: AuthService_GetMyLoginPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyLoginPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Policies
      delete:
        summary: Reset Custom Login Settings to Default
        description: Remove the custom settings from the organization. The default settings of the instance will be triggered afterward. The login policy defines what kind of authentication possibilities the user should have. Generally speaking the behavior of the login and register UI.
        operationId: ManagementService_ResetLoginPolicyToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResetLoginPolicyToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Login Settings
      post:
        summary: Create Custom Login Settings
        description: Create login settings for the organization and therefore overwrite the default settings for this organization. The login policy defines what kind of authentication possibilities the user should have. Generally speaking the behavior of the login and register UI.
        operationId: ManagementService_AddCustomLoginPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddCustomLoginPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddCustomLoginPolicyRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Login Settings
      put:
        summary: Update Login Settings
        description: Update the default login settings defined on the instance level. It will trigger for all organizations, that don't overwrite the settings. The login policy defines what kind of authentication possibilities the user should have. Generally speaking the behavior of the login and register UI.
        operationId: AdminService_UpdateLoginPolicy
        responses:
          '200':
            description: default login policy updated
            schema:
              $ref: '#/definitions/v1UpdateLoginPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateLoginPolicyRequest'
        tags:
          - Settings
          - Login Settings
    /policies/default/login:
      get:
        summary: Get Default Login Settings
        description: Returns the default login settings defined on the instance level. The login policy defines what kind of authentication possibilities the user should have. Generally speaking the behavior of the login and register UI.
        operationId: ManagementService_GetDefaultLoginPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetDefaultLoginPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Login Settings
    /policies/login/idps/_search:
      post:
        summary: List Linked Identity Providers
        description: Returns a list of identity providers that are linked in the login policy. This means, that they are configured for the instance and will be shown to the users. It affects all organizations, without custom login settings.
        operationId: AdminService_ListLoginPolicyIDPs
        responses:
          '200':
            description: Identity providers of default login policy
            schema:
              $ref: '#/definitions/zitadeladminv1ListLoginPolicyIDPsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1ListLoginPolicyIDPsRequest'
        tags:
          - Settings
          - Login Settings
          - Identity Providers
    /policies/login/idps:
      post:
        summary: Add Linked Identity Provider
        description: Add/link a pre-configured identity provider to the login settings of the instance. This means that it will be shown to the users on the login page. It affects all organizations, without custom login settings.
        operationId: AdminService_AddIDPToLoginPolicy
        responses:
          '200':
            description: Identity providers added to default login policy
            schema:
              $ref: '#/definitions/zitadeladminv1AddIDPToLoginPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddIDPToLoginPolicyRequest'
        tags:
          - Settings
          - Login Settings
          - Identity Providers
    /policies/login/idps/{idpId}:
      delete:
        summary: Remove Linked Identity Provider
        description: Remove an identity provider from the login settings of the organization. This means that it will not be shown to the users on the login page.
        operationId: ManagementService_RemoveIDPFromLoginPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1RemoveIDPFromLoginPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Login Settings
          - Identity Providers
    /policies/login/second_factors/_search:
      post:
        summary: List Second Factors (2FA)
        description: Returns a list of second factors (2FA) configured on the login settings of the instance. It affects all organizations, without custom login settings. Authentication factors are used as an additional layer of security for your users (e.g. Authentication App, FingerPrint, Windows Hello, etc). Per definition, it is called the second factor as it is used after a password. In the UI we generalize it as multi-factor.
        operationId: AdminService_ListLoginPolicySecondFactors
        responses:
          '200':
            description: second factors of default login policy
            schema:
              $ref: '#/definitions/zitadeladminv1ListLoginPolicySecondFactorsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Login Settings
          - Authentication Methods
    /policies/login/second_factors:
      post:
        summary: Add Second Factor (2FA)
        description: Add a new second factor (2FA) to the login settings of the instance. Users will have the possibility to authenticate with the configured factor afterward. It affects all organizations, without custom login settings. Authentication factors are used as an additional factor to add more security to your users (e.g. Authentication App, FingerPrint, Windows Hello, etc). Per definition, it is called a second factor as it is used as an additional authentication after a password. In the UI we generalize this as multi-factor.
        operationId: AdminService_AddSecondFactorToLoginPolicy
        responses:
          '200':
            description: second factor added to default login policy
            schema:
              $ref: '#/definitions/zitadeladminv1AddSecondFactorToLoginPolicyResponse'
          '400':
            description: invalid second factor type
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddSecondFactorToLoginPolicyRequest'
        tags:
          - Settings
          - Login Settings
          - Authentication Methods
    /policies/login/second_factors/{type}:
      delete:
        summary: Remove Second Factor (2FA)
        description: Remove a configured second factor (2FA) from the login settings of the organization. Users will not be able to authenticate with the configured factor afterward. Authentication factors are used as an additional layer of security for your users (e.g. Authentication App, FingerPrint, Windows Hello, etc). Per definition, it is called the second factor as it is used after a password. In the UI we generalize it as multi-factor.
        operationId: ManagementService_RemoveSecondFactorFromLoginPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1RemoveSecondFactorFromLoginPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: type
            in: path
            required: true
            type: string
            enum:
              - SECOND_FACTOR_TYPE_UNSPECIFIED
              - SECOND_FACTOR_TYPE_OTP
              - SECOND_FACTOR_TYPE_U2F
              - SECOND_FACTOR_TYPE_OTP_EMAIL
              - SECOND_FACTOR_TYPE_OTP_SMS
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Login Settings
          - Authentication Methods
    /policies/login/auth_factors/_search:
      post:
        summary: List Multi-factors (MFA)
        description: Returns a list of multi-factors (MFA) configured on the login settings of the organization. Authentication factors are used as an additional layer of security for your users (e.g. Authentication App, FingerPrint, Windows Hello, etc).  Per definition, it is called multifactor factor or passwordless as it is used as first and second authentication and a password is not necessary. In the UI we generalize it as passwordless or passkey.
        operationId: ManagementService_ListLoginPolicyMultiFactors
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ListLoginPolicyMultiFactorsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Login Settings
          - Authentication Methods
    /policies/login/multi_factors:
      post:
        summary: Add Multi-Factor (MFA)
        description: Add a multi-factor (MFA) to the login settings of the instance. It affects all organizations, without custom login settings. Authentication factors are used as an additional layer of security for your users (e.g. Authentication App, FingerPrint, Windows Hello, etc).  Per definition, it is called multi-factor factor or passwordless as it is used as first and second authentication and a password is not necessary. In the UI we generalize it as passwordless or passkey.
        operationId: AdminService_AddMultiFactorToLoginPolicy
        responses:
          '200':
            description: multi-factor added to default login policy
            schema:
              $ref: '#/definitions/zitadeladminv1AddMultiFactorToLoginPolicyResponse'
          '400':
            description: invalid multi-factor type
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddMultiFactorToLoginPolicyRequest'
        tags:
          - Settings
          - Login Settings
          - Authentication Methods
    /policies/login/multi_factors/{type}:
      delete:
        summary: Remove Multi-factor (MFA)
        description: Remove a multi-factor (MFA) from the login settings of the organization. It affects all organizations, without custom login settings. Authentication factors are used as an additional layer of security for your users (e.g. Authentication App, FingerPrint, Windows Hello, etc).  Per definition, it is called multi-factor factor or passwordless as it is used as first and second authentication and a password is not necessary. In the UI we generalize it as passwordless or passkey.
        operationId: ManagementService_RemoveMultiFactorFromLoginPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1RemoveMultiFactorFromLoginPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: type
            in: path
            required: true
            type: string
            enum:
              - MULTI_FACTOR_TYPE_UNSPECIFIED
              - MULTI_FACTOR_TYPE_U2F_WITH_VERIFICATION
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Login Settings
          - Authentication Methods
    /policies/password/complexity:
      get:
        summary: Get Password Complexity Settings
        description: Returns the password complexity settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify how a password should look (characters, length, etc.)
        operationId: AdminService_GetPasswordComplexityPolicy
        responses:
          '200':
            description: default password complexity policy
            schema:
              $ref: '#/definitions/zitadeladminv1GetPasswordComplexityPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Password Settings
      delete:
        summary: Reset Password Complexity Settings to Default
        description: Remove the password complexity settings of the organization and therefore use the default settings on the instance. The settings specify how a password should look (characters, length, etc.)
        operationId: ManagementService_ResetPasswordComplexityPolicyToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResetPasswordComplexityPolicyToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
      post:
        summary: Create Password Complexity Settings
        description: Create new password complexity settings for the organization. This will overwrite the settings of the instance for this organization. The settings specify how a password should look (characters, length, etc.)
        operationId: ManagementService_AddCustomPasswordComplexityPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddCustomPasswordComplexityPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddCustomPasswordComplexityPolicyRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
      put:
        summary: Update Password Complexity Settings
        description: Updates the default password complexity settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify how a password should look (characters, length, etc.)
        operationId: AdminService_UpdatePasswordComplexityPolicy
        responses:
          '200':
            description: default password complexity policy updated
            schema:
              $ref: '#/definitions/v1UpdatePasswordComplexityPolicyResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdatePasswordComplexityPolicyRequest'
        tags:
          - Settings
          - Password Settings
    /policies/default/password/complexity:
      get:
        summary: Get Default Password Complexity Settings
        description: Returns the default password complexity settings configured on the instance. The settings specify how a password should look (characters, length, etc.)
        operationId: ManagementService_GetDefaultPasswordComplexityPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetDefaultPasswordComplexityPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
    /policies/password/age:
      get:
        summary: Get Password Age Settings
        description: Returns the password age settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify the expiry of password, after which a user is forced to change it on the next login.
        operationId: AdminService_GetPasswordAgePolicy
        responses:
          '200':
            description: default password age policy
            schema:
              $ref: '#/definitions/zitadeladminv1GetPasswordAgePolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Password Settings
      delete:
        summary: Reset Password Age Settings to Default
        description: Remove the password age settings of the organization and therefore use the default settings on the instance.. The settings specify the expiry of password, after which a user is forced to change it on the next login.
        operationId: ManagementService_ResetPasswordAgePolicyToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResetPasswordAgePolicyToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
      post:
        summary: Add Password Age Settings
        description: Create new password age settings for the organization. This will overwrite the settings of the instance for this organization. The settings specify the expiry of password, after which a user is forced to change it on the next login.
        operationId: ManagementService_AddCustomPasswordAgePolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddCustomPasswordAgePolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddCustomPasswordAgePolicyRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
      put:
        summary: Update Password Age Settings
        description: Updates the default password complexity settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify the expiry of password, after which a user is forced to change it on the next login.
        operationId: AdminService_UpdatePasswordAgePolicy
        responses:
          '200':
            description: default password age policy updated
            schema:
              $ref: '#/definitions/v1UpdatePasswordAgePolicyResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdatePasswordAgePolicyRequest'
        tags:
          - Settings
          - Password Settings
    /policies/default/password/age:
      get:
        summary: Get Default Password Age Settings
        description: Returns the default password age settings configured on the instance. The settings specify the expiry of password, after which a user is forced to change it on the next login.
        operationId: ManagementService_GetDefaultPasswordAgePolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetDefaultPasswordAgePolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
    /policies/lockout:
      get:
        summary: Get Password Lockout Settings
        description: Returns the password lockout settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify when a user should be locked (e.g how many password attempts). The user has to be unlocked by an administrator afterward.
        operationId: AdminService_GetLockoutPolicy
        responses:
          '200':
            description: default lockout policy
            schema:
              $ref: '#/definitions/zitadeladminv1GetLockoutPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Password Settings
      delete:
        summary: Reset Password Lockout Settings to Default
        description: Remove the password lockout settings from the organization. The settings configured on the instance will trigger afterward for this organization. The settings specify when a user should be locked (e.g how many password attempts). The user has to be unlocked by an administrator afterward.
        operationId: ManagementService_ResetLockoutPolicyToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResetLockoutPolicyToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
      post:
        summary: Add Password Lockout Settings
        description: Add new password lockout settings on the organization level. This will overwrite the settings set on the instance for this organization. The settings specify when a user should be locked (e.g how many password attempts). The user has to be unlocked by an administrator afterward.
        operationId: ManagementService_AddCustomLockoutPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddCustomLockoutPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddCustomLockoutPolicyRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
      put:
        summary: Update Password Lockout Settings
        description: Update the password lockout settings configured on the organization. The settings specify when a user should be locked (e.g how many password attempts). The user has to be unlocked by an administrator afterward.
        operationId: ManagementService_UpdateCustomLockoutPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateCustomLockoutPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateCustomLockoutPolicyRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
    /policies/default/lockout:
      get:
        summary: Get Default Password Lockout Settings
        description: Returns the default password lockout settings configured on the instance. The settings specify when a user should be locked (e.g how many password attempts). The user has to be unlocked by an administrator afterward.
        operationId: ManagementService_GetDefaultLockoutPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetDefaultLockoutPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Password Settings
    /policies/privacy:
      get:
        summary: Get Privacy Policy
        description: Returns the privacy settings that should be used for the authenticated user. It is set either on an instance or organization level. This policy defines the TOS and terms of service links.
        operationId: AuthService_GetMyPrivacyPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyPrivacyPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Policies
      delete:
        summary: Reset Privacy Settings to Default
        description: The settings from the organization will be removed and therefore the default settings configured on the instance will be triggered. The settings specify the terms and services, privacy policy, etc. A registering user has to accept the configured settings.
        operationId: ManagementService_ResetPrivacyPolicyToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResetPrivacyPolicyToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Privacy Settings
      post:
        summary: Add Privacy Settings
        description: Add a custom privacy policy for the organization. The configuration of the instance will be overwritten. Variable {{.Lang}} can be set to have different links based on the language. Make sure to identify which settings should be triggered by sending the organization scope. The settings specify the terms and services, privacy policy, etc. A registering user has to accept the configured settings.
        operationId: ManagementService_AddCustomPrivacyPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddCustomPrivacyPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddCustomPrivacyPolicyRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Privacy Settings
      put:
        summary: Update Privacy Settings
        description: Update the privacy settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify the terms and services, privacy policy, etc. A registering user has to accept the configured settings. Variable {{.Lang}} can be set to have different links based on the language.
        operationId: AdminService_UpdatePrivacyPolicy
        responses:
          '200':
            description: default privacy policy updated
            schema:
              $ref: '#/definitions/v1UpdatePrivacyPolicyResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdatePrivacyPolicyRequest'
        tags:
          - Settings
          - Privacy Settings
    /policies/default/privacy:
      get:
        summary: Get Default Privacy Settings
        description: Returns the default privacy settings configured on the instance. The settings specify the terms and services, privacy policy, etc. A registering user has to accept the configured settings.
        operationId: ManagementService_GetDefaultPrivacyPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetDefaultPrivacyPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Privacy Settings
    /policies/notification:
      get:
        summary: Return Notification Settings
        description: Return the notification settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify if notifications should be sent to the users on specific triggers (e.g password changed).
        operationId: AdminService_GetNotificationPolicy
        responses:
          '200':
            description: default notification policy
            schema:
              $ref: '#/definitions/zitadeladminv1GetNotificationPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Notification Settings
      delete:
        summary: Reset Notification Settings to Default
        description: The settings configured will be removed from the organization. Therefore the settings from the instance will trigger for the users of this organization afterward. The settings specify if notifications should be sent to the users on specific triggers (e.g password changed).
        operationId: ManagementService_ResetNotificationPolicyToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResetNotificationPolicyToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Notification Settings
      post:
        summary: Add Notification Settings
        description: Add new notification settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify if notifications should be sent to the users on specific triggers (e.g password changed).
        operationId: AdminService_AddNotificationPolicy
        responses:
          '200':
            description: default notification policy
            schema:
              $ref: '#/definitions/v1AddNotificationPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddNotificationPolicyRequest'
        tags:
          - Settings
          - Notification Settings
      put:
        summary: Update Notification Settings
        description: Update the notification settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify if notifications should be sent to the users on specific triggers (e.g password changed).
        operationId: AdminService_UpdateNotificationPolicy
        responses:
          '200':
            description: default notification policy updated
            schema:
              $ref: '#/definitions/v1UpdateNotificationPolicyResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateNotificationPolicyRequest'
        tags:
          - Settings
          - Notification Settings
    /policies/default/notification:
      get:
        summary: Get Default Notification Settings
        description: Return the default notification settings configured on the instance. The settings specify if notifications should be sent to the users on specific triggers (e.g password changed).
        operationId: ManagementService_GetDefaultNotificationPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetDefaultNotificationPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Notification Settings
    /policies/label:
      get:
        summary: Get Label Policy
        description: Returns the label settings that should be used for the authenticated user. It is set either on an instance or organization level. This policy defines the branding, colors, fonts, images, etc.
        operationId: AuthService_GetMyLabelPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyLabelPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Policies
      delete:
        summary: Reset Labeling/Branding Settings
        description: Removes the label policy/branding of the organization and therefore the default settings from the instance will be shown to the users.
        operationId: ManagementService_ResetLabelPolicyToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResetLabelPolicyToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Branding
      post:
        summary: Create Labeling/Branding Settings
        description: Create the private labeling/branding configured on the organization. Make sure to activate it so it will be shown to the users. The settings will trigger if the organization has been identified (organization scope, user). Define what colors, fonts, and logo should be used for the Login/Register UI, E-Mails and Console.
        operationId: ManagementService_AddCustomLabelPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddCustomLabelPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddCustomLabelPolicyRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Branding
      put:
        summary: Update Labeling/Branding Settings
        description: Update the preview private labeling/branding configured on the instance level. It affects all organizations, that don't overwrite the settings. The preview is used to show you how it will look like, make sure to activate it as soon as you are happy with the configuration. Define what colors, fonts, and logo should be used for the Login/Register UI, E-Mails and Console.
        operationId: AdminService_UpdateLabelPolicy
        responses:
          '200':
            description: default label policy updated
            schema:
              $ref: '#/definitions/v1UpdateLabelPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateLabelPolicyRequest'
        tags:
          - Settings
          - Branding
    /policies/label/_preview:
      get:
        summary: Get Preview Private Labeling/Branding Settings
        description: Returns the preview private labeling/branding configured on the instance level. The preview is used to show you how it will look like, and not activate it directly for your users. In the future, it should be possible to send a preview mail and have a look at the preview login. The settings will trigger if the organization has not overwritten the settings or if no specific organization is called on the login UI. Define what colors, fonts, and logo should be used for the Login/Register UI, E-Mails and Console.
        operationId: AdminService_GetPreviewLabelPolicy
        responses:
          '200':
            description: default label policy
            schema:
              $ref: '#/definitions/zitadeladminv1GetPreviewLabelPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Branding
    /policies/default/label:
      get:
        summary: Get Default Private Labeling/Branding Settings
        description: Returns the default private labeling/branding configured on the instance. Defines what colors, fonts, and logo should be used for the Login/Register UI, E-Mails and Console.
        operationId: ManagementService_GetDefaultLabelPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetDefaultLabelPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Settings
          - Branding
    /policies/label/_activate:
      post:
        summary: Activate Labeling/Branding Settings
        description: Activates the preview private labeling/branding configured on the instance level. It will be shown to the users afterward. It affects all organizations, that don't overwrite the settings. Defines what colors, fonts, and logo should be used for the Login/Register UI, E-Mails and Console.
        operationId: AdminService_ActivateLabelPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ActivateLabelPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ActivateLabelPolicyRequest'
        tags:
          - Settings
          - Branding
    /policies/label/logo:
      delete:
        summary: Remove Logo Light
        description: Removes the logo of the light theme from the configured label policy/branding of the instance. It will only be shown on the preview. Make sure to activate your changes afterward.
        operationId: AdminService_RemoveLabelPolicyLogo
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveLabelPolicyLogoResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Branding
    /policies/label/logo_dark:
      delete:
        summary: Remove Logo Dark
        description: Removes the logo of the dark theme from the configured label policy/branding of the instance. It will only be shown on the preview. Make sure to activate your changes afterward.
        operationId: AdminService_RemoveLabelPolicyLogoDark
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveLabelPolicyLogoDarkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Branding
    /policies/label/icon:
      delete:
        summary: Remove Icon Light
        description: Removes the icon of the light theme from the configured label policy/branding of the instance. It will only be shown on the preview. Make sure to activate your changes afterward.
        operationId: AdminService_RemoveLabelPolicyIcon
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveLabelPolicyIconResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Branding
    /policies/label/icon_dark:
      delete:
        summary: Remove Icon Dark
        description: Removes the icon of the dark theme from the configured label policy/branding of the instance. It will only be shown on the preview. Make sure to activate your changes afterward.
        operationId: AdminService_RemoveLabelPolicyIconDark
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveLabelPolicyIconDarkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Branding
    /policies/label/font:
      delete:
        summary: Remove Font
        description: Removes the font from the configured label policy/branding of the instance. It will only be shown on the preview. Make sure to activate your changes afterward.
        operationId: AdminService_RemoveLabelPolicyFont
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveLabelPolicyFontResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Branding
    /text/message/init/{language}:
      get:
        summary: Get Custom Init Message Text
        description: Get the custom text of the initialize-user message/email that is set on the organization. The email is sent when a user is created and has either no password or a non-verified email address.
        operationId: ManagementService_GetCustomInitMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomInitMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Init Message Text to Default
        description: Removes the custom text of the initialize-user message/email that is overwritten on the organization and triggers the default text instead.
        operationId: ManagementService_ResetCustomInitMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomInitMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Custom Init Message Text
        description: 'Set the custom text of the initialize-user message/email the default texts will be overwritten for the organization. The email is sent when a user is created and has either no password or a non-verified email address. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: ManagementService_SetCustomInitMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomInitMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomInitMessageTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/init/{language}:
      get:
        summary: Get Default Init Message Text
        description: Get the default text of the initialize-user message/email that is set either on the instance or in the filesystem of ZITADEL. The email is sent when a user is created and has either no password or a non-verified email address.
        operationId: ManagementService_GetDefaultInitMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultInitMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/message/passwordreset/{language}:
      get:
        summary: Get Custom Password Reset Message Text
        description: Get the custom text of the password reset message/email that is set on the organization. The email is sent when a user triggers the password forgot-request.
        operationId: ManagementService_GetCustomPasswordResetMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomPasswordResetMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Password Reset Message Text to Default
        description: Removes the custom text of the password reset user message/email and the default will trigger afterward.
        operationId: ManagementService_ResetCustomPasswordResetMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomPasswordResetMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Custom Password Reset Message Text
        description: 'Set the custom text of the password reset user message/email for the organization. The email is sent when a user triggers the password forgot-request. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: ManagementService_SetCustomPasswordResetMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomPasswordResetMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomPasswordResetMessageTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/passwordreset/{language}:
      get:
        summary: Get Default Password Reset Message Text
        description: Get the default text of the password reset message/email that is set on the instance or in the files of ZITADEL. The email is sent when a user triggers the password forgot-request.
        operationId: ManagementService_GetDefaultPasswordResetMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultPasswordResetMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/message/verifyemail/{language}:
      get:
        summary: Get Custom Verify Email Message Text
        description: Get the custom text of the verify-email message/email that is set on the organization. The email is sent when a user adds a new non-verified email address.
        operationId: ManagementService_GetCustomVerifyEmailMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomVerifyEmailMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Verify Email Message Text to Default
        description: Removes the custom text of the email verify message/email and therefore the default settings will trigger afterward.
        operationId: ManagementService_ResetCustomVerifyEmailMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomVerifyEmailMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Verify Email Message Text
        description: 'Set the custom text of the verify-email user message/email for the organization. The email is sent when a user adds a new nonverified email address. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: ManagementService_SetCustomVerifyEmailMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomVerifyEmailMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomVerifyEmailMessageTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/verifyemail/{language}:
      get:
        summary: Get Default Verify Email Message Text
        description: Get the default text of the verify-email message/email that is set on the instance or as translation files in ZITADEL itself. The email is sent when a user adds a new non-verified email address.
        operationId: ManagementService_GetDefaultVerifyEmailMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultVerifyEmailMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/message/verifyphone/{language}:
      get:
        summary: Get Custom Verify Phone Message Text
        description: Get the custom text of the verify-phone message that is set on the organization. The message is sent when a user adds a new non-verified phone number and a notification provider is configured.
        operationId: ManagementService_GetCustomVerifyPhoneMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomVerifyPhoneMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Verify Phone Message Text to Default
        description: Removes the custom text of the verify-phone message from the organization and therefore the default texts will trigger for the users afterward.
        operationId: ManagementService_ResetCustomVerifyPhoneMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomVerifyPhoneMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Custom Verify Phone Reset Message Text
        description: 'Set the custom text of the verify-phone message for the organization. The message is sent when a user adds a new non-verified phone number and a notification provider is configured. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: ManagementService_SetCustomVerifyPhoneMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomVerifyPhoneMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomVerifyPhoneMessageTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/verifyphone/{language}:
      get:
        summary: Get Default Verify Phone Message Text
        description: Get the default text of the verify-phone message that is set on the instance or as translation files in ZITADEL itself. The message is sent when a user adds a new non-verified phone number and a notification provider is configured.
        operationId: ManagementService_GetDefaultVerifyPhoneMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultVerifyPhoneMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/message/verifysmsotp/{language}:
      get:
        summary: Get Custom Verify SMS OTP Message Text
        description: Get the custom text of the verify SMS OTP message that is set on the organization. The message is sent when an SMS One-time password should be verified and a notification provider is configured.
        operationId: ManagementService_GetCustomVerifySMSOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomVerifySMSOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Verify SMS OTP Message Text to Default
        description: Removes the custom text of the verify SMS OTP message from the organization and therefore the default texts will trigger for the users afterward.
        operationId: ManagementService_ResetCustomVerifySMSOTPMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomVerifySMSOTPMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Custom Verify SMS OTP Reset Message Text
        description: 'Set the custom text of the verify SMS OTP message for the organization. The message is sent when an SMS One-time password should be verified and a notification provider is configured. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: ManagementService_SetCustomVerifySMSOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomVerifySMSOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomVerifySMSOTPMessageTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/verifysmsotp/{language}:
      get:
        summary: Get Default Verify SMS OTP Message Text
        description: Get the default text of the verify SMS OTP message that is set on the instance or as translation files in ZITADEL itself. The message is sent when an SMS One-time password should be verified and a notification provider is configured.
        operationId: ManagementService_GetDefaultVerifySMSOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultVerifySMSOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/message/verifyemailotp/{language}:
      get:
        summary: Get Custom Verify Email OTP Message Text
        description: Get the custom text of the verify Email OTP message that is set on the organization. The message is sent when an Email One-time password should be verified and a notification provider is configured.
        operationId: ManagementService_GetCustomVerifyEmailOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomVerifyEmailOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Verify Email OTP Message Text to Default
        description: Removes the custom text of the verify Email OTP message from the organization and therefore the default texts will trigger for the users afterward.
        operationId: ManagementService_ResetCustomVerifyEmailOTPMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomVerifyEmailOTPMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Custom Verify Email OTP Reset Message Text
        description: 'Set the custom text of the verify Email OTP message for the organization. The message is sent when an Email One-time password should be verified and a notification provider is configured. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: ManagementService_SetCustomVerifyEmailOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomVerifyEmailOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomVerifyEmailOTPMessageTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/verifyemailotp/{language}:
      get:
        summary: Get Default Verify Email OTP Message Text
        description: Get the default text of the verify Email OTP message that is set on the instance or as translation files in ZITADEL itself. The message is sent when an Email One-time password should be verified and a notification provider is configured.
        operationId: ManagementService_GetDefaultVerifyEmailOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultVerifyEmailOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/message/domainclaimed/{language}:
      get:
        summary: Get Custom Domain Claimed Message Text
        description: Get the custom text of the domain claimed message/email that is configured on the organization. The message is sent when an organization claims a domain and a user of this domain exists in another organization.
        operationId: ManagementService_GetCustomDomainClaimedMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomDomainClaimedMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Domain Claimed Message Text to Default
        description: Removes the custom text of the domain claimed message that is configured on the organization and triggers the text from the instance or translation files in ZITADEL.
        operationId: ManagementService_ResetCustomDomainClaimedMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomDomainClaimedMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Custom Domain Claimed Message Text
        description: 'Set the custom text of the domain claimed message/email for the organization. The message/email is sent when an organization claims a domain and a user of this domain exists in another organization. The Following Variables can be used: {{.Domain}} {{.TempUsername}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: ManagementService_SetCustomDomainClaimedMessageCustomText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomDomainClaimedMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomDomainClaimedMessageCustomTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/domainclaimed/{language}:
      get:
        summary: Get Default Domain Claimed Message Text
        description: Get the default text of the domain claimed message/email that is set on the instance or as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an organization claims a domain and a user of this domain exists in another organization.
        operationId: ManagementService_GetDefaultDomainClaimedMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultDomainClaimedMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/message/passwordless_registration/{language}:
      get:
        summary: Get Custom Passwordless Registration Message Text
        description: Get the custom text of the passwordless/passkey registration message/email that is configured on the organization. The message is sent when a user requests passwordless/passkey registration as email, to be able to configure on another device.
        operationId: ManagementService_GetCustomPasswordlessRegistrationMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomPasswordlessRegistrationMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Passwordless Registration Message Text to Default
        description: Removes the custom text of the passwordless/passkey registration from the organization and therefore the default configuration from the instance or translation files will be triggered for the users.
        operationId: ManagementService_ResetCustomPasswordlessRegistrationMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Passwordless Registration Message Text
        description: 'Set the custom text of the passwordless/passkey registration message/email for the organization. The message/email is sent when a user requests passwordless/passkey registration as email, to be able to configure on another device.  The Following Variables can be used: {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: ManagementService_SetCustomPasswordlessRegistrationMessageCustomText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomPasswordlessRegistrationMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomPasswordlessRegistrationMessageCustomTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/passwordless_registration/{language}:
      get:
        summary: Get Default Passwordless Registration Message Text
        description: Get the default text of the domain claimed message/email that is configured on the instance or as translation files in ZITADEL. The message is sent when a user requests passwordless/passkey registration as email, to be able to configure on another device.
        operationId: ManagementService_GetDefaultPasswordlessRegistrationMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultPasswordlessRegistrationMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/message/password_change/{language}:
      get:
        summary: Get Custom Password Change Message Text
        description: Get the custom text of the password-changed message/email that is configured on the organization. The message is sent when the password of a user has been changed.
        operationId: ManagementService_GetCustomPasswordChangeMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomPasswordChangeMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Password Changed Message Text to Default
        description: Removes the custom text of the password-changed message from the organization and therefore the default texts from the instance or translation files will be triggered for the users.
        operationId: ManagementService_ResetCustomPasswordChangeMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomPasswordChangeMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Custom Password Changed Message Text
        description: 'Set the custom text of the password-changed message/email for the organization. The message/email is sent when the password of a user has been changed.  The Following Variables can be used: {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: ManagementService_SetCustomPasswordChangeMessageCustomText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomPasswordChangeMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomPasswordChangeMessageCustomTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/password_change/{language}:
      get:
        summary: Get Default Password Change Message Text
        description: Get the default text of the password-changed message/email that is configured on the instance or as translation files in ZITADEL itself. The message is sent when the password of a user has been changed.
        operationId: ManagementService_GetDefaultPasswordChangeMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultPasswordChangeMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/message/invite_user/{language}:
      get:
        summary: Get Custom Invite User Message Text
        description: Get the custom text of the password-changed message/email that is configured on the organization. The message is sent when an invite code email is requested.
        operationId: ManagementService_GetCustomInviteUserMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomInviteUserMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Invite User Message Text to Default
        description: Removes the custom text of the invite user message from the organization and therefore the default texts from the instance or translation files will be triggered for the users.
        operationId: ManagementService_ResetCustomInviteUserMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomInviteUserMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Custom Invite User Message Text
        description: 'Set the custom text of the invite user message/email for the organization. The message is sent when an invite code email is requested. The Following Variables can be used: {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}} {{.ApplicationName}}'
        operationId: ManagementService_SetCustomInviteUserMessageCustomText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetCustomInviteUserMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetCustomInviteUserMessageCustomTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/default/message/invite_user/{language}:
      get:
        summary: Get Default Invite User Message Text
        description: Get the default text of the invite user message/email that is configured on the instance or as translation files in ZITADEL itself. The message is sent when an invite code email is requested.
        operationId: ManagementService_GetDefaultInviteUserMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultInviteUserMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Message Texts
    /text/login/{language}:
      get:
        summary: Get Custom Login Text
        description: Get the custom texts for the login and register UI of ZITADEL, which are configured on the organization. The text from the organization will trigger as soon as the organization is identified (organization scope or user).
        operationId: ManagementService_GetCustomLoginTexts
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetCustomLoginTextsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Login Texts
      delete:
        summary: Reset Custom Login Text to Default
        description: Removes the custom texts for the login and register UI from the organization and therefore the configuration of the instance or the translation files in ZITADEL itself will trigger.
        operationId: ManagementService_ResetCustomLoginTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1ResetCustomLoginTextsToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Login Texts
      put:
        summary: Set Default Login Text
        description: Set the custom texts for the login and register UI of ZITADEL for the organization.
        operationId: ManagementService_SetCustomLoginText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1SetCustomLoginTextsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceSetCustomLoginTextBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Login Texts
    /text/default/login/{language}:
      get:
        summary: Get Default Login Text
        description: Get the default texts for the login and register UI of ZITADEL, which are configured on the instance or as translation files in ZITADEL itself. The text will be shown to the users of all organizations, that do not have a custom text configured. Or if the organization context is not given.
        operationId: ManagementService_GetDefaultLoginTexts
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetDefaultLoginTextsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Login Texts
    /idps/{id}:
      get:
        summary: 'Deprecated: Get Identity Provider (IDP) by ID'
        description: Returns an identity provider (social/enterprise login) by its ID e.g Google, AzureAD, etc that is configured on the organization.
        operationId: ManagementService_GetOrgIDPByID
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetOrgIDPByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
        deprecated: true
    /idps/_search:
      post:
        summary: 'Deprecated: Search Identity Providers (IDP)'
        description: Returns a list of identity providers (social/enterprise login) configured on an instance level. e.g Google, AzureAD, etc.
        operationId: AdminService_ListIDPs
        responses:
          '200':
            description: idps found
            schema:
              $ref: '#/definitions/v1ListIDPsResponse'
          '400':
            description: invalid query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListIDPsRequest'
        tags:
          - Identity Providers
        deprecated: true
    /idps/oidc:
      post:
        summary: 'Deprecated: Add OIDC Identity Provider (IDP)'
        description: Create a new identity provider configuration to enable your users to log in with social/enterprise login. The provider has to be OIDC compliant.
        operationId: AdminService_AddOIDCIDP
        responses:
          '200':
            description: idp created
            schema:
              $ref: '#/definitions/v1AddOIDCIDPResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddOIDCIDPRequest'
        tags:
          - Identity Providers
        deprecated: true
    /idps/jwt:
      post:
        summary: 'Deprecated: Add JWT Identity Provider (IDP)'
        description: Create a new identity provider configuration to enable your users to log in with social/enterprise login. JSON Web Token Identity Provider (JWT IDP) gives you the possibility to use an (existing) JWT as a federated identity. You have to provide an endpoint where ZITADEL can get the existing JWT token.
        operationId: AdminService_AddJWTIDP
        responses:
          '200':
            description: idp created
            schema:
              $ref: '#/definitions/v1AddJWTIDPResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddJWTIDPRequest'
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId}/_deactivate:
      post:
        summary: 'Deprecated: Deactivate Identity Provider (IDP)'
        description: Sets the state of the provider to inactive. It can only be called for the provider with the state active. Users will not be able to log in with the given provider afterward. It might cause troubles if it is the only authentication method of the user.
        operationId: ManagementService_DeactivateOrgIDP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateOrgIDPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceDeactivateOrgIDPBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId}/_reactivate:
      post:
        summary: Reactivate Identity Provider (IDP)
        description: 'Deprecated: Sets the state of the provider to active. It can only be called for providers with the state inactive. Users will not be able to log in again with the given provider.'
        operationId: ManagementService_ReactivateOrgIDP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ReactivateOrgIDPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceReactivateOrgIDPBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId}:
      delete:
        summary: Remove Identity Provider (IDP)
        description: Removes the identity provider permanently. All links to the given IDP on users will be deleted as well. They will not be able to log in with the provider afterward. If it is their only authentication possibility it might cause problems.
        operationId: ManagementService_RemoveOrgIDP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveOrgIDPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
        deprecated: true
      put:
        summary: 'Deprecated: Update Identity Provider (IDP)'
        description: Update an existing IDP. All fields are updated. If you do not send a value in a field, it will be empty afterward.
        operationId: ManagementService_UpdateOrgIDP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateOrgIDPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateOrgIDPBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId}/oidc_config:
      put:
        summary: 'Deprecated: Update OIDC Identity Provider (IDP)'
        description: Update the OIDC-specific configuration of an identity provider. All fields will be updated. If a field has no value it will be empty afterward.
        operationId: ManagementService_UpdateOrgIDPOIDCConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateOrgIDPOIDCConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateOrgIDPOIDCConfigBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId}/jwt_config:
      put:
        summary: 'Deprecated: Update JWT Identity Provider (IDP)'
        description: Update the JWT-specific configuration of an identity provider. All fields will be updated. If a field has no value it will be empty afterward.
        operationId: ManagementService_UpdateOrgIDPJWTConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateOrgIDPJWTConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateOrgIDPJWTConfigBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
        deprecated: true
    /idps/templates/_search:
      post:
        summary: List Identity Providers
        description: Returns a list of identity providers (social/enterprise login) configured on an instance level. e.g Google, AzureAD, etc.
        operationId: AdminService_ListProviders
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ListProvidersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1ListProvidersRequest'
        tags:
          - Identity Providers
    /idps/templates/{id}:
      get:
        summary: Get Identity Provider By ID
        operationId: ManagementService_GetProviderByID
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1GetProviderByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
      delete:
        summary: Delete Identity Provider
        operationId: ManagementService_DeleteProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1DeleteProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/oauth:
      post:
        summary: Add Generic OAuth Identity Provider
        operationId: AdminService_AddGenericOAuthProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddGenericOAuthProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddGenericOAuthProviderRequest'
        tags:
          - Identity Providers
    /idps/oauth/{id}:
      put:
        summary: Update Generic OAuth Identity Provider
        operationId: ManagementService_UpdateGenericOAuthProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateGenericOAuthProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateGenericOAuthProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/generic_oidc:
      post:
        summary: Add Generic OIDC Identity Provider
        operationId: AdminService_AddGenericOIDCProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddGenericOIDCProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddGenericOIDCProviderRequest'
        tags:
          - Identity Providers
    /idps/generic_oidc/{id}:
      put:
        summary: Update Generic OIDC Identity Provider
        operationId: ManagementService_UpdateGenericOIDCProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateGenericOIDCProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateGenericOIDCProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/generic_oidc/{id}/_migrate:
      post:
        summary: Migrate Generic OIDC Identity Provider
        operationId: ManagementService_MigrateGenericOIDCProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1MigrateGenericOIDCProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceMigrateGenericOIDCProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/generic_jwt:
      post:
        summary: Add JWT Identity Provider
        operationId: AdminService_AddJWTProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddJWTProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddJWTProviderRequest'
        tags:
          - Identity Providers
    /idps/generic_jwt/{id}:
      put:
        summary: Update JWT Identity Provider
        operationId: ManagementService_UpdateJWTProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateJWTProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateJWTProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/azure:
      post:
        summary: Add AzureAD Identity Provider
        operationId: AdminService_AddAzureADProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddAzureADProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddAzureADProviderRequest'
        tags:
          - Identity Providers
    /idps/azure/{id}:
      put:
        summary: Update Azure AD Identity Provider
        operationId: ManagementService_UpdateAzureADProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateAzureADProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateAzureADProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/github:
      post:
        summary: Add GitHub Identity Provider
        operationId: AdminService_AddGitHubProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddGitHubProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddGitHubProviderRequest'
        tags:
          - Identity Providers
    /idps/github/{id}:
      put:
        summary: Update GitHub Identity Provider
        operationId: ManagementService_UpdateGitHubProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateGitHubProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateGitHubProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/github_es:
      post:
        summary: Add GitHub Enterprise Identity Provider
        operationId: AdminService_AddGitHubEnterpriseServerProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddGitHubEnterpriseServerProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddGitHubEnterpriseServerProviderRequest'
        tags:
          - Identity Providers
    /idps/github_es/{id}:
      put:
        summary: Update GitHub Enterprise Identity Provider
        operationId: ManagementService_UpdateGitHubEnterpriseServerProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateGitHubEnterpriseServerProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateGitHubEnterpriseServerProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/gitlab:
      post:
        summary: Add GitLab Identity Provider
        operationId: AdminService_AddGitLabProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddGitLabProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddGitLabProviderRequest'
        tags:
          - Identity Providers
    /idps/gitlab/{id}:
      post:
        summary: Update GitLab Identity Provider
        operationId: AdminService_UpdateGitLabProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateGitLabProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateGitLabProviderBody'
        tags:
          - Identity Providers
      put:
        summary: Update GitLab Identity Provider
        operationId: ManagementService_UpdateGitLabProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateGitLabProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateGitLabProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/gitlab_self_hosted:
      post:
        summary: Add GitLab Selfhost Identity Provider
        operationId: AdminService_AddGitLabSelfHostedProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddGitLabSelfHostedProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddGitLabSelfHostedProviderRequest'
        tags:
          - Identity Providers
    /idps/gitlab_self_hosted/{id}:
      post:
        summary: Update GitLab Selfhost Identity Provider
        operationId: AdminService_UpdateGitLabSelfHostedProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateGitLabSelfHostedProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateGitLabSelfHostedProviderBody'
        tags:
          - Identity Providers
      put:
        summary: Update GitLab Selfhosted Identity Provider
        operationId: ManagementService_UpdateGitLabSelfHostedProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateGitLabSelfHostedProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateGitLabSelfHostedProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/google:
      post:
        summary: Add Google Identity Provider
        operationId: AdminService_AddGoogleProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddGoogleProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddGoogleProviderRequest'
        tags:
          - Identity Providers
    /idps/google/{id}:
      put:
        summary: Update Google Identity Provider
        operationId: ManagementService_UpdateGoogleProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateGoogleProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateGoogleProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/ldap:
      post:
        summary: Add LDAP Identity Provider
        operationId: AdminService_AddLDAPProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddLDAPProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddLDAPProviderRequest'
        tags:
          - Identity Providers
    /idps/ldap/{id}:
      put:
        summary: Update LDAP Identity Provider
        operationId: ManagementService_UpdateLDAPProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateLDAPProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateLDAPProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/apple:
      post:
        summary: Add Apple Identity Provider
        operationId: AdminService_AddAppleProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddAppleProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddAppleProviderRequest'
        tags:
          - Identity Providers
    /idps/apple/{id}:
      put:
        summary: Update Apple Identity Provider
        operationId: ManagementService_UpdateAppleProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateAppleProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateAppleProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/saml:
      post:
        summary: Add SAML Identity Provider
        operationId: AdminService_AddSAMLProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1AddSAMLProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1AddSAMLProviderRequest'
        tags:
          - Identity Providers
    /idps/saml/{id}:
      put:
        summary: Update SAML Identity Provider
        operationId: ManagementService_UpdateSAMLProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1UpdateSAMLProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceUpdateSAMLProviderBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /idps/saml/{id}/_generate_certificate:
      post:
        summary: Regenerate SAML Identity Provider Certificate
        operationId: ManagementService_RegenerateSAMLProviderCertificate
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelmanagementv1RegenerateSAMLProviderCertificateResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ManagementServiceRegenerateSAMLProviderCertificateBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get/set a result of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Identity Providers
    /actions/_search:
      post:
        summary: Search Actions
        description: Returns a list of actions matching the query. Actions are custom code written in javascript, that can be run at a specified point/flow/trigger in ZITADEL.
        operationId: ManagementService_ListActions
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListActionsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListActionsRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /actions/{id}:
      get:
        summary: Get Action By ID
        description: Returns an action by id. Actions are custom code written in javascript, that can be run at a specified point/flow/trigger in ZITADEL.
        operationId: ManagementService_GetAction
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetActionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
      delete:
        summary: Delete Action
        description: Remove an existing action. Actions are custom code written in javascript, that can be run at a specified point/flow/trigger in ZITADEL.
        operationId: ManagementService_DeleteAction
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeleteActionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceDeleteActionBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
      put:
        summary: Update Action
        description: Update an existing ZITADEL action. Actions are custom code written in javascript, that can be run at a specified point/flow/trigger in ZITADEL.
        operationId: ManagementService_UpdateAction
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateActionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceUpdateActionBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /actions:
      post:
        summary: Create Action
        description: Create a new ZITADEL action. Actions are custom code written in javascript, that can be run at a specified point/flow/trigger in ZITADEL.
        operationId: ManagementService_CreateAction
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1CreateActionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1CreateActionRequest'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /actions/{id}/_deactivate:
      post:
        summary: Deactivate Action
        description: Deactivate an existing action. The action will not be executed if configured in a flow. Actions are custom code written in javascript, that can be run at a specified point/flow/trigger in ZITADEL.
        operationId: ManagementService_DeactivateAction
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateActionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceDeactivateActionBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /actions/{id}/_reactivate:
      post:
        summary: Reactivate Action
        description: Reactivate an existing action that is deactivated. The action will be executed again if configured in a flow. Actions are custom code written in javascript, that can be run at a specified point/flow/trigger in ZITADEL.
        operationId: ManagementService_ReactivateAction
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ReactivateActionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceReactivateActionBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /flows/types/_search:
      post:
        summary: Search Flow Types
        operationId: ManagementService_ListFlowTypes
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListFlowTypesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /flows/{type}/triggers/_search:
      post:
        summary: List Flow Trigger Types
        operationId: ManagementService_ListFlowTriggerTypes
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListFlowTriggerTypesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: type
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /flows/{type}:
      get:
        summary: Get Flow
        description: Returns a flow. Flows are the links between an action and a specific point during a user interaction with ZITADEL.
        operationId: ManagementService_GetFlow
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetFlowResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: type
            description: id of the flow
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /flows/{type}/_clear:
      post:
        summary: Clear Flow
        operationId: ManagementService_ClearFlow
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ClearFlowResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: type
            description: id of the flow
            in: path
            required: true
            type: string
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /flows/{flowType}/trigger/{triggerType}:
      post:
        summary: Set Trigger Actions
        operationId: ManagementService_SetTriggerActions
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetTriggerActionsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: flowType
            description: |-
              id of the flow type.
              Following flows are currently allowed:
              - External Authentication: FLOW_TYPE_EXTERNAL_AUTHENTICATION or 1
              - Internal Authentication: 3
              - Complement Token: 2
              - Complement SAML Response: 4
            in: path
            required: true
            type: string
          - name: triggerType
            description: |-
              id of the trigger type.
              Following triggers are currently allowed:
              - External Authentication:
                - Post Authentication: TRIGGER_TYPE_POST_AUTHENTICATION or 1
                - Pre Creation: TRIGGER_TYPE_PRE_CREATION or 2
                - Post Creation: TRIGGER_TYPE_POST_CREATION or 3 
              - Internal Authentication:
                - Post Authentication: TRIGGER_TYPE_POST_AUTHENTICATION or 1
                - Pre Creation: TRIGGER_TYPE_PRE_CREATION or 2
                - Post Creation: TRIGGER_TYPE_POST_CREATION or 3 
              - Complement Token:
                - Pre Userinfo Creation: 4
                - Pre Access Token Creation: 5
              - Complement SAML Response:
                - Pre SAML Response Creation: 6
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ManagementServiceSetTriggerActionsBody'
          - name: x-zitadel-orgid
            description: The default is always the organization of the requesting user. If you like to get users of another organization include the header. Make sure the user has permission to access the requested data.
            in: header
            required: false
            type: string
        tags:
          - Actions
    /languages/allowed:
      get:
        summary: Allowed Languages
        description: If the languages are restricted, only those are returned. Else, all supported languages are returned.
        operationId: AdminService_GetAllowedLanguages
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetAllowedLanguagesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Restrictions
    /languages/default/{language}:
      put:
        summary: Set Default Languages
        description: Set the language that is used as a fallback/default if the user has configured something that is not provided by ZITADEL.
        operationId: AdminService_SetDefaultLanguage
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultLanguageResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
        tags:
          - General
    /languages/default:
      get:
        summary: Get Default Languages
        description: Returns the language that is used as a fallback/default if the user has configured something that is not provided by ZITADEL.
        operationId: AdminService_GetDefaultLanguage
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetDefaultLanguageResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - General
    /instances/me:
      get:
        summary: Get My Instance
        description: Returns the details about the current instance such as the name, version, domains, etc.
        operationId: AdminService_GetMyInstance
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyInstanceResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Instance
    /domains/_search:
      post:
        summary: List Instance Domains
        description: Returns a list of domains that are configured for this ZITADEL instance. These domains are the URLs where ZITADEL is running.
        operationId: AdminService_ListInstanceDomains
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListInstanceDomainsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: query.offset
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. The default is set to 1000 in https://github.com/zitadel/zitadel/blob/new-eventstore/cmd/zitadel/startup.yaml. If the limit exceeds the maximum configured ZITADEL will throw an error. If no limit is present the default is taken.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.asc
            description: default is descending
            in: query
            required: false
            type: boolean
          - name: sortingColumn
            description: the field the result is sorted
            in: query
            required: false
            type: string
            enum:
              - DOMAIN_FIELD_NAME_UNSPECIFIED
              - DOMAIN_FIELD_NAME_DOMAIN
              - DOMAIN_FIELD_NAME_PRIMARY
              - DOMAIN_FIELD_NAME_GENERATED
              - DOMAIN_FIELD_NAME_CREATION_DATE
            default: DOMAIN_FIELD_NAME_UNSPECIFIED
        tags:
          - Instance
    /trusted_domains/_search:
      post:
        summary: List Instance Trusted Domains
        description: Returns a list of domains that are configured for this ZITADEL instance. These domains are trusted to be used as public hosts.
        operationId: AdminService_ListInstanceTrustedDomains
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListInstanceTrustedDomainsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: query.offset
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. The default is set to 1000 in https://github.com/zitadel/zitadel/blob/new-eventstore/cmd/zitadel/startup.yaml. If the limit exceeds the maximum configured ZITADEL will throw an error. If no limit is present the default is taken.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.asc
            description: default is descending
            in: query
            required: false
            type: boolean
          - name: sortingColumn
            description: the field the result is sorted
            in: query
            required: false
            type: string
            enum:
              - DOMAIN_FIELD_NAME_UNSPECIFIED
              - DOMAIN_FIELD_NAME_DOMAIN
              - DOMAIN_FIELD_NAME_PRIMARY
              - DOMAIN_FIELD_NAME_GENERATED
              - DOMAIN_FIELD_NAME_CREATION_DATE
            default: DOMAIN_FIELD_NAME_UNSPECIFIED
        tags:
          - Instance
    /trusted_domains:
      post:
        summary: Add an Instance Trusted Domain
        description: Returns a list of domains that are configured for this ZITADEL instance. These domains are trusted to be used as public hosts.
        operationId: AdminService_AddInstanceTrustedDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddInstanceTrustedDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddInstanceTrustedDomainRequest'
        tags:
          - Instance
    /trusted_domains/{domain}:
      delete:
        summary: Remove an Instance Trusted Domain
        description: Returns a list of domains that are configured for this ZITADEL instance. These domains are trusted to be used as public hosts.
        operationId: AdminService_RemoveInstanceTrustedDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveInstanceTrustedDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: domain
            in: path
            required: true
            type: string
        tags:
          - Instance
    /secretgenerators/_search:
      post:
        summary: List Secret Generators
        description: Lists all the configured secret generators. The generators define how a secret should look when generated in ZITADEL. E.g Email verification code, phone verification code, etc.
        operationId: AdminService_ListSecretGenerators
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListSecretGeneratorsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListSecretGeneratorsRequest'
        tags:
          - Secrets
    /secretgenerators/{generatorType}:
      get:
        summary: Get Secret Generator
        description: Get a specific secret generator by its type (e.g PasswordResetCode). A generator defines how a secret should look when generating in ZITADEL.
        operationId: AdminService_GetSecretGenerator
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetSecretGeneratorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: generatorType
            in: path
            required: true
            type: string
            enum:
              - SECRET_GENERATOR_TYPE_UNSPECIFIED
              - SECRET_GENERATOR_TYPE_INIT_CODE
              - SECRET_GENERATOR_TYPE_VERIFY_EMAIL_CODE
              - SECRET_GENERATOR_TYPE_VERIFY_PHONE_CODE
              - SECRET_GENERATOR_TYPE_PASSWORD_RESET_CODE
              - SECRET_GENERATOR_TYPE_PASSWORDLESS_INIT_CODE
              - SECRET_GENERATOR_TYPE_APP_SECRET
              - SECRET_GENERATOR_TYPE_OTP_SMS
              - SECRET_GENERATOR_TYPE_OTP_EMAIL
        tags:
          - Secrets
      put:
        summary: Update Secret Generator
        description: Change a specific secret generator configuration by its type (e.g PasswordResetCode). A generator defines how a secret should look when generating in ZITADEL.
        operationId: AdminService_UpdateSecretGenerator
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateSecretGeneratorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: generatorType
            in: path
            required: true
            type: string
            enum:
              - SECRET_GENERATOR_TYPE_UNSPECIFIED
              - SECRET_GENERATOR_TYPE_INIT_CODE
              - SECRET_GENERATOR_TYPE_VERIFY_EMAIL_CODE
              - SECRET_GENERATOR_TYPE_VERIFY_PHONE_CODE
              - SECRET_GENERATOR_TYPE_PASSWORD_RESET_CODE
              - SECRET_GENERATOR_TYPE_PASSWORDLESS_INIT_CODE
              - SECRET_GENERATOR_TYPE_APP_SECRET
              - SECRET_GENERATOR_TYPE_OTP_SMS
              - SECRET_GENERATOR_TYPE_OTP_EMAIL
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateSecretGeneratorBody'
        tags:
          - Secrets
    /smtp:
      get:
        summary: 'Deprecated: Get active SMTP Configuration'
        description: |-
          Returns the active SMTP configuration from the system. This is used to send E-Mails to the users.

          Deprecated: please move to the new endpoint GetEmailProvider.
        operationId: AdminService_GetSMTPConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetSMTPConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - SMTP Configs
        deprecated: true
      post:
        summary: 'Deprecated: Add SMTP Configuration'
        description: |-
          Add a new SMTP configuration if nothing is set yet.

          Deprecated: please move to the new endpoint AddEmailProviderSMTP.
        operationId: AdminService_AddSMTPConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddSMTPConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddSMTPConfigRequest'
        tags:
          - SMTP Configs
        deprecated: true
    /smtp/{id}:
      get:
        summary: 'Deprecated: Get SMTP provider configuration by its id'
        description: |-
          Get a specific SMTP provider configuration by its ID.

          Deprecated: please move to the new endpoint GetEmailProviderById.
        operationId: AdminService_GetSMTPConfigById
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetSMTPConfigByIdResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
        tags:
          - SMTP Configs
        deprecated: true
      delete:
        summary: 'Deprecated: Remove SMTP Configuration'
        description: |-
          Remove the SMTP configuration, be aware that the users will not get an E-Mail if no SMTP is set.

          Deprecated: please move to the new endpoint RemoveEmailProvider.
        operationId: AdminService_RemoveSMTPConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveSMTPConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
        tags:
          - SMTP Configs
        deprecated: true
      put:
        summary: 'Deprecated: Update SMTP Configuration'
        description: |-
          Update the SMTP configuration, be aware that this will be activated as soon as it is saved. So the users will get notifications from the newly configured SMTP.

          Deprecated: please move to the new endpoint UpdateEmailProviderSMTP.
        operationId: AdminService_UpdateSMTPConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateSMTPConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateSMTPConfigBody'
        tags:
          - SMTP Configs
        deprecated: true
    /smtp/{id}/password:
      put:
        summary: 'Deprecated: Update SMTP Password'
        description: |-
          Update the SMTP password that is used for the host, be aware that this will be activated as soon as it is saved. So the users will get notifications from the newly configured SMTP.

          Deprecated: please move to the new endpoint UpdateEmailProviderSMTPPassword.
        operationId: AdminService_UpdateSMTPConfigPassword
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateSMTPConfigPasswordResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateSMTPConfigPasswordBody'
        tags:
          - SMTP Configs
        deprecated: true
    /smtp/{id}/_activate:
      post:
        summary: Activate SMTP Provider
        description: Activate an SMTP provider.
        operationId: AdminService_ActivateSMTPConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ActivateSMTPConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceActivateSMTPConfigBody'
        tags:
          - SMTP Configs
        deprecated: true
    /smtp/{id}/_deactivate:
      post:
        summary: 'Deprecated: Deactivate SMTP Provider'
        description: |-
          Deactivate an SMTP provider. After deactivating the provider, the users will not be able to receive SMTP notifications from that provider anymore.

          Deprecated: please move to the new endpoint DeactivateEmailProvider.
        operationId: AdminService_DeactivateSMTPConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateSMTPConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceDeactivateSMTPConfigBody'
        tags:
          - SMTP Configs
        deprecated: true
    /smtp/{id}/_test:
      post:
        summary: 'Deprecated: Test SMTP Provider'
        description: |-
          Test an SMTP provider identified by its ID. After testing the provider, the users will receive information about the test results.

          Deprecated: please move to the new endpoint TestEmailProviderSMTPById.
        operationId: AdminService_TestSMTPConfigById
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1TestSMTPConfigByIdResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceTestSMTPConfigByIdBody'
        tags:
          - SMTP Configs
        deprecated: true
    /smtp/_test:
      post:
        summary: 'Deprecated: Test SMTP Provider'
        description: |-
          Test an SMTP provider. After testing the provider, the users will receive information about the test results.

          Deprecated: please move to the new endpoint TestEmailProviderSMTP.
        operationId: AdminService_TestSMTPConfig
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1TestSMTPConfigResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1TestSMTPConfigRequest'
        tags:
          - SMTP Configs
        deprecated: true
    /smtp/_search:
      post:
        summary: 'Deprecated: List SMTP Configs'
        description: |-
          Returns a list of SMTP configurations.

          Deprecated: please move to the new endpoint ListEmailProviders.
        operationId: AdminService_ListSMTPConfigs
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListSMTPConfigsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListSMTPConfigsRequest'
        tags:
          - SMTP Configs
        deprecated: true
    /email/_search:
      post:
        summary: List Email providers
        description: Returns a list of Email providers.
        operationId: AdminService_ListEmailProviders
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListEmailProvidersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListEmailProvidersRequest'
        tags:
          - Email Provider
    /email:
      get:
        summary: Get active Email provider
        description: Returns the active Email provider from the system. This is used to send E-Mails to the users.
        operationId: AdminService_GetEmailProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetEmailProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Email Provider
    /email/{id}:
      get:
        summary: Get Email provider by its id
        description: Get a specific Email provider by its ID.
        operationId: AdminService_GetEmailProviderById
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetEmailProviderByIdResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
        tags:
          - Email Provider
      delete:
        summary: Remove Email provider
        description: Remove the Email provider, be aware that the users will not get an E-Mail if no provider is set.
        operationId: AdminService_RemoveEmailProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveEmailProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
        tags:
          - Email Provider
    /email/smtp:
      post:
        summary: Add SMTP Email provider
        description: Add a new SMTP Email provider if nothing is set yet.
        operationId: AdminService_AddEmailProviderSMTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddEmailProviderSMTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddEmailProviderSMTPRequest'
        tags:
          - Email Provider
    /email/smtp/{id}:
      put:
        summary: Update SMTP Email provider
        description: Update the SMTP Email provider, be aware that this will be activated as soon as it is saved. So the users will get notifications from the newly configured SMTP.
        operationId: AdminService_UpdateEmailProviderSMTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateEmailProviderSMTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateEmailProviderSMTPBody'
        tags:
          - Email Provider
    /email/http:
      post:
        summary: Add HTTP Email provider
        description: Add a new HTTP Email provider if nothing is set yet.
        operationId: AdminService_AddEmailProviderHTTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddEmailProviderHTTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddEmailProviderHTTPRequest'
        tags:
          - Email Provider
    /email/http/{id}:
      put:
        summary: Update HTTP Email provider
        description: Update the HTTP Email provider, be aware that this will be activated as soon as it is saved. So the users will get notifications from the newly configured HTTP.
        operationId: AdminService_UpdateEmailProviderHTTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateEmailProviderHTTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateEmailProviderHTTPBody'
        tags:
          - Email Provider
    /email/smtp/{id}/password:
      put:
        summary: Update SMTP Password
        description: Update the SMTP password that is used for the host, be aware that this will be activated as soon as it is saved. So the users will get notifications from the newly configured SMTP.
        operationId: AdminService_UpdateEmailProviderSMTPPassword
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateEmailProviderSMTPPasswordResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateEmailProviderSMTPPasswordBody'
        tags:
          - Email Provider
    /email/{id}/_activate:
      post:
        summary: Activate Email Provider
        description: Activate an Email provider.
        operationId: AdminService_ActivateEmailProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ActivateEmailProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceActivateEmailProviderBody'
        tags:
          - Email Provider
    /email/{id}/_deactivate:
      post:
        summary: Deactivate Email Provider
        description: Deactivate an Email provider. After deactivating the provider, the users will not be able to receive Email notifications from that provider anymore.
        operationId: AdminService_DeactivateEmailProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateEmailProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceDeactivateEmailProviderBody'
        tags:
          - Email Provider
    /email/smtp/{id}/_test:
      post:
        summary: Test SMTP Email Provider
        description: Test an SMTP Email provider identified by its ID. After testing the provider, the users will receive information about the test results.
        operationId: AdminService_TestEmailProviderSMTPById
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1TestEmailProviderSMTPByIdResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceTestEmailProviderSMTPByIdBody'
        tags:
          - Email Provider
    /email/smtp/_test:
      post:
        summary: Test SMTP Email Provider
        description: Test an SMTP Email provider. After testing the provider, the users will receive information about the test results.
        operationId: AdminService_TestEmailProviderSMTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1TestEmailProviderSMTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1TestEmailProviderSMTPRequest'
        tags:
          - Email Provider
    /sms/_search:
      post:
        summary: List SMS Providers
        description: Returns a list of configured SMS providers.
        operationId: AdminService_ListSMSProviders
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListSMSProvidersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListSMSProvidersRequest'
        tags:
          - SMS Provider
    /sms/{id}:
      get:
        summary: Get SMS Provider
        description: Get a specific SMS provider by its ID.
        operationId: AdminService_GetSMSProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetSMSProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
        tags:
          - SMS Provider
      delete:
        summary: Remove SMS Provider
        description: Delete an SMS provider. If the provider was still active the users will not receive notifications from that provider anymore.
        operationId: AdminService_RemoveSMSProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveSMSProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
        tags:
          - SMS Provider
    /sms/twilio:
      post:
        summary: Add Twilio SMS Provider
        description: Configure a new SMS provider of the type Twilio. A provider has to be activated to be able to send notifications.
        operationId: AdminService_AddSMSProviderTwilio
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddSMSProviderTwilioResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddSMSProviderTwilioRequest'
        tags:
          - SMS Provider
    /sms/twilio/{id}:
      put:
        summary: Update Twilio SMS Provider
        description: Change the configuration of an SMS provider of the type Twilio.  A provider has to be activated to be able to send notifications.
        operationId: AdminService_UpdateSMSProviderTwilio
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateSMSProviderTwilioResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateSMSProviderTwilioBody'
        tags:
          - SMS Provider
    /sms/twilio/{id}/token:
      put:
        summary: Update Twilio SMS Provider Token
        description: Change the token of the SMS provider of the type Twilio.
        operationId: AdminService_UpdateSMSProviderTwilioToken
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateSMSProviderTwilioTokenResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateSMSProviderTwilioTokenBody'
        tags:
          - SMS Provider
    /sms/http:
      post:
        summary: Add HTTP SMS Provider
        description: Configure a new SMS provider of the type HTTP. A provider has to be activated to be able to send notifications.
        operationId: AdminService_AddSMSProviderHTTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddSMSProviderHTTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddSMSProviderHTTPRequest'
        tags:
          - SMS Provider
    /sms/http/{id}:
      put:
        summary: Update HTTP SMS Provider
        description: Change the configuration of an SMS provider of the type HTTP. A provider has to be activated to be able to send notifications.
        operationId: AdminService_UpdateSMSProviderHTTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateSMSProviderHTTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateSMSProviderHTTPBody'
        tags:
          - SMS Provider
    /sms/{id}/_activate:
      post:
        summary: Activate SMS Provider
        description: Activate an SMS provider. After activating a provider, the users will be able to receive SMS notifications.
        operationId: AdminService_ActivateSMSProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ActivateSMSProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceActivateSMSProviderBody'
        tags:
          - SMS Provider
    /sms/{id}/_deactivate:
      post:
        summary: Deactivate SMS Provider
        description: Deactivate an SMS provider. After deactivating the provider, the users will not be able to receive SMS notifications from that provider anymore. If it was the last activated they will not get notifications at all
        operationId: AdminService_DeactivateSMSProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1DeactivateSMSProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceDeactivateSMSProviderBody'
        tags:
          - SMS Provider
    /settings/oidc:
      get:
        summary: Get OIDC Settings
        description: The OIDC Settings define the lifetimes of the different tokens in OIDC.
        operationId: AdminService_GetOIDCSettings
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetOIDCSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
      post:
        summary: Add OIDC Settings
        description: Create new OIDC settings. The OIDC Settings define the lifetimes of the different tokens in OIDC. These settings are used for all organizations and clients.
        operationId: AdminService_AddOIDCSettings
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddOIDCSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddOIDCSettingsRequest'
        tags:
          - Settings
      put:
        summary: Add OIDC Settings
        description: Update existing OIDC settings. The OIDC Settings define the lifetimes of the different tokens in OIDC. These settings are used for all organizations and clients.
        operationId: AdminService_UpdateOIDCSettings
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateOIDCSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateOIDCSettingsRequest'
        tags:
          - Settings
    /notification/provider/file:
      get:
        summary: Get Notification Provider Filesystem
        description: Returns a filesystem notification provider if configured. This provider is only used for testing purposes. The notifications will be written to the filesystem.
        operationId: AdminService_GetFileSystemNotificationProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetFileSystemNotificationProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Notification Providers
    /notification/provider/log:
      get:
        summary: Get Notification Provider Log
        description: Returns a log notification provider if configured. This provider is only used for testing purposes. The notifications will be written to the logs.
        operationId: AdminService_GetLogNotificationProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetLogNotificationProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Notification Providers
    /policies/security:
      get:
        summary: Get Security Settings
        description: Returns the security settings of the ZITADEL instance.
        operationId: AdminService_GetSecurityPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetSecurityPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
      put:
        summary: Set Security Settings
        description: Set the security settings of the ZITADEL instance.
        operationId: AdminService_SetSecurityPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetSecurityPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1SetSecurityPolicyRequest'
        tags:
          - Settings
    /orgs/{id}:
      get:
        summary: Get Organization By ID
        description: Returns an organization by its ID. Make sure the user has the permissions to access the organization.
        operationId: AdminService_GetOrgByID
        responses:
          '200':
            description: requested org found
            schema:
              $ref: '#/definitions/v1GetOrgByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
        tags:
          - Organizations
    /orgs/_is_unique:
      get:
        summary: Is Organization Unique
        description: Checks if an organization with the searched parameters already exists or not.
        operationId: AdminService_IsOrgUnique
        responses:
          '200':
            description: ZITADEL started
            schema:
              $ref: '#/definitions/v1IsOrgUniqueResponse'
          default:
            description: ZITADEL NOT started yet
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: name
            in: query
            required: true
            type: string
          - name: domain
            in: query
            required: true
            type: string
        tags:
          - Organizations
    /orgs/default/{orgId}:
      put:
        summary: Set Default Organization
        description: Sets the default organization of the ZITADEL instance. If no specific organization is given on the register form, a user will be registered to the default organization.
        operationId: AdminService_SetDefaultOrg
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultOrgResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
        tags:
          - Organizations
          - Settings
    /orgs/default:
      get:
        summary: Get Default Organization
        description: Get the default organization of the ZITADEL instance. If no specific organization is given on the register form, a user will be registered to the default organization.
        operationId: AdminService_GetDefaultOrg
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetDefaultOrgResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Organizations
          - Settings
    /orgs/_search:
      post:
        summary: Search Organization
        description: Returns a list of organizations that match the requesting filters. All filters are applied with an AND condition.
        operationId: AdminService_ListOrgs
        responses:
          '200':
            description: list of organizations matching the query
            schema:
              $ref: '#/definitions/v1ListOrgsResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            description: Search query for lists
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListOrgsRequest'
        tags:
          - Organizations
    /orgs/_setup:
      post:
        summary: Setup Organization
        description: Create a new organization with an administrative user. If no specific roles are sent for the first user, the user will get the role ORG_OWNER.
        operationId: AdminService_SetUpOrg
        responses:
          '200':
            description: org, user and user membership were created successfully
            schema:
              $ref: '#/definitions/v1SetUpOrgResponse'
          '400':
            description: invalid org or user
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            description: Request to set up an organization. User is required
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1SetUpOrgRequest'
        tags:
          - Organizations
    /orgs/{orgId}:
      delete:
        summary: Remove Organization
        description: Deletes the organization and all its resources (Users, Projects, Grants to and from the org). Users of this organization will not be able to log in.
        operationId: AdminService_RemoveOrg
        responses:
          '200':
            description: org removed successfully
            schema:
              $ref: '#/definitions/zitadeladminv1RemoveOrgResponse'
          '400':
            description: invalid org
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
        tags:
          - Organizations
    /idps/{id_1}:
      get:
        summary: 'Deprecated: Get Identity Provider (IDP) by ID'
        description: Returns an identity provider (social/enterprise login) by its ID e.g Google, AzureAD, etc.
        operationId: AdminService_GetIDPByID
        responses:
          '200':
            description: IDP found
            schema:
              $ref: '#/definitions/adminv1GetIDPByIDResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId_1}:
      delete:
        summary: 'Deprecated: Remove Identity Provider (IDP)'
        description: Removes the identity provider permanently. All links to the given IDP on users will be deleted as well. They will not be able to log in with the provider afterward. If it is their only authentication possibility it might cause problems.
        operationId: AdminService_RemoveIDP
        responses:
          '200':
            description: idp removed
            schema:
              $ref: '#/definitions/v1RemoveIDPResponse'
          '400':
            description: unable to remove IDP
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId_1
            in: path
            required: true
            type: string
        tags:
          - Identity Providers
        deprecated: true
      put:
        summary: 'Deprecated: Update Identity Provider (IDP)'
        description: Update an existing IDP. All fields are updated. If you do not send a value in a field, it will be empty afterward.
        operationId: AdminService_UpdateIDP
        responses:
          '200':
            description: idp updated
            schema:
              $ref: '#/definitions/v1UpdateIDPResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateIDPBody'
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId_1}/_deactivate:
      post:
        summary: 'Deprecated: Deactivate Identity Provider (IDP)'
        description: Sets the state of the provider to inactive. It can only be called for the provider with the state active. Users will not be able to log in with the given provider afterward. It might cause troubles if it is the only authentication method of the user.
        operationId: AdminService_DeactivateIDP
        responses:
          '200':
            description: idp deactivated
            schema:
              $ref: '#/definitions/v1DeactivateIDPResponse'
          '400':
            description: Unable to deactivate IDP
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId_1
            in: path
            required: true
            type: string
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId_1}/_reactivate:
      post:
        summary: 'Deprecated: Reactivate Identity Provider (IDP)'
        description: Sets the state of the provider to active. It can only be called for providers with the state inactive. Users will not be able to log in again with the given provider.
        operationId: AdminService_ReactivateIDP
        responses:
          '200':
            description: idp reactivated
            schema:
              $ref: '#/definitions/v1ReactivateIDPResponse'
          '400':
            description: unable to reactivate IDP
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId_1
            in: path
            required: true
            type: string
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId_1}/oidc_config:
      put:
        summary: 'Deprecated: Update OIDC Identity Provider (IDP)'
        description: Update the OIDC-specific configuration of an identity provider. All fields will be updated. If a field has no value it will be empty afterward.
        operationId: AdminService_UpdateIDPOIDCConfig
        responses:
          '200':
            description: OIDC config updated
            schema:
              $ref: '#/definitions/v1UpdateIDPOIDCConfigResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          '409':
            description: precondition failed
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateIDPOIDCConfigBody'
        tags:
          - Identity Providers
        deprecated: true
    /idps/{idpId_1}/jwt_config:
      put:
        summary: 'Deprecated: Update JWT Identity Provider (IDP)'
        description: Update the JWT-specific configuration of an identity provider. All fields will be updated. If a field has no value it will be empty afterward.
        operationId: AdminService_UpdateIDPJWTConfig
        responses:
          '200':
            description: JWT config updated
            schema:
              $ref: '#/definitions/v1UpdateIDPJWTConfigResponse'
          '400':
            description: invalid argument
            schema:
              $ref: '#/definitions/rpcStatus'
          '409':
            description: precondition failed
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateIDPJWTConfigBody'
        tags:
          - Identity Providers
        deprecated: true
    /idps/templates/{id_1}:
      get:
        summary: Get Identity Provider By ID
        operationId: AdminService_GetProviderByID
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetProviderByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
        tags:
          - Identity Providers
      delete:
        summary: Delete Identity Provider
        operationId: AdminService_DeleteProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1DeleteProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
        tags:
          - Identity Providers
    /idps/oauth/{id_1}:
      put:
        summary: Update Generic OAuth Identity Provider
        operationId: AdminService_UpdateGenericOAuthProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateGenericOAuthProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateGenericOAuthProviderBody'
        tags:
          - Identity Providers
    /idps/generic_oidc/{id_1}:
      put:
        summary: Update Generic OIDC Identity Provider
        operationId: AdminService_UpdateGenericOIDCProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateGenericOIDCProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateGenericOIDCProviderBody'
        tags:
          - Identity Providers
    /idps/generic_oidc/{id_1}/_migrate:
      post:
        summary: Migrate Generic OIDC Identity Provider
        operationId: AdminService_MigrateGenericOIDCProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1MigrateGenericOIDCProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceMigrateGenericOIDCProviderBody'
        tags:
          - Identity Providers
    /idps/generic_jwt/{id_1}:
      put:
        summary: Update JWT Identity Provider
        operationId: AdminService_UpdateJWTProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateJWTProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateJWTProviderBody'
        tags:
          - Identity Providers
    /idps/azure/{id_1}:
      put:
        summary: Update AzureAD Identity Provider
        operationId: AdminService_UpdateAzureADProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateAzureADProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateAzureADProviderBody'
        tags:
          - Identity Providers
    /idps/github/{id_1}:
      put:
        summary: Update GitHub Identity Provider
        operationId: AdminService_UpdateGitHubProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateGitHubProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateGitHubProviderBody'
        tags:
          - Identity Providers
    /idps/github_es/{id_1}:
      put:
        summary: Update GitHub Enterprise Identity Provider
        operationId: AdminService_UpdateGitHubEnterpriseServerProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateGitHubEnterpriseServerProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateGitHubEnterpriseServerProviderBody'
        tags:
          - Identity Providers
    /idps/google/{id_1}:
      put:
        summary: Update Google Identity Provider
        operationId: AdminService_UpdateGoogleProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateGoogleProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateGoogleProviderBody'
        tags:
          - Identity Providers
    /idps/ldap/{id_1}:
      put:
        summary: Update LDAP Identity Provider
        operationId: AdminService_UpdateLDAPProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateLDAPProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateLDAPProviderBody'
        tags:
          - Identity Providers
    /idps/apple/{id_1}:
      put:
        summary: Update Apple Identity Provider
        operationId: AdminService_UpdateAppleProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateAppleProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateAppleProviderBody'
        tags:
          - Identity Providers
    /idps/saml/{id_1}:
      put:
        summary: Update SAML Identity Provider
        operationId: AdminService_UpdateSAMLProvider
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1UpdateSAMLProviderResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceUpdateSAMLProviderBody'
        tags:
          - Identity Providers
    /idps/saml/{id_1}/_generate_certificate:
      post:
        summary: Regenerate SAML Identity Provider Certificate
        operationId: AdminService_RegenerateSAMLProviderCertificate
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1RegenerateSAMLProviderCertificateResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceRegenerateSAMLProviderCertificateBody'
        tags:
          - Identity Providers
    /orgs/{orgId}/policies/orgiam:
      get:
        summary: Get Org IAM Policy
        description: Use GetDomain Settings for Organization instead
        operationId: AdminService_GetCustomOrgIAMPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetCustomOrgIAMPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
        tags:
          - Settings
          - Domain Settings
        deprecated: true
      delete:
        summary: Reset Domain Settings of Organization
        description: Use Reset Domain Settings of Organization instead
        operationId: AdminService_ResetCustomOrgIAMPolicyToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResetCustomOrgIAMPolicyToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
        tags:
          - Settings
          - Domain Settings
        deprecated: true
      post:
        summary: Add Custom Org IAM Policy
        description: Use Get Domain Settings for Organization instead
        operationId: AdminService_AddCustomOrgIAMPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddCustomOrgIAMPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceAddCustomOrgIAMPolicyBody'
        tags:
          - Settings
          - Domain Settings
        deprecated: true
      put:
        summary: Update Custom Org IAM Policy
        description: Use Get Domain Settings for Organization instead
        operationId: AdminService_UpdateCustomOrgIAMPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateCustomOrgIAMPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateCustomOrgIAMPolicyBody'
        tags:
          - Settings
          - Domain Settings
        deprecated: true
    /orgs/{orgId}/policies/domain:
      get:
        summary: Get Domain Settings for Organization
        description: Get the domain settings configured on a specific organization. If the organization doesn't have a custom setting, the default will be returned. Domain settings specify how ZITADEL should handle domains, in regards to usernames, emails and validation.
        operationId: AdminService_GetCustomDomainPolicy
        responses:
          '200':
            description: domain policy of the org or the default policy if not customized
            schema:
              $ref: '#/definitions/v1GetCustomDomainPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
        tags:
          - Settings
          - Domain Settings
          - Organizations
      delete:
        summary: Reset Domain Settings of Organization
        description: Resets the domain settings configured on a specific organization to the settings configured on the instance. Domain settings specify how ZITADEL should handle domains, in regards to usernames, emails and validation.
        operationId: AdminService_ResetCustomDomainPolicyToDefault
        responses:
          '200':
            description: resets the custom domain policy to the default policy
            schema:
              $ref: '#/definitions/v1ResetCustomDomainPolicyToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
        tags:
          - Settings
          - Domain Settings
          - Organizations
      post:
        summary: Set a Domain Settings for an Organization
        description: Create the domain settings configured on a specific organization. It will overwrite the settings specified on the instance. Domain settings specify how ZITADEL should handle domains, in regards to usernames, emails and validation.
        operationId: AdminService_AddCustomDomainPolicy
        responses:
          '200':
            description: domain policy created
            schema:
              $ref: '#/definitions/v1AddCustomDomainPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceAddCustomDomainPolicyBody'
        tags:
          - Settings
          - Domain Settings
          - Organizations
      put:
        summary: Update Domain Settings for Organization
        description: Update the domain settings configured on a specific organization. It will overwrite the settings specified on the instance. Domain settings specify how ZITADEL should handle domains, in regards to usernames, emails and validation.
        operationId: AdminService_UpdateCustomDomainPolicy
        responses:
          '200':
            description: domain policy updated
            schema:
              $ref: '#/definitions/v1UpdateCustomDomainPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: orgId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateCustomDomainPolicyBody'
        tags:
          - Settings
          - Domain Settings
          - Organizations
    /policies/login/idps/{idpId_1}:
      delete:
        summary: Remove Linked Identity Provider
        description: Remove an identity provider from the login settings of the instance. This means that it will not be shown to the users on the login page. It affects all organizations, without custom login settings.
        operationId: AdminService_RemoveIDPFromLoginPolicy
        responses:
          '200':
            description: Identity providers removed from default login policy
            schema:
              $ref: '#/definitions/zitadeladminv1RemoveIDPFromLoginPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId_1
            in: path
            required: true
            type: string
        tags:
          - Settings
          - Login Settings
          - Identity Providers
    /policies/login/second_factors/{type_1}:
      delete:
        summary: Remove Second Factor (2FA)
        description: Remove a configured second factor (2FA) from the login settings of the instance. It affects all organizations, without custom login settings. Users will not be able to authenticate with the configured factor afterward. Authentication factors are used as an additional layer of security for your users (e.g. Authentication App, FingerPrint, Windows Hello, etc). Per definition, it is called the second factor as it is used after a password. In the UI we generalize it as multi-factor.
        operationId: AdminService_RemoveSecondFactorFromLoginPolicy
        responses:
          '200':
            description: second factor removed from default login policy
            schema:
              $ref: '#/definitions/zitadeladminv1RemoveSecondFactorFromLoginPolicyResponse'
          '400':
            description: Invalid second factor type
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: type_1
            in: path
            required: true
            type: string
            enum:
              - SECOND_FACTOR_TYPE_UNSPECIFIED
              - SECOND_FACTOR_TYPE_OTP
              - SECOND_FACTOR_TYPE_U2F
              - SECOND_FACTOR_TYPE_OTP_EMAIL
              - SECOND_FACTOR_TYPE_OTP_SMS
        tags:
          - Settings
          - Login Settings
          - Authentication Methods
    /policies/login/multi_factors/_search:
      post:
        summary: List Multi-factors (MFA)
        description: Returns a list of multi-factors (MFA) configured on the login settings of the instance. It affects all organizations, without custom login settings. Authentication factors are used as an additional layer of security for your users (e.g. Authentication App, FingerPrint, Windows Hello, etc).  Per definition, it is called multifactor factor or passwordless as it is used as first and second authentication and a password is not necessary. In the UI we generalize it as passwordless or passkey.
        operationId: AdminService_ListLoginPolicyMultiFactors
        responses:
          '200':
            description: multi-factors of default login policy
            schema:
              $ref: '#/definitions/zitadeladminv1ListLoginPolicyMultiFactorsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
          - Login Settings
          - Authentication Methods
    /policies/login/multi_factors/{type_1}:
      delete:
        summary: Remove Multi-factor (MFA)
        description: Remove a multi-factor (MFA) from the login settings of the instance. It affects all organizations, without custom login settings. Authentication factors are used as an additional layer of security for your users (e.g. Authentication App, FingerPrint, Windows Hello, etc).  Per definition, it is called multi-factor factor or passwordless as it is used as first and second authentication and a password is not necessary. In the UI we generalize it as passwordless or passkey.
        operationId: AdminService_RemoveMultiFactorFromLoginPolicy
        responses:
          '200':
            description: second factor removed from default login policy
            schema:
              $ref: '#/definitions/zitadeladminv1RemoveMultiFactorFromLoginPolicyResponse'
          '400':
            description: multi-factor type not defined on policy
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: type_1
            in: path
            required: true
            type: string
            enum:
              - MULTI_FACTOR_TYPE_UNSPECIFIED
              - MULTI_FACTOR_TYPE_U2F_WITH_VERIFICATION
        tags:
          - Settings
          - Login Settings
          - Authentication Methods
    /policies/password/lockout:
      put:
        summary: Update Password Lockout Settings
        description: Update the password lockout settings configured on the instance. It affects all organizations, that do not have a custom setting configured. The settings specify when a user should be locked (e.g how many password attempts). The user has to be unlocked by an administrator afterward.
        operationId: AdminService_UpdateLockoutPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateLockoutPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateLockoutPolicyRequest'
        tags:
          - Settings
          - Password Settings
    /text/default/message/init/{language_1}:
      get:
        summary: Get Default Init Message Text
        description: Get the default text of the initialize-user message/email that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The email is sent when a user is created and has either no password or a non-verified email address.
        operationId: AdminService_GetDefaultInitMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultInitMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/init/{language_1}:
      get:
        summary: Get Custom Init Message Text
        description: Get the custom text of the initialize-user message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The email is sent when a user is created and has either no password or a non-verified email address.
        operationId: AdminService_GetCustomInitMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomInitMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Init Message Text to Default
        description: Removes the custom text of the initialize-user message/email that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomInitMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomInitMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Custom Init Message Text
        description: 'Set the custom text of the initialize-user message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The email is sent when a user is created and has either no password or a non-verified email address. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: AdminService_SetDefaultInitMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultInitMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultInitMessageTextBody'
        tags:
          - Message Texts
    /text/deafult/message/passwordreset/{language}:
      get:
        summary: Get Default Password Reset Message Text
        description: Get the default text of the password reset message/email that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The email is sent when a user triggers the password forgot-request.
        operationId: AdminService_GetDefaultPasswordResetMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultPasswordResetMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/passwordreset/{language_1}:
      get:
        summary: Get Custom Password Reset Message Text
        description: Get the custom text of the password reset message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The email is sent when a user triggers the password forgot-request.
        operationId: AdminService_GetCustomPasswordResetMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomPasswordResetMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Password Reset Message Text to Default
        description: Removes the custom text of the password reset user message/email that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomPasswordResetMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomPasswordResetMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Custom Password Reset Message Text
        description: 'Set the custom text of the password reset user message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The email is sent when a user triggers the password forgot-request. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: AdminService_SetDefaultPasswordResetMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultPasswordResetMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultPasswordResetMessageTextBody'
        tags:
          - Message Texts
    /text/default/message/verifyemail/{language_1}:
      get:
        summary: Get Default Verify Email Message Text
        description: Get the default text of the verify-email message/email that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The email is sent when a user adds a new non-verified email address.
        operationId: AdminService_GetDefaultVerifyEmailMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultVerifyEmailMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/verifyemail/{language_1}:
      get:
        summary: Get Custom Verify Email Message Text
        description: Get the custom text of the verify-email message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The email is sent when a user adds a new non-verified email address.
        operationId: AdminService_GetCustomVerifyEmailMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomVerifyEmailMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Verify Email Message Text to Default
        description: Removes the custom text of the email verify message/email that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomVerifyEmailMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomVerifyEmailMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Verify Email Message Text
        description: 'Set the custom text of the verify email user message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The email is sent when a user adds a new nonverified email address. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: AdminService_SetDefaultVerifyEmailMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultVerifyEmailMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultVerifyEmailMessageTextBody'
        tags:
          - Message Texts
    /text/default/message/verifyphone/{language_1}:
      get:
        summary: Get Default Verify Phone Message Text
        description: Get the default text of the verify-phone message that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when a user adds a new non-verified phone number and a notification provider is configured.
        operationId: AdminService_GetDefaultVerifyPhoneMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultVerifyPhoneMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/verifyphone/{language_1}:
      get:
        summary: Get Custom Verify Phone Message Text
        description: Get the custom text of the verify-phone message that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when a user adds a new non-verified phone number and a notification provider is configured.
        operationId: AdminService_GetCustomVerifyPhoneMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomVerifyPhoneMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Verify Phone Message Text to Default
        description: Removes the custom text of the verify-phone message that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomVerifyPhoneMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomVerifyPhoneMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Verify Phone Reset Message Text
        description: 'Set the custom text of the verify-phone user message that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when a user adds a new non-verified phone number and a notification provider is configured. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: AdminService_SetDefaultVerifyPhoneMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultVerifyPhoneMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultVerifyPhoneMessageTextBody'
        tags:
          - Message Texts
    /text/default/message/verifysmsotp/{language_1}:
      get:
        summary: Get Default Verify SMS OTP Message Text
        description: Get the default text of the verify SMS OTP message that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an SMS One-time password should be verified and a notification provider is configured.
        operationId: AdminService_GetDefaultVerifySMSOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultVerifySMSOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/verifysmsotp/{language_1}:
      get:
        summary: Get Custom Verify SMS OTP Message Text
        description: Get the custom text of the verify SMS OTP message that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an SMS One-time password should be verified and a notification provider is configured.
        operationId: AdminService_GetCustomVerifySMSOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomVerifySMSOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Verify SMS OTP Message Text to Default
        description: Removes the custom text of the verify SMS OTP message that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomVerifySMSOTPMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomVerifySMSOTPMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Verify SMS OTP Reset Message Text
        description: 'Set the custom text of the verify SMS OTP user message that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an SMS One-time password should be verified and a notification provider is configured. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: AdminService_SetDefaultVerifySMSOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultVerifySMSOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultVerifySMSOTPMessageTextBody'
        tags:
          - Message Texts
    /text/default/message/verifyemailotp/{language_1}:
      get:
        summary: Get Default Verify SMS OTP Message Text
        description: Get the default text of the verify Email OTP message that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an SMS One-time password should be verified and a notification provider is configured.
        operationId: AdminService_GetDefaultVerifyEmailOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultVerifyEmailOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/verifyemailotp/{language_1}:
      get:
        summary: Get Custom Verify SMS OTP Message Text
        description: Get the custom text of the Email OTP message that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an SMS One-time password should be verified and a notification provider is configured.
        operationId: AdminService_GetCustomVerifyEmailOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomVerifyEmailOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Verify SMS OTP Message Text to Default
        description: Removes the custom text of the Email OTP message that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomVerifyEmailOTPMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomVerifyEmailOTPMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Verify SMS OTP Reset Message Text
        description: 'Set the custom text of the Email OTP user message that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an SMS One-time password should be verified and a notification provider is configured. The Following Variables can be used: {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: AdminService_SetDefaultVerifyEmailOTPMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultVerifyEmailOTPMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultVerifyEmailOTPMessageTextBody'
        tags:
          - Message Texts
    /text/default/message/domainclaimed/{language_1}:
      get:
        summary: Get Default Domain Claimed Message Text
        description: Get the default text of the domain claimed message/email that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an organization claims a domain and a user of this domain exists in another organization.
        operationId: AdminService_GetDefaultDomainClaimedMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultDomainClaimedMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/domainclaimed/{language_1}:
      get:
        summary: Get Custom Domain Claimed Message Text
        description: Get the custom text of the domain claimed message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an organization claims a domain and a user of this domain exists in another organization.
        operationId: AdminService_GetCustomDomainClaimedMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomDomainClaimedMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Domain Claimed Message Text to Default
        description: Removes the custom text of the domain claimed message that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomDomainClaimedMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomDomainClaimedMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Domain Claimed Message Text
        description: 'Set the custom text of the domain claimed message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message/email is sent when an organization claims a domain and a user of this domain exists in another organization. The Following Variables can be used: {{.Domain}} {{.TempUsername}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: AdminService_SetDefaultDomainClaimedMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultDomainClaimedMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultDomainClaimedMessageTextBody'
        tags:
          - Message Texts
    /text/default/message/passwordless_registration/{language_1}:
      get:
        summary: Get Default Passwordless Registration Message Text
        description: Get the default text of the domain claimed message/email that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when a user requests passwordless/passkey registration as email, to be able to configure on another device.
        operationId: AdminService_GetDefaultPasswordlessRegistrationMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultPasswordlessRegistrationMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/passwordless_registration/{language_1}:
      get:
        summary: Get Custom Passwordless Registration Message Text
        description: Get the custom text of the passwordless/passkey registration message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when a user requests passwordless/passkey registration as email, to be able to configure on another device.
        operationId: AdminService_GetCustomPasswordlessRegistrationMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomPasswordlessRegistrationMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Passwordless Registration Message Text to Default
        description: Removes the custom text of the passwordless/passkey registration message that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomPasswordlessRegistrationMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Passwordless Registration Message Text
        description: 'Set the custom text of the passwordless/passkey registration message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message/email is sent when a user requests passwordless/passkey registration as email, to be able to configure on another device.  The Following Variables can be used: {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: AdminService_SetDefaultPasswordlessRegistrationMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultPasswordlessRegistrationMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultPasswordlessRegistrationMessageTextBody'
        tags:
          - Message Texts
    /text/default/message/password_change/{language_1}:
      get:
        summary: Get Default Password Change Message Text
        description: Get the default text of the password-changed message/email that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when the password of a user has been changed.
        operationId: AdminService_GetDefaultPasswordChangeMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultPasswordChangeMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/password_change/{language_1}:
      get:
        summary: Get Custom Password Change Message Text
        description: Get the custom text of the password-changed message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when the password of a user has been changed.
        operationId: AdminService_GetCustomPasswordChangeMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomPasswordChangeMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Password Changed Message Text to Default
        description: Removes the custom text of the password-changed message that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomPasswordChangeMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomPasswordChangeMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Password Changed Message Text
        description: 'Set the custom text of the password-changed message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message/email is sent when the password of a user has been changed.  The Following Variables can be used: {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}'
        operationId: AdminService_SetDefaultPasswordChangeMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultPasswordChangeMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultPasswordChangeMessageTextBody'
        tags:
          - Message Texts
    /text/default/message/invite_user/{language_1}:
      get:
        summary: Get Default Invite User Message Text
        description: Get the default text of the invite user message/email that is stored as translation files in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an invite code email is requested.
        operationId: AdminService_GetDefaultInviteUserMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultInviteUserMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
    /text/message/invite_user/{language_1}:
      get:
        summary: Get Custom Invite User Message Text
        description: Get the custom text of the invite user message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an invite code email is requested.
        operationId: AdminService_GetCustomInviteUserMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomInviteUserMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      delete:
        summary: Reset Custom Invite User Message Text to Default
        description: Removes the custom text of the invite user message that is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be sent to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomInviteUserMessageTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomInviteUserMessageTextToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Message Texts
      put:
        summary: Set Default Invite User Message Text
        description: 'Set the custom text of the invite user message/email that is overwritten on the instance as settings/database. The text will be sent to the users of all organizations, that do not have a custom text configured. The message is sent when an invite code email is requested. The Following Variables can be used: {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}} {{.ApplicationName}}'
        operationId: AdminService_SetDefaultInviteUserMessageText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetDefaultInviteUserMessageTextResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceSetDefaultInviteUserMessageTextBody'
        tags:
          - Message Texts
    /text/default/login/{language_1}:
      get:
        summary: Get Default Login Text
        description: Get the default texts for the login and register UI of ZITADEL, which are stored as translation files in ZITADEL itself. The text will be shown to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_GetDefaultLoginTexts
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetDefaultLoginTextsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Login Texts
    /text/login/{language_1}:
      get:
        summary: Get Custom Login Text
        description: Get the custom texts for the login and register UI of ZITADEL, which is overwritten on the instance as settings/database. The text will be shown to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_GetCustomLoginTexts
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1GetCustomLoginTextsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Login Texts
      delete:
        summary: Reset Custom Login Text to Default
        description: Removes the custom texts for the login and register UI of ZITADEL, which is overwritten on the instance and triggers the text from the translation files stored in ZITADEL itself. The text will be shown to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_ResetCustomLoginTextToDefault
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1ResetCustomLoginTextsToDefaultResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
        tags:
          - Login Texts
      put:
        summary: Set Default Login Text
        description: Set the custom texts for the login and register UI of ZITADEL, which is overwritten on the instance as settings/database. The text will be shown to the users of all organizations, that do not have a custom text configured.
        operationId: AdminService_SetCustomLoginText
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadeladminv1SetCustomLoginTextsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: language_1
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AdminServiceSetCustomLoginTextBody'
        tags:
          - Login Texts
    /members/roles/_search:
      post:
        summary: List IAM Member Roles
        description: Members are users with permission to administrate ZITADEL on different levels. This request returns all roles possible for a ZITADEL member on the instance level.
        operationId: AdminService_ListIAMMemberRoles
        responses:
          '200':
            description: roles on the IAM of the user
            schema:
              $ref: '#/definitions/v1ListIAMMemberRolesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Members
          - ZITADEL Administrators
    /members/_search:
      post:
        summary: List IAM Members
        description: Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the instance level, matching the search queries. The search queries will be AND linked.
        operationId: AdminService_ListIAMMembers
        responses:
          '200':
            description: members of the IAM
            schema:
              $ref: '#/definitions/zitadeladminv1ListIAMMembersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadeladminv1ListIAMMembersRequest'
        tags:
          - Members
          - ZITADEL Administrators
    /members:
      post:
        summary: Add IAM Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list with one or multiple roles.
        operationId: AdminService_AddIAMMember
        responses:
          '200':
            description: Member added to the IAM
            schema:
              $ref: '#/definitions/v1AddIAMMemberResponse'
          '400':
            description: user not found or invalid roles
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddIAMMemberRequest'
        tags:
          - Members
          - ZITADEL Administrators
    /members/{userId}:
      delete:
        summary: Remove IAM Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an instance level. The user can still have roles on another level (organization, project)
        operationId: AdminService_RemoveIAMMember
        responses:
          '200':
            description: Member of the IAM removed
            schema:
              $ref: '#/definitions/v1RemoveIAMMemberResponse'
          '400':
            description: invalid user
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - Members
          - ZITADEL Administrators
      put:
        summary: Update IAM Member
        description: Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
        operationId: AdminService_UpdateIAMMember
        responses:
          '200':
            description: Member of the IAM updated
            schema:
              $ref: '#/definitions/v1UpdateIAMMemberResponse'
          '400':
            description: invalid user or roles
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/AdminServiceUpdateIAMMemberBody'
        tags:
          - Members
          - ZITADEL Administrators
    /views/_search:
      post:
        summary: |-
          Returns all stored read models of ZITADEL
          views are used for search optimisation and optimise request latencies
          they represent the delta of the event happend on the objects
        operationId: SystemService_ListViews
        responses:
          '200':
            description: Views for query operations
            schema:
              $ref: '#/definitions/zitadelsystemv1ListViewsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadelsystemv1ListViewsRequest'
        tags:
          - views
    /failedevents/_search:
      post:
        summary: |-
          Returns event descriptions which cannot be processed.
          It's possible that some events need some retries.
          For example if the SMTP-API wasn't able to send an email at the first time
        operationId: SystemService_ListFailedEvents
        responses:
          '200':
            description: Events which were not processed by the views
            schema:
              $ref: '#/definitions/zitadelsystemv1ListFailedEventsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/zitadelsystemv1ListFailedEventsRequest'
        tags:
          - failed events
    /failedevents/{database}/{viewName}/{failedSequence}:
      delete:
        summary: Remove Failed Events
        description: 'Removes the event from the failed evens view, but not from the change stream. This call is useful if the system was able to process the event after some retries. e.g. if the second try of sending an email was successful. the first try produced a failed event. You can find out if it worked on the `failure_count` '
        operationId: AdminService_RemoveFailedEvent
        responses:
          '200':
            description: Events removed from the list
            schema:
              $ref: '#/definitions/zitadeladminv1RemoveFailedEventResponse'
          '400':
            description: failed event not found
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: database
            in: path
            required: true
            type: string
          - name: viewName
            in: path
            required: true
            type: string
          - name: failedSequence
            in: path
            required: true
            type: string
            format: uint64
        tags:
          - Failed Events
    /import:
      post:
        summary: Import Data
        description: Import data on an instance level to ZITADEL. It can be either directly in the request or you can point to a file on an S3 storage, from which the data should be loaded.
        operationId: AdminService_ImportData
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ImportDataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ImportDataRequest'
        tags:
          - Import/Export
    /export:
      post:
        summary: Export Data
        description: Export data on an instance level to ZITADEL. It can be either directly exported in the response or you can point to a file on an S3 storage, where the data should be written.
        operationId: AdminService_ExportData
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ExportDataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ExportDataRequest'
        tags:
          - Import/Export
    /events/types/_search:
      post:
        summary: Event types
        description: Returns a list of the possible event types in ZITADEL. This is used to filter the event types in the list events request.
        operationId: AdminService_ListEventTypes
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListEventTypesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListEventTypesRequest'
        tags:
          - Events
    /events/_search:
      post:
        summary: Search Events
        description: Returns a list of the possible event types in ZITADEL. This is used to filter the event types in the list events request.
        operationId: AdminService_ListEvents
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListEventsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListEventsRequest'
        tags:
          - Events
    /aggregates/types/_search:
      post:
        summary: List Aggregate Types
        description: Returns a list of the possible aggregate types in ZITADEL. This is used to filter the aggregate types in the list events request.
        operationId: AdminService_ListAggregateTypes
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListAggregateTypesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListAggregateTypesRequest'
        tags:
          - Events
    /features/login_default_org:
      put:
        summary: |-
          Activates the "LoginDefaultOrg" feature by setting the flag to "true"
          This is irreversible!
          Once activated, the login UI will use the settings of the default org (and not from the instance) if not organization context is set
        operationId: AdminService_ActivateFeatureLoginDefaultOrg
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ActivateFeatureLoginDefaultOrgResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - AdminService
    /milestones/_search:
      post:
        summary: Search Milestones
        description: Returns a list of reached instance usage milestones.
        operationId: AdminService_ListMilestones
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMilestonesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListMilestonesRequest'
        tags:
          - Milestones
    /restrictions:
      get:
        summary: Get the current feature restrictions for the instance
        description: Undefined values mean that the feature is not restricted. If restrictions were never set, the instances features are not restricted, all properties are undefined and the details object is empty.
        operationId: AdminService_GetRestrictions
        responses:
          '200':
            description: The status 200 is also returned if no restrictions were ever set. In this case, all feature restrictions are undefined.
            schema:
              $ref: '#/definitions/v1GetRestrictionsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Feature Restrictions
      put:
        summary: Restrict the instances features
        description: Undefined values don't change the current restriction. Zero values remove the current restriction.
        operationId: AdminService_SetRestrictions
        responses:
          '200':
            description: Restrictions set.
            schema:
              $ref: '#/definitions/v1SetRestrictionsResponse'
          '400':
            description: No restriction is defined.
            schema: {}
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1SetRestrictionsRequest'
        tags:
          - Feature Restrictions
    /users/me:
      get:
        summary: Get my user
        description: 'Returns the full user object of the authenticated user including the profile, email, phone, etc '
        operationId: AuthService_GetMyUser
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User
      delete:
        summary: Delete my user
        description: Deletes the currently authenticated user. All authentication tokens will be removed and the user will not be able to make any request.
        operationId: AuthService_RemoveMyUser
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveMyUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User
    /users/me/changes/_search:
      post:
        summary: Get My User History
        description: Returns a list of changes/events that have happened on the authenticated user. It's the history of the user. Make sure to send a limit.
        operationId: AuthService_ListMyUserChanges
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyUserChangesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListMyUserChangesRequest'
        tags:
          - User
    /users/me/sessions/_search:
      post:
        summary: Get My User Sessions
        description: Returns a list of a user session for the user agent of the authenticated user. This can be used to switch accounts in the current application.
        operationId: AuthService_ListMyUserSessions
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyUserSessionsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListMyUserSessionsRequest'
        tags:
          - User
    /users/me/metadata/_search:
      post:
        summary: Get My User Metadata
        description: Returns a list of metadata of the authenticated user. Metadata is a key value list with additional information needed on the user.
        operationId: AuthService_ListMyMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListMyMetadataRequest'
        tags:
          - User Metadata
    /users/me/metadata/{key}:
      get:
        summary: Get My User Metadata By Key
        description: Returns a metadata value by a specific key of the authenticated user. Metadata is a key value list with additional information needed on the user.
        operationId: AuthService_GetMyMetadata
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyMetadataResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: key
            in: path
            required: true
            type: string
        tags:
          - User Metadata
    /users/me/tokens/refresh/_search:
      post:
        summary: Get Refresh Tokens
        description: Returns the list of refresh tokens of the authenticated user.
        operationId: AuthService_ListMyRefreshTokens
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyRefreshTokensResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListMyRefreshTokensRequest'
        tags:
          - User Tokens
    /users/me/tokens/refresh/{id}:
      delete:
        summary: Revoke Refresh Tokens
        description: Revokes a single refresh token of the authorized user by its (token) id.
        operationId: AuthService_RevokeMyRefreshToken
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RevokeMyRefreshTokenResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
        tags:
          - User Tokens
    /users/me/tokens/refresh/_revoke_all:
      post:
        summary: Revoke All Refresh Tokens
        description: Revokes all refresh tokens of the authenticated user.
        operationId: AuthService_RevokeAllMyRefreshTokens
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RevokeAllMyRefreshTokensResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1RevokeAllMyRefreshTokensRequest'
        tags:
          - User Tokens
    /users/me/username:
      put:
        summary: Change My Username
        description: Changes the username of the authenticated user. The user has to log in with the newly created username afterward.
        operationId: AuthService_UpdateMyUserName
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateMyUserNameResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateMyUserNameRequest'
        tags:
          - Users
    /policies/passwords/complexity:
      get:
        summary: Get Passwordcomplexity Policy
        description: Returns the password complexity settings that should be used for the authenticated user. It is set either on an instance or organization level. This policy defines how the password should look.
        operationId: AuthService_GetMyPasswordComplexityPolicy
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyPasswordComplexityPolicyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Password
          - Policies
    /users/me/password:
      put:
        summary: Change Password
        description: Changes the password of the authenticated user. Make sure the password follows the password complexity policy.
        operationId: AuthService_UpdateMyPassword
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateMyPasswordResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateMyPasswordRequest'
        tags:
          - User Password
    /users/me/profile:
      get:
        summary: Get My Profile
        description: Returns the profile information of the authenticated user, this includes given name, family name, etc.
        operationId: AuthService_GetMyProfile
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyProfileResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Profile
      put:
        summary: Update My Profile
        description: Change the profile information of the authenticated user. This includes information like given name, family name, language, etc.
        operationId: AuthService_UpdateMyProfile
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateMyProfileResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1UpdateMyProfileRequest'
        tags:
          - User Profile
    /users/me/email:
      get:
        summary: Get My Email
        description: Returns the email address and the verified flag of the authenticated user.
        operationId: AuthService_GetMyEmail
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Email
      put:
        summary: Update My Email
        description: Change the email address of the authenticated user. A verification email will be sent to the given email address.
        operationId: AuthService_SetMyEmail
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetMyEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1SetMyEmailRequest'
        tags:
          - User Email
    /users/me/email/_verify:
      post:
        summary: Verify My Email
        description: Verify the email address of the authenticated user with the code that has been sent. State of the email address is verified after.
        operationId: AuthService_VerifyMyEmail
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1VerifyMyEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1VerifyMyEmailRequest'
        tags:
          - User Email
    /users/me/email/_resend_verification:
      post:
        summary: Resend Email Verification
        description: A new email will be sent to the last set email address of the authenticated user, the last set email address will be used.
        operationId: AuthService_ResendMyEmailVerification
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResendMyEmailVerificationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ResendMyEmailVerificationRequest'
        tags:
          - User Email
    /users/me/phone:
      get:
        summary: Get My Phone
        description: Returns the phone number of the authenticated user and if the state is verified or not.
        operationId: AuthService_GetMyPhone
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetMyPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Phone
      delete:
        summary: Remove Phone Number
        description: The phone number of the authenticated user will be removed.
        operationId: AuthService_RemoveMyPhone
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveMyPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Phone
      put:
        summary: Set My Phone
        description: Sets a new phone number to the authenticated user. If a notification provider is configured the user will receive an sms with a code to authenticate the number.
        operationId: AuthService_SetMyPhone
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetMyPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1SetMyPhoneRequest'
        tags:
          - User Phone
    /users/me/phone/_verify:
      post:
        summary: Verify Phone
        description: Verify the phone number of the authenticated user, with the code that has been sent to the number. State of the phone number is verified after.
        operationId: AuthService_VerifyMyPhone
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1VerifyMyPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1VerifyMyPhoneRequest'
        tags:
          - User Phone
    /users/me/phone/_resend_verification:
      post:
        summary: Resend Phone verification
        description: Resends the verification notification to the last given phone number of the authenticated user. The notification provider has to be configured.
        operationId: AuthService_ResendMyPhoneVerification
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ResendMyPhoneVerificationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ResendMyPhoneVerificationRequest'
        tags:
          - User Phone
    /users/me/avatar:
      delete:
        summary: Remove My Avatar
        description: Remove the avatar of the authenticated user. If no avatar is set a shortcut of the name of the user will be presented.
        operationId: AuthService_RemoveMyAvatar
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveMyAvatarResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User
    /users/me/idps/_search:
      post:
        summary: List Social Logins
        description: Returns a list of all linked identity providers/social logins of the user. (e. Google, Microsoft, AzureAD, etc.)
        operationId: AuthService_ListMyLinkedIDPs
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyLinkedIDPsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListMyLinkedIDPsRequest'
        tags:
          - User Social Login
    /users/me/idps/{idpId}/{linkedUserId}:
      delete:
        summary: Remove Social Login
        description: Remove one of the linked social logins/identity providers of the authenticated user (e.g. Google, Microsoft, AzureAD, etc.). The user will not be able to log in with the given provider afterward. Make sure the user does have other possibilities to authenticate.
        operationId: AuthService_RemoveMyLinkedIDP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveMyLinkedIDPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpId
            in: path
            required: true
            type: string
          - name: linkedUserId
            in: path
            required: true
            type: string
        tags:
          - User Social Login
    /users/me/auth_factors/_search:
      post:
        summary: List Authentication Factors
        description: Returns a list of possible authentication factors, multi-factor (MFA), second factor (2FA)
        operationId: AuthService_ListMyAuthFactors
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyAuthFactorsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Authentication Factor
    /users/me/auth_factors/otp:
      delete:
        summary: Remove One-Time Password (OTP)
        description: Remove the configured One-Time Password (OTP) factor of the authenticated user. OTP is an authenticator app like Google/Microsoft Authenticator, Authy, etc. As only one OTP per user is allowed, the user will not have OTP as a second factor afterward.
        operationId: AuthService_RemoveMyAuthFactorOTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveMyAuthFactorOTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Authentication Factor
      post:
        summary: Add One-Time Password (OTP)
        description: Add a new One-Time Password (OTP) factor to the authenticated user. OTP is an authenticator app like Google/Microsoft Authenticator, Authy, etc. Only one OTP per user is allowed. After adding a new OTP it has to be verified.
        operationId: AuthService_AddMyAuthFactorOTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddMyAuthFactorOTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddMyAuthFactorOTPRequest'
        tags:
          - User Authentication Factor
    /users/me/auth_factors/otp/_verify:
      post:
        summary: Verify One-Time Password (OTP)
        description: Verify the last added One-Time Password (OTP) factor of the authenticated user. OTP is an authenticator app like Google/Microsoft Authenticator, Authy, etc. Only one OTP per user is allowed.
        operationId: AuthService_VerifyMyAuthFactorOTP
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1VerifyMyAuthFactorOTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1VerifyMyAuthFactorOTPRequest'
        tags:
          - User Authentication Factor
    /users/me/auth_factors/otp_sms:
      delete:
        summary: Remove One-Time Password (OTP) SMS
        description: Remove the configured One-Time Password (OTP) SMS factor of the authenticated user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
        operationId: AuthService_RemoveMyAuthFactorOTPSMS
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveMyAuthFactorOTPSMSResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Authentication Factor
      post:
        summary: Add One-Time Password (OTP) SMS
        description: Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor.
        operationId: AuthService_AddMyAuthFactorOTPSMS
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddMyAuthFactorOTPSMSResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddMyAuthFactorOTPSMSRequest'
        tags:
          - User Authentication Factor
    /users/me/auth_factors/otp_email:
      delete:
        summary: Remove One-Time Password (OTP) Email
        description: Remove the configured One-Time Password (OTP) Email factor of the authenticated user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
        operationId: AuthService_RemoveMyAuthFactorOTPEmail
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveMyAuthFactorOTPEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Authentication Factor
      post:
        summary: Add One-Time Password (OTP) Email
        description: Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor.
        operationId: AuthService_AddMyAuthFactorOTPEmail
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddMyAuthFactorOTPEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddMyAuthFactorOTPEmailRequest'
        tags:
          - User Authentication Factor
    /users/me/auth_factors/u2f:
      post:
        summary: Add Universal Second Factor (U2F)
        description: Add a new Universal Second Factor (U2F) to the authenticated user. U2F is a device-dependent authentication like FingerScan, FaceID, WindowHello, etc. The factor has to be verified after adding. Multiple factors can be added.
        operationId: AuthService_AddMyAuthFactorU2F
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddMyAuthFactorU2FResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddMyAuthFactorU2FRequest'
        tags:
          - User Authentication Factor
    /users/me/auth_factors/u2f/_verify:
      post:
        summary: Add Universal Second Factor (U2F)
        description: Verify the last added new Universal Second Factor (U2F) to the authenticated user.
        operationId: AuthService_VerifyMyAuthFactorU2F
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1VerifyMyAuthFactorU2FResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1VerifyMyAuthFactorU2FRequest'
        tags:
          - User Authentication Factor
    /users/me/auth_factors/u2f/{tokenId}:
      delete:
        summary: Remove Universal Second Factor (U2F)
        description: Remove a specific Universal Second Factor (U2F) from the authenticated user by sending the id.
        operationId: AuthService_RemoveMyAuthFactorU2F
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveMyAuthFactorU2FResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: tokenId
            in: path
            required: true
            type: string
        tags:
          - User Authentication Factor
    /users/me/passwordless/_search:
      post:
        summary: List Passkey
        description: Get the list of configured passkey authentication methods. Like FingerPrint, FaceID, WindowsHello, HardwareToken, etc.
        operationId: AuthService_ListMyPasswordless
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyPasswordlessResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Authentication Factor
    /users/me/passwordless:
      post:
        summary: Add passkey
        description: Add a new passkey authentication method to the authenticated user. Like FingerPrint, FaceID, WindowsHello, HardwareToken, etc. Multiple passkeys can be configured.
        operationId: AuthService_AddMyPasswordless
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddMyPasswordlessResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddMyPasswordlessRequest'
        tags:
          - User Authentication Factor
    /users/me/passwordless/_link:
      post:
        summary: Add passkey link
        description: Adds a new passkey authenticator link to the authenticated user and returns it in the response. This link enables the user to register a new device if current passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone
        operationId: AuthService_AddMyPasswordlessLink
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddMyPasswordlessLinkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddMyPasswordlessLinkRequest'
        tags:
          - User Authentication Factor
    /users/me/passwordless/_send_link:
      post:
        summary: Send passkey link
        description: Adds a new passkey authenticator link to the authenticated user and sends it to the registered email address. This link enables the user to register a new device if current passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone
        operationId: AuthService_SendMyPasswordlessLink
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SendMyPasswordlessLinkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1SendMyPasswordlessLinkRequest'
        tags:
          - User Authentication Factor
    /users/me/passwordless/_verify:
      post:
        summary: Verify passkey
        description: Verifies the last added passkey configuration of the authenticated user.
        operationId: AuthService_VerifyMyPasswordless
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1VerifyMyPasswordlessResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1VerifyMyPasswordlessRequest'
        tags:
          - User Authentication Factor
    /users/me/passwordless/{tokenId}:
      delete:
        summary: Remove passkey
        description: Remove a passkey configuration from the authenticated user. The user will not be able to log in with that configuration afterward. Make sure the user has other possibilities to log in.
        operationId: AuthService_RemoveMyPasswordless
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveMyPasswordlessResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: tokenId
            in: path
            required: true
            type: string
        tags:
          - User Authentication Factor
    /usergrants/me/_search:
      post:
        summary: List My Authorizations/Grants
        description: Returns a list of the authorizations/user grants the authenticated user has. User grants consist of an organization, a project and 1-n roles.
        operationId: AuthService_ListMyUserGrants
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyUserGrantsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListMyUserGrantsRequest'
        tags:
          - User Authorizations/Grants
    /global/projectorgs/_search:
      post:
        summary: List My Organizations
        description: Returns a list of the organizations where the authenticated user has any authorizations/user grants. The request is made in the context of the requested project. This request can be used in multi-tenancy applications to show the user a tenant switcher.
        operationId: AuthService_ListMyProjectOrgs
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyProjectOrgsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListMyProjectOrgsRequest'
        tags:
          - User Authorizations/Grants
    /permissions/zitadel/me/_search:
      post:
        summary: List My ZITADEL Permissions
        description: 'Returns a list of permissions the authenticated user has in ZITADEL based on the manager roles the user has. (e.g: ORG_OWNER = org.read, org.write, ...).'
        operationId: AuthService_ListMyZitadelPermissions
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyZitadelPermissionsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Authorizations/Grants
    /permissions/me/_search:
      post:
        summary: List My Project Roles
        description: Returns a list of roles for the authenticated user and for the requesting project (based on the token).
        operationId: AuthService_ListMyProjectPermissions
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyProjectPermissionsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - User Authorizations/Grants
    /memberships/me/_search:
      post:
        summary: List My ZITADEL Manager Roles
        description: Show all the management roles my user has in ZITADEL (ZITADEL Manager).
        operationId: AuthService_ListMyMemberships
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListMyMembershipsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListMyMembershipsRequest'
        tags:
          - User Memberships
    /v2/features/system:
      get:
        summary: Get system level features
        description: Returns all configured features for the system. Unset fields mean the feature is the current system default.
        operationId: FeatureService_GetSystemFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2GetSystemFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - FeatureService
      delete:
        summary: Reset system level features
        description: Deletes ALL configured features for the system, reverting the behaviors to system defaults.
        operationId: FeatureService_ResetSystemFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2ResetSystemFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - FeatureService
      put:
        summary: Set system level features
        description: Configure and set features that apply to the complete system. Only fields present in the request are set or unset.
        operationId: FeatureService_SetSystemFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2SetSystemFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/featurev2SetSystemFeaturesRequest'
        tags:
          - FeatureService
    /v2/features/instance:
      get:
        summary: Get instance level features
        description: Returns all configured features for an instance. Unset fields mean the feature is the current system default.
        operationId: FeatureService_GetInstanceFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2GetInstanceFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: inheritance
            description: 'Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource''s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the instance, it will be omitted from the response or Not Found is returned when the instance has no features flags at all.'
            in: query
            required: false
            type: boolean
        tags:
          - FeatureService
      delete:
        summary: Reset instance level features
        description: Deletes ALL configured features for an instance, reverting the behaviors to system defaults.
        operationId: FeatureService_ResetInstanceFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2ResetInstanceFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - FeatureService
      put:
        summary: Set instance level features
        description: Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
        operationId: FeatureService_SetInstanceFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2SetInstanceFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/featurev2SetInstanceFeaturesRequest'
        tags:
          - FeatureService
    /v2/features/organization/{organizationId}:
      get:
        summary: Get organization level features
        description: Returns all configured features for an organization. Unset fields mean the feature is the current instance default.
        operationId: FeatureService_GetOrganizationFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2GetOrganizationFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: organizationId
            in: path
            required: true
            type: string
          - name: inheritance
            description: 'Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource''s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the organization, it will be omitted from the response or Not Found is returned when the organization has no features flags at all.'
            in: query
            required: false
            type: boolean
        tags:
          - FeatureService
      delete:
        summary: Reset organization level features
        description: Deletes ALL configured features for an organization, reverting the behaviors to instance defaults.
        operationId: FeatureService_ResetOrganizationFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2ResetOrganizationFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: organizationId
            in: path
            required: true
            type: string
        tags:
          - FeatureService
      put:
        summary: Set organization level features
        description: Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
        operationId: FeatureService_SetOrganizationFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2SetOrganizationFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: organizationId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/featurev2FeatureServiceSetOrganizationFeaturesBody'
        tags:
          - FeatureService
    /v2/features/user/{userId}:
      get:
        summary: Get organization level features
        description: Returns all configured features for an organization. Unset fields mean the feature is the current instance default.
        operationId: FeatureService_GetUserFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2GetUserFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: inheritance
            description: 'Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource''s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the user, it will be ommitted from the response or Not Found is returned when the user has no features flags at all.'
            in: query
            required: false
            type: boolean
        tags:
          - FeatureService
      delete:
        summary: Reset user level features
        description: Deletes ALL configured features for a user, reverting the behaviors to organization defaults.
        operationId: FeatureService_ResetUserFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2ResetUserFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - FeatureService
      put:
        summary: Set user level features
        description: Configure and set features that apply to an user. Only fields present in the request are set or unset.
        operationId: FeatureService_SetUserFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2SetUserFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/featurev2FeatureServiceSetUserFeaturesBody'
        tags:
          - FeatureService
    /v2beta/features/system:
      get:
        summary: Get system level features
        description: Returns all configured features for the system. Unset fields mean the feature is the current system default.
        operationId: FeatureService_GetSystemFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaGetSystemFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - FeatureService
      delete:
        summary: Reset system level features
        description: Deletes ALL configured features for the system, reverting the behaviors to system defaults.
        operationId: FeatureService_ResetSystemFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaResetSystemFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - FeatureService
      put:
        summary: Set system level features
        description: Configure and set features that apply to the complete system. Only fields present in the request are set or unset.
        operationId: FeatureService_SetSystemFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaSetSystemFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/featurev2betaSetSystemFeaturesRequest'
        tags:
          - FeatureService
    /v2beta/features/instance:
      get:
        summary: Get instance level features
        description: Returns all configured features for an instance. Unset fields mean the feature is the current system default.
        operationId: FeatureService_GetInstanceFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaGetInstanceFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: inheritance
            description: 'Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource''s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the instance, it will be omitted from the response or Not Found is returned when the instance has no features flags at all.'
            in: query
            required: false
            type: boolean
        tags:
          - FeatureService
      delete:
        summary: Reset instance level features
        description: Deletes ALL configured features for an instance, reverting the behaviors to system defaults.
        operationId: FeatureService_ResetInstanceFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaResetInstanceFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - FeatureService
      put:
        summary: Set instance level features
        description: Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
        operationId: FeatureService_SetInstanceFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaSetInstanceFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/featurev2betaSetInstanceFeaturesRequest'
        tags:
          - FeatureService
    /v2beta/features/organization/{organizationId}:
      get:
        summary: Get organization level features
        description: Returns all configured features for an organization. Unset fields mean the feature is the current instance default.
        operationId: FeatureService_GetOrganizationFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaGetOrganizationFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: organizationId
            in: path
            required: true
            type: string
          - name: inheritance
            description: 'Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource''s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the organization, it will be omitted from the response or Not Found is returned when the organization has no features flags at all.'
            in: query
            required: false
            type: boolean
        tags:
          - FeatureService
      delete:
        summary: Reset organization level features
        description: Deletes ALL configured features for an organization, reverting the behaviors to instance defaults.
        operationId: FeatureService_ResetOrganizationFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaResetOrganizationFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: organizationId
            in: path
            required: true
            type: string
        tags:
          - FeatureService
      put:
        summary: Set organization level features
        description: Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
        operationId: FeatureService_SetOrganizationFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaSetOrganizationFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: organizationId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/featurev2betaFeatureServiceSetOrganizationFeaturesBody'
        tags:
          - FeatureService
    /v2beta/features/user/{userId}:
      get:
        summary: Get organization level features
        description: Returns all configured features for an organization. Unset fields mean the feature is the current instance default.
        operationId: FeatureService_GetUserFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaGetUserFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: inheritance
            description: 'Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource''s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the user, it will be ommitted from the response or Not Found is returned when the user has no features flags at all.'
            in: query
            required: false
            type: boolean
        tags:
          - FeatureService
      delete:
        summary: Reset user level features
        description: Deletes ALL configured features for a user, reverting the behaviors to organization defaults.
        operationId: FeatureService_ResetUserFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaResetUserFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - FeatureService
      put:
        summary: Set user level features
        description: Configure and set features that apply to an user. Only fields present in the request are set or unset.
        operationId: FeatureService_SetUserFeatures
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/featurev2betaSetUserFeaturesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/featurev2betaFeatureServiceSetUserFeaturesBody'
        tags:
          - FeatureService
    /v2/idps/{id}:
      get:
        summary: Get identity provider (IdP) by ID
        description: Returns an identity provider (social/enterprise login) by its ID, which can be of the type Google, AzureAD, etc.
        operationId: IdentityProviderService_GetIDPByID
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/idpv2GetIDPByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
        tags:
          - IdentityProviderService
    /v2/oidc/auth_requests/{authRequestId}:
      get:
        summary: Get OIDC Auth Request details
        description: Get OIDC Auth Request details by ID, obtained from the redirect URL. Returns details that are parsed from the application's Auth Request.
        operationId: OIDCService_GetAuthRequest
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/oidcv2GetAuthRequestResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: authRequestId
            description: ID of the Auth Request, as obtained from the redirect URL.
            in: path
            required: true
            type: string
        tags:
          - OIDCService
      post:
        summary: Finalize an Auth Request and get the callback URL.
        description: Finalize an Auth Request and get the callback URL for success or failure. The user must be redirected to the URL in order to inform the application about the success or failure. On success, the URL contains details for the application to obtain the tokens. This method can only be called once for an Auth request.
        operationId: OIDCService_CreateCallback
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/oidcv2CreateCallbackResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: authRequestId
            description: ID of the Auth Request.
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/oidcv2OIDCServiceCreateCallbackBody'
        tags:
          - OIDCService
    /v2beta/oidc/auth_requests/{authRequestId}:
      get:
        summary: Get OIDC Auth Request details
        description: Get OIDC Auth Request details by ID, obtained from the redirect URL. Returns details that are parsed from the application's Auth Request.
        operationId: OIDCService_GetAuthRequest
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/oidcv2betaGetAuthRequestResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: authRequestId
            description: ID of the Auth Request, as obtained from the redirect URL.
            in: path
            required: true
            type: string
        tags:
          - OIDCService
      post:
        summary: Finalize an Auth Request and get the callback URL.
        description: Finalize an Auth Request and get the callback URL for success or failure. The user must be redirected to the URL in order to inform the application about the success or failure. On success, the URL contains details for the application to obtain the tokens. This method can only be called once for an Auth request.
        operationId: OIDCService_CreateCallback
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/oidcv2betaCreateCallbackResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: authRequestId
            description: Set this field when the authorization flow failed. It creates a callback URL to the application, with the error details set.
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/oidcv2betaOIDCServiceCreateCallbackBody'
        tags:
          - OIDCService
    /v2/users/human:
      post:
        summary: Create a new human user
        description: Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.
        operationId: UserService_AddHumanUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2AddHumanUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2AddHumanUserRequest'
        tags:
          - UserService
    /v2/users/{userId}:
      get:
        summary: User by ID
        description: Returns the full user object (human or machine) including the profile, email, etc..
        operationId: UserService_GetUserByID
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2GetUserByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            description: User ID of the user you like to get.
            in: path
            required: true
            type: string
        tags:
          - UserService
      delete:
        summary: Delete user
        description: The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found..
        operationId: UserService_DeleteUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2DeleteUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
    /v2/users:
      post:
        summary: Search Users
        description: Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.
        operationId: UserService_ListUsers
        responses:
          '200':
            description: A list of all users matching the query
            schema:
              $ref: '#/definitions/userv2ListUsersResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2ListUsersRequest'
        tags:
          - UserService
    /v2/users/{userId}/email:
      post:
        summary: Change the user email
        description: Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email..
        operationId: UserService_SetEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2SetEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceSetEmailBody'
        tags:
          - UserService
    /v2/users/{userId}/email/resend:
      post:
        summary: Resend code to verify user email
        description: Resend code to verify user email.
        operationId: UserService_ResendEmailCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2ResendEmailCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceResendEmailCodeBody'
        tags:
          - UserService
    /v2/users/{userId}/email/send:
      post:
        summary: Send code to verify user email
        description: Send code to verify user email.
        operationId: UserService_SendEmailCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2SendEmailCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceSendEmailCodeBody'
        tags:
          - UserService
    /v2/users/{userId}/email/verify:
      post:
        summary: Verify the email
        description: Verify the email with the generated code.
        operationId: UserService_VerifyEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyEmailBody'
        tags:
          - UserService
    /v2/users/{userId}/phone:
      delete:
        summary: Delete the user phone
        description: Delete the phone number of a user.
        operationId: UserService_RemovePhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RemovePhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRemovePhoneBody'
        tags:
          - UserService
      post:
        summary: Set the user phone
        description: Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms..
        operationId: UserService_SetPhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2SetPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceSetPhoneBody'
        tags:
          - UserService
    /v2/users/{userId}/phone/resend:
      post:
        summary: Resend code to verify user phone
        description: Resend code to verify user phone.
        operationId: UserService_ResendPhoneCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2ResendPhoneCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceResendPhoneCodeBody'
        tags:
          - UserService
    /v2/users/{userId}/phone/verify:
      post:
        summary: Verify the phone
        description: Verify the phone with the generated code..
        operationId: UserService_VerifyPhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyPhoneBody'
        tags:
          - UserService
    /v2/users/human/{userId}:
      put:
        summary: Update User
        description: Update all information from a user..
        operationId: UserService_UpdateHumanUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2UpdateHumanUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceUpdateHumanUserBody'
        tags:
          - UserService
    /v2/users/{userId}/deactivate:
      post:
        summary: Deactivate user
        description: The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data..
        operationId: UserService_DeactivateUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2DeactivateUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceDeactivateUserBody'
        tags:
          - UserService
    /v2/users/{userId}/reactivate:
      post:
        summary: Reactivate user
        description: Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'..
        operationId: UserService_ReactivateUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2ReactivateUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceReactivateUserBody'
        tags:
          - UserService
    /v2/users/{userId}/lock:
      post:
        summary: Lock user
        description: The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.)..
        operationId: UserService_LockUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2LockUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceLockUserBody'
        tags:
          - UserService
    /v2/users/{userId}/unlock:
      post:
        summary: Unlock user
        description: The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.)..
        operationId: UserService_UnlockUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2UnlockUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceUnlockUserBody'
        tags:
          - UserService
    /v2/users/{userId}/passkeys:
      post:
        summary: Start the registration of passkey for a user
        description: Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey..
        operationId: UserService_RegisterPasskey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RegisterPasskeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRegisterPasskeyBody'
        tags:
          - UserService
    /v2/users/{userId}/passkeys/{passkeyId}:
      delete:
        summary: Remove passkey from a user
        description: Remove passkey from a user.
        operationId: UserService_RemovePasskey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2RemovePasskeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: passkeyId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Verify a passkey for a user
        description: Verify the passkey registration with the public key credential..
        operationId: UserService_VerifyPasskeyRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyPasskeyRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: passkeyId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyPasskeyRegistrationBody'
        tags:
          - UserService
    /v2/users/{userId}/passkeys/registration_link:
      post:
        summary: Create a passkey registration link for a user
        description: Create a passkey registration link which includes a code and either return it or send it to the user..
        operationId: UserService_CreatePasskeyRegistrationLink
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2CreatePasskeyRegistrationLinkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceCreatePasskeyRegistrationLinkBody'
        tags:
          - UserService
    /v2/users/{userId}/passkeys/_search:
      post:
        summary: List passkeys of an user
        description: List passkeys of an user
        operationId: UserService_ListPasskeys
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2ListPasskeysResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceListPasskeysBody'
        tags:
          - UserService
    /v2/users/{userId}/u2f:
      post:
        summary: Start the registration of a u2f token for a user
        description: Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token..
        operationId: UserService_RegisterU2F
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RegisterU2FResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRegisterU2FBody'
        tags:
          - UserService
    /v2/users/{userId}/u2f/{u2fId}:
      delete:
        summary: Remove u2f token from a user
        description: Remove u2f token from a user
        operationId: UserService_RemoveU2F
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2RemoveU2FResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: u2fId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Verify a u2f token for a user
        description: Verify the u2f token registration with the public key credential..
        operationId: UserService_VerifyU2FRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyU2FRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: u2fId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyU2FRegistrationBody'
        tags:
          - UserService
    /v2/users/{userId}/totp:
      delete:
        summary: Remove TOTP generator from a user
        description: Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.
        operationId: UserService_RemoveTOTP
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RemoveTOTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Start the registration of a TOTP generator for a user
        description: Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device..
        operationId: UserService_RegisterTOTP
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RegisterTOTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRegisterTOTPBody'
        tags:
          - UserService
    /v2/users/{userId}/totp/verify:
      post:
        summary: Verify a TOTP generator for a user
        description: Verify the TOTP registration with a generated code..
        operationId: UserService_VerifyTOTPRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2VerifyTOTPRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceVerifyTOTPRegistrationBody'
        tags:
          - UserService
    /v2/users/{userId}/otp_sms:
      delete:
        summary: Remove One-Time Password (OTP) SMS from a user
        description: Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
        operationId: UserService_RemoveOTPSMS
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RemoveOTPSMSResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Add OTP SMS for a user
        description: Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor..
        operationId: UserService_AddOTPSMS
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2AddOTPSMSResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceAddOTPSMSBody'
        tags:
          - UserService
    /v2/users/{userId}/otp_email:
      delete:
        summary: Remove One-Time Password (OTP) Email from a user
        description: Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
        operationId: UserService_RemoveOTPEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RemoveOTPEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
      post:
        summary: Add OTP Email for a user
        description: Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor..
        operationId: UserService_AddOTPEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2AddOTPEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceAddOTPEmailBody'
        tags:
          - UserService
    /v2/idp_intents:
      post:
        summary: Start flow with an identity provider
        description: Start a flow with an identity provider, for external login, registration or linking..
        operationId: UserService_StartIdentityProviderIntent
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2StartIdentityProviderIntentResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2StartIdentityProviderIntentRequest'
        tags:
          - UserService
    /v2/idp_intents/{idpIntentId}:
      post:
        summary: Retrieve the information returned by the identity provider
        description: Retrieve the information returned by the identity provider for registration or updating an existing user with new information..
        operationId: UserService_RetrieveIdentityProviderIntent
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2RetrieveIdentityProviderIntentResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpIntentId
            description: ID of the idp intent, previously returned on the success response of the IDP callback
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceRetrieveIdentityProviderIntentBody'
        tags:
          - UserService
    /v2/users/{userId}/links:
      post:
        summary: Add link to an identity provider to an user
        description: Add link to an identity provider to an user..
        operationId: UserService_AddIDPLink
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2AddIDPLinkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceAddIDPLinkBody'
        tags:
          - UserService
    /v2/users/{userId}/links/_search:
      post:
        summary: List links to an identity provider of an user
        description: List links to an identity provider of an user.
        operationId: UserService_ListIDPLinks
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2ListIDPLinksResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceListIDPLinksBody'
        tags:
          - UserService
    /v2/users/{userId}/links/{idpId}/{linkedUserId}:
      delete:
        summary: Remove link of an identity provider to an user
        description: Remove link of an identity provider to an user.
        operationId: UserService_RemoveIDPLink
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2RemoveIDPLinkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: idpId
            in: path
            required: true
            type: string
          - name: linkedUserId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceRemoveIDPLinkBody'
        tags:
          - UserService
    /v2/users/{userId}/password_reset:
      post:
        summary: Request a code to reset a password
        description: Request a code to reset a password..
        operationId: UserService_PasswordReset
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2PasswordResetResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServicePasswordResetBody'
        tags:
          - UserService
    /v2/users/{userId}/password:
      post:
        summary: Change password
        description: Change the password of a user with either a verification code or the current password..
        operationId: UserService_SetPassword
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2SetPasswordResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2UserServiceSetPasswordBody'
        tags:
          - UserService
    /v2/users/{userId}/authentication_methods:
      get:
        summary: List all possible authentication methods of a user
        description: List all possible authentication methods of a user like password, passwordless, (T)OTP and more..
        operationId: UserService_ListAuthenticationMethodTypes
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2ListAuthenticationMethodTypesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: domainQuery.includeWithoutDomain
            description: List also auth method types without domain information like passkey and U2F added through V1 APIs / Login UI.
            in: query
            required: false
            type: boolean
          - name: domainQuery.domain
            description: List only auth methods with specific domain.
            in: query
            required: false
            type: string
        tags:
          - UserService
    /v2/users/{userId}/authentication_factors/_search:
      post:
        operationId: UserService_ListAuthenticationFactors
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2ListAuthenticationFactorsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: authFactors
            description: Specify the Auth Factors you are interested in
            in: query
            required: false
            type: array
            items:
              type: string
              enum:
                - OTP
                - OTP_SMS
                - OTP_EMAIL
                - U2F
            collectionFormat: multi
          - name: states
            description: Specify the state of the Auth Factors
            in: query
            required: false
            type: array
            items:
              type: string
              enum:
                - AUTH_FACTOR_STATE_UNSPECIFIED
                - AUTH_FACTOR_STATE_NOT_READY
                - AUTH_FACTOR_STATE_READY
                - AUTH_FACTOR_STATE_REMOVED
            collectionFormat: multi
        tags:
          - UserService
    /v2/users/{userId}/invite_code:
      post:
        summary: Create an invite code for a user
        description: Create an invite code for a user to initialize their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
        operationId: UserService_CreateInviteCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2CreateInviteCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceCreateInviteCodeBody'
        tags:
          - UserService
    /v2/users/{userId}/invite_code/resend:
      post:
        summary: Resend an invite code for a user
        description: |-
          Resend an invite code for a user to initialize their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
          A resend is only possible if a code has been created previously and sent to the user. If there is no code or it was directly returned, an error will be returned.
        operationId: UserService_ResendInviteCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2ResendInviteCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
    /v2/users/{userId}/invite_code/verify:
      post:
        summary: Verify an invite code for a user
        description: |-
          Verify the invite code of a user previously issued. This will set their email to a verified state and
          allow the user to set up their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
        operationId: UserService_VerifyInviteCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2VerifyInviteCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/UserServiceVerifyInviteCodeBody'
        tags:
          - UserService
    /v2/organizations:
      post:
        summary: Create an Organization
        description: Create a new organization with an administrative user. If no specific roles are sent for the users, they will be granted the role ORG_OWNER.
        operationId: OrganizationService_AddOrganization
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/orgv2AddOrganizationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/orgv2AddOrganizationRequest'
        tags:
          - OrganizationService
    /v2/organizations/_search:
      post:
        summary: Search Organizations
        description: Search for Organizations. By default, we will return all organization of the instance. Make sure to include a limit and sorting for pagination..
        operationId: OrganizationService_ListOrganizations
        responses:
          '200':
            description: A list of all organizations matching the query
            schema:
              $ref: '#/definitions/v2ListOrganizationsResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v2ListOrganizationsRequest'
        tags:
          - OrganizationService
    /v2beta/users/human:
      post:
        summary: Create a new human user
        description: |-
          Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA)
        operationId: UserService_AddHumanUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaAddHumanUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaAddHumanUserRequest'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}:
      get:
        summary: User by ID
        description: |-
          Returns the full user object (human or machine) including the profile, email, etc.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_GetUserByID
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaGetUserByIDResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            description: User ID of the user you like to get.
            in: path
            required: true
            type: string
        tags:
          - UserService
        deprecated: true
      delete:
        summary: Delete user
        description: |-
          The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_DeleteUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaDeleteUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
        deprecated: true
      put:
        summary: Update User
        description: |-
          Update all information from a user.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_UpdateHumanUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaUpdateHumanUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: username
            in: query
            required: false
            type: string
          - name: profile.givenName
            in: query
            required: true
            type: string
          - name: profile.familyName
            in: query
            required: true
            type: string
          - name: profile.nickName
            in: query
            required: false
            type: string
          - name: profile.displayName
            in: query
            required: false
            type: string
          - name: profile.preferredLanguage
            in: query
            required: false
            type: string
          - name: profile.gender
            in: query
            required: false
            type: string
            enum:
              - GENDER_UNSPECIFIED
              - GENDER_FEMALE
              - GENDER_MALE
              - GENDER_DIVERSE
            default: GENDER_UNSPECIFIED
          - name: email.email
            in: query
            required: true
            type: string
          - name: email.sendCode.urlTemplate
            description: '"Optionally set a url_template, which will be used in the verification mail sent by ZITADEL to guide the user to your verification page. If no template is set, the default ZITADEL url will be used."'
            in: query
            required: false
            type: string
          - name: email.isVerified
            in: query
            required: false
            type: boolean
          - name: phone.phone
            in: query
            required: false
            type: string
          - name: phone.isVerified
            in: query
            required: false
            type: boolean
          - name: password.password.password
            in: query
            required: true
            type: string
          - name: password.password.changeRequired
            in: query
            required: false
            type: boolean
          - name: password.hashedPassword.hash
            description: '"Encoded hash of a password in Modular Crypt Format: https://zitadel.com/docs/concepts/architecture/secrets#hashed-secrets"'
            in: query
            required: true
            type: string
          - name: password.hashedPassword.changeRequired
            in: query
            required: false
            type: boolean
          - name: password.currentPassword
            in: query
            required: true
            type: string
          - name: password.verificationCode
            description: '"the verification code generated during password reset request"'
            in: query
            required: true
            type: string
        tags:
          - UserService
        deprecated: true
    /v2beta/users:
      post:
        summary: Search Users
        description: |-
          Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_ListUsers
        responses:
          '200':
            description: A list of all users matching the query
            schema:
              $ref: '#/definitions/userv2betaListUsersResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaListUsersRequest'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/email:
      post:
        summary: Change the user email
        description: |-
          Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_SetEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaSetEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceSetEmailBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/email/resend:
      post:
        summary: Resend code to verify user email
        description: |-
          Resend code to verify user email

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_ResendEmailCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaResendEmailCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceResendEmailCodeBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/email/verify:
      post:
        summary: Verify the email
        description: |-
          Verify the email with the generated code.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_VerifyEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaVerifyEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceVerifyEmailBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/phone:
      delete:
        summary: Delete the user phone
        description: Delete the phone number of a user.
        operationId: UserService_RemovePhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaRemovePhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceRemovePhoneBody'
        tags:
          - UserService
        deprecated: true
      post:
        summary: Set the user phone
        description: |-
          Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_SetPhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaSetPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceSetPhoneBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/phone/resend:
      post:
        summary: Resend code to verify user phone
        description: |-
          Resend code to verify user phone

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_ResendPhoneCode
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaResendPhoneCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceResendPhoneCodeBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/phone/verify:
      post:
        summary: Verify the phone
        description: |-
          Verify the phone with the generated code.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_VerifyPhone
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaVerifyPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceVerifyPhoneBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/deactivate:
      post:
        summary: Deactivate user
        description: |-
          The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_DeactivateUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaDeactivateUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceDeactivateUserBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/reactivate:
      post:
        summary: Reactivate user
        description: |-
          Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_ReactivateUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaReactivateUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceReactivateUserBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/lock:
      post:
        summary: Lock user
        description: |-
          The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_LockUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaLockUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceLockUserBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/unlock:
      post:
        summary: Unlock user
        description: |-
          The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_UnlockUser
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaUnlockUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceUnlockUserBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/passkeys:
      post:
        summary: Start the registration of passkey for a user
        description: |-
          Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_RegisterPasskey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaRegisterPasskeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceRegisterPasskeyBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/passkeys/{passkeyId}:
      post:
        summary: Verify a passkey for a user
        description: |-
          Verify the passkey registration with the public key credential.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_VerifyPasskeyRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaVerifyPasskeyRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: passkeyId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceVerifyPasskeyRegistrationBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/passkeys/registration_link:
      post:
        summary: Create a passkey registration link for a user
        description: |-
          Create a passkey registration link which includes a code and either return it or send it to the user.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_CreatePasskeyRegistrationLink
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaCreatePasskeyRegistrationLinkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceCreatePasskeyRegistrationLinkBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/u2f:
      post:
        summary: Start the registration of a u2f token for a user
        description: |-
          Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_RegisterU2F
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaRegisterU2FResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceRegisterU2FBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/u2f/{u2fId}:
      post:
        summary: Verify a u2f token for a user
        description: |-
          Verify the u2f token registration with the public key credential.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_VerifyU2FRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaVerifyU2FRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: u2fId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceVerifyU2FRegistrationBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/totp:
      delete:
        summary: Remove TOTP generator from a user
        description: |-
          Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_RemoveTOTP
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaRemoveTOTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
        deprecated: true
      post:
        summary: Start the registration of a TOTP generator for a user
        description: |-
          Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_RegisterTOTP
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaRegisterTOTPResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceRegisterTOTPBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/totp/verify:
      post:
        summary: Verify a TOTP generator for a user
        description: |-
          Verify the TOTP registration with a generated code.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_VerifyTOTPRegistration
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaVerifyTOTPRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceVerifyTOTPRegistrationBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/otp_sms:
      delete:
        summary: Remove One-Time Password (OTP) SMS from a user
        description: |-
          Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_RemoveOTPSMS
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaRemoveOTPSMSResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
        deprecated: true
      post:
        summary: Add OTP SMS for a user
        description: |-
          Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_AddOTPSMS
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaAddOTPSMSResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceAddOTPSMSBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/otp_email:
      delete:
        summary: Remove One-Time Password (OTP) Email from a user
        description: |-
          Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_RemoveOTPEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaRemoveOTPEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
        deprecated: true
      post:
        summary: Add OTP Email for a user
        description: |-
          Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_AddOTPEmail
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaAddOTPEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceAddOTPEmailBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/idp_intents:
      post:
        summary: Start flow with an identity provider
        description: |-
          Start a flow with an identity provider, for external login, registration or linking.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_StartIdentityProviderIntent
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaStartIdentityProviderIntentResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaStartIdentityProviderIntentRequest'
        tags:
          - UserService
        deprecated: true
    /v2beta/idp_intents/{idpIntentId}:
      post:
        summary: Retrieve the information returned by the identity provider
        description: |-
          Retrieve the information returned by the identity provider for registration or updating an existing user with new information.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_RetrieveIdentityProviderIntent
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaRetrieveIdentityProviderIntentResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpIntentId
            description: ID of the idp intent, previously returned on the success response of the IDP callback
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceRetrieveIdentityProviderIntentBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/links:
      post:
        summary: Add link to an identity provider to an user
        description: |-
          Add link to an identity provider to an user.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_AddIDPLink
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaAddIDPLinkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceAddIDPLinkBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/password_reset:
      post:
        summary: Request a code to reset a password
        description: |-
          Request a code to reset a password.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_PasswordReset
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaPasswordResetResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServicePasswordResetBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/password:
      post:
        summary: Change password
        description: |-
          Change the password of a user with either a verification code or the current password.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_SetPassword
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaSetPasswordResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv2betaUserServiceSetPasswordBody'
        tags:
          - UserService
        deprecated: true
    /v2beta/users/{userId}/authentication_methods:
      get:
        summary: List all possible authentication methods of a user
        description: |-
          List all possible authentication methods of a user like password, passwordless, (T)OTP and more.

          Deprecated: please move to the corresponding endpoint under user service v2 (GA).
        operationId: UserService_ListAuthenticationMethodTypes
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/userv2betaListAuthenticationMethodTypesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userId
            in: path
            required: true
            type: string
        tags:
          - UserService
        deprecated: true
    /v2beta/organizations:
      post:
        summary: Create an Organization
        description: Create a new organization with an administrative user. If no specific roles are sent for the users, they will be granted the role ORG_OWNER.
        operationId: OrganizationService_AddOrganization
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/orgv2betaAddOrganizationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/orgv2betaAddOrganizationRequest'
        tags:
          - OrganizationService
    /resources/v3alpha/actions/targets:
      post:
        summary: Create a target
        description: Create a new target, which can be used in executions.
        operationId: ZITADELActions_CreateTarget
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v3alphaCreateTargetResponse'
          '201':
            description: Target successfully created
            schema:
              $ref: '#/definitions/v3alphaCreateTargetResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: target
            in: body
            required: true
            schema:
              $ref: '#/definitions/v3alphaTarget'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELActions
    /resources/v3alpha/actions/targets/{id}:
      get:
        summary: Target by ID
        description: Returns the target identified by the requested ID.
        operationId: ZITADELActions_GetTarget
        responses:
          '200':
            description: Target successfully retrieved
            schema:
              $ref: '#/definitions/v3alphaGetTargetResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELActions
      delete:
        summary: Delete a target
        description: Delete an existing target. This will remove it from any configured execution as well.
        operationId: ZITADELActions_DeleteTarget
        responses:
          '200':
            description: Target successfully deleted
            schema:
              $ref: '#/definitions/v3alphaDeleteTargetResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELActions
      patch:
        summary: Patch a target
        description: Patch an existing target.
        operationId: ZITADELActions_PatchTarget
        responses:
          '200':
            description: Target successfully updated or left unchanged
            schema:
              $ref: '#/definitions/v3alphaPatchTargetResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: target
            in: body
            required: true
            schema:
              $ref: '#/definitions/actionv3alphaPatchTarget'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELActions
    /resources/v3alpha/actions/targets/_search:
      post:
        summary: Search targets
        description: |-
          Search all matching targets. By default all targets of the instance are returned.
          Make sure to include a limit and sorting for pagination.
        operationId: ZITADELActions_SearchTargets
        responses:
          '200':
            description: A list of all targets matching the query
            schema:
              $ref: '#/definitions/v3alphaSearchTargetsResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: filters
            description: Define the criteria to query for.
            in: body
            required: true
            schema:
              type: array
              items:
                type: object
                $ref: '#/definitions/v3alphaTargetSearchFilter'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: query.offset
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. If not configured otherwise, the default is 100, the maximum is 1000. If the limit exceeds the maximum, ZITADEL throws an error.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.desc
            description: default is ascending, because together with the creation date sorting column, this returns the most deterministic pagination results.
            in: query
            required: false
            type: boolean
          - name: sortingColumn
            description: The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
            in: query
            required: false
            type: string
            enum:
              - TARGET_FIELD_NAME_UNSPECIFIED
              - TARGET_FIELD_NAME_ID
              - TARGET_FIELD_NAME_CREATED_DATE
              - TARGET_FIELD_NAME_CHANGED_DATE
              - TARGET_FIELD_NAME_NAME
              - TARGET_FIELD_NAME_TARGET_TYPE
              - TARGET_FIELD_NAME_URL
              - TARGET_FIELD_NAME_TIMEOUT
              - TARGET_FIELD_NAME_INTERRUPT_ON_ERROR
            default: TARGET_FIELD_NAME_UNSPECIFIED
        tags:
          - ZITADELActions
    /resources/v3alpha/actions/executions:
      put:
        summary: Sets an execution to call a target or include the targets of another execution.
        description: Setting an empty list of targets will remove all targets from the execution, making it a noop.
        operationId: ZITADELActions_SetExecution
        responses:
          '200':
            description: Execution successfully updated or left unchanged
            schema:
              $ref: '#/definitions/v3alphaSetExecutionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v3alphaSetExecutionRequest'
        tags:
          - ZITADELActions
    /resources/v3alpha/actions/executions/_search:
      post:
        summary: Search executions
        description: |-
          Search all matching executions. By default all executions of the instance are returned that have at least one execution target.
          Make sure to include a limit and sorting for pagination.
        operationId: ZITADELActions_SearchExecutions
        responses:
          '200':
            description: A list of all non noop executions matching the query
            schema:
              $ref: '#/definitions/v3alphaSearchExecutionsResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: filters
            description: Define the criteria to query for.
            in: body
            required: true
            schema:
              type: array
              items:
                type: object
                $ref: '#/definitions/v3alphaExecutionSearchFilter'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: query.offset
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. If not configured otherwise, the default is 100, the maximum is 1000. If the limit exceeds the maximum, ZITADEL throws an error.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.desc
            description: default is ascending, because together with the creation date sorting column, this returns the most deterministic pagination results.
            in: query
            required: false
            type: boolean
          - name: sortingColumn
            description: The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
            in: query
            required: false
            type: string
            enum:
              - EXECUTION_FIELD_NAME_UNSPECIFIED
              - EXECUTION_FIELD_NAME_ID
              - EXECUTION_FIELD_NAME_CREATED_DATE
              - EXECUTION_FIELD_NAME_CHANGED_DATE
            default: EXECUTION_FIELD_NAME_UNSPECIFIED
        tags:
          - ZITADELActions
    /resources/v3alpha/actions/executions/functions:
      get:
        summary: List all available functions
        description: List all available functions which can be used as condition for executions.
        operationId: ZITADELActions_ListExecutionFunctions
        responses:
          '200':
            description: List all functions successfully
            schema:
              $ref: '#/definitions/v3alphaListExecutionFunctionsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - ZITADELActions
    /resources/v3alpha/actions/executions/methods:
      get:
        summary: List all available methods
        description: List all available methods which can be used as condition for executions.
        operationId: ZITADELActions_ListExecutionMethods
        responses:
          '200':
            description: List all methods successfully
            schema:
              $ref: '#/definitions/v3alphaListExecutionMethodsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - ZITADELActions
    /resources/v3alpha/actions/executions/services:
      get:
        summary: List all available service
        description: List all available services which can be used as condition for executions.
        operationId: ZITADELActions_ListExecutionServices
        responses:
          '200':
            description: List all services successfully
            schema:
              $ref: '#/definitions/v3alphaListExecutionServicesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - ZITADELActions
    /:
      post:
        summary: Create a set of debug events.
        description: Create a set of debug events which will be pushed to the eventstore and reduced to the projection.
        operationId: ZITADELDebugEvents_CreateDebugEvents
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v3alphaCreateDebugEventsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: events
            in: body
            required: true
            schema:
              type: array
              items:
                type: object
                $ref: '#/definitions/debug_eventsv3alphaEvent'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: aggregateId
            description: unique identifier for the aggregate we want to push events to.
            in: query
            required: true
            type: string
        tags:
          - ZITADELDebugEvents
    /v3alpha/debug_events/{id}:
      get:
        operationId: ZITADELDebugEvents_GetDebugEventsStateById
        responses:
          '200':
            description: Debug events state successfully retrieved
            schema:
              $ref: '#/definitions/v3alphaGetDebugEventsStateByIdResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the aggregate.
            in: path
            required: true
            type: string
          - name: triggerBulk
            in: query
            required: false
            type: boolean
        tags:
          - ZITADELDebugEvents
    /v3alpha/debug_events:
      get:
        operationId: ZITADELDebugEvents_ListDebugEventsStates
        responses:
          '200':
            description: Debug events states successfully retrieved
            schema:
              $ref: '#/definitions/v3alphaListDebugEventsStatesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: triggerBulk
            in: query
            required: false
            type: boolean
        tags:
          - ZITADELDebugEvents
    /resources/v3alpha/users/_search:
      post:
        summary: Search users
        description: |-
          Search all matching users. By default, we will return all users of your instance.
          Make sure to include a limit and sorting for pagination.
        operationId: ZITADELUsers_SearchUsers
        responses:
          '200':
            description: A list of all users matching the query
            schema:
              $ref: '#/definitions/v3alphaSearchUsersResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: filters
            description: Define the criteria to query for.
            in: body
            required: true
            schema:
              type: array
              items:
                type: object
                $ref: '#/definitions/resourcesuserv3alphaSearchFilter'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: query.offset
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. If not configured otherwise, the default is 100, the maximum is 1000. If the limit exceeds the maximum, ZITADEL throws an error.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.desc
            description: default is ascending, because together with the creation date sorting column, this returns the most deterministic pagination results.
            in: query
            required: false
            type: boolean
          - name: sortingColumn
            description: the field the result is sorted.
            in: query
            required: false
            type: string
            enum:
              - FIELD_NAME_UNSPECIFIED
              - FIELD_NAME_ID
              - FIELD_NAME_CREATION_DATE
              - FIELD_NAME_CHANGE_DATE
              - FIELD_NAME_EMAIL
              - FIELD_NAME_PHONE
              - FIELD_NAME_STATE
              - FIELD_NAME_SCHEMA_ID
              - FIELD_NAME_SCHEMA_TYPE
            default: FIELD_NAME_UNSPECIFIED
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}:
      get:
        summary: User by ID
        description: Returns the user identified by the requested ID.
        operationId: ZITADELUsers_GetUser
        responses:
          '200':
            description: User successfully retrieved
            schema:
              $ref: '#/definitions/v3alphaGetUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
      delete:
        summary: Delete a user
        description: |-
          Delete an existing user and change the state to 'deleted'.
          The user will be able to log in anymore.
        operationId: ZITADELUsers_DeleteUser
        responses:
          '200':
            description: User successfully deleted
            schema:
              $ref: '#/definitions/userv3alphaDeleteUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
      patch:
        summary: Patch a user
        description: Patch an existing user with data based on a user schema.
        operationId: ZITADELUsers_PatchUser
        responses:
          '200':
            description: User successfully updated or left unchanged
            schema:
              $ref: '#/definitions/v3alphaPatchUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: user
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaPatchUser'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users:
      post:
        summary: Create a user
        description: Create a new user with an optional data schema.
        operationId: ZITADELUsers_CreateUser
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v3alphaCreateUserResponse'
          '201':
            description: User successfully created
            schema:
              $ref: '#/definitions/v3alphaCreateUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: user
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaCreateUser'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/_deactivate:
      post:
        summary: Deactivate a user
        description: |-
          Deactivate an existing user and change the state 'deactivated'.
          The user will not be able to log in anymore.
          Use deactivate user when the user should not be able to use the account anymore,
          but you still need access to the user data.

          The endpoint returns an error if the user is already in the state 'deactivated'.
        operationId: ZITADELUsers_DeactivateUser
        responses:
          '200':
            description: User successfully deactivated
            schema:
              $ref: '#/definitions/userv3alphaDeactivateUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/_activate:
      post:
        summary: Activate a user
        description: |-
          Activate a previously deactivated user and change the state to 'active'.
          The user will be able to log in again.

          The endpoint returns an error if the user is not in the state 'deactivated'.
        operationId: ZITADELUsers_ActivateUser
        responses:
          '200':
            description: User successfully activated
            schema:
              $ref: '#/definitions/v3alphaActivateUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/_lock:
      post:
        summary: Lock a user
        description: |-
          Lock an existing user and change the state 'locked'.
          The user will not be able to log in anymore.
          Use lock user when the user should temporarily not be able to log in
          because of an event that happened (wrong password, etc.)

          The endpoint returns an error if the user is already in the state 'locked'.
        operationId: ZITADELUsers_LockUser
        responses:
          '200':
            description: User successfully locked
            schema:
              $ref: '#/definitions/userv3alphaLockUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/_unlock:
      post:
        summary: Unlock a user
        description: |-
          Unlock a previously locked user and change the state to 'active'.
          The user will be able to log in again.

          The endpoint returns an error if the user is not in the state 'locked'.
        operationId: ZITADELUsers_UnlockUser
        responses:
          '200':
            description: User successfully unlocked
            schema:
              $ref: '#/definitions/userv3alphaUnlockUserResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/email:
      put:
        summary: Set contact email
        description: |-
          Add or update the contact email address of a user.
          If the email is not passed as verified, a verification code will be generated,
          which can be either returned or will be sent to the user by email.
        operationId: ZITADELUsers_SetContactEmail
        responses:
          '200':
            description: Email successfully set
            schema:
              $ref: '#/definitions/v3alphaSetContactEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: email
            description: Set the user's contact email and it's verification state.
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaSetEmail'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/email/_verify:
      post:
        summary: Verify the contact email
        description: Verify the contact email with the provided code.
        operationId: ZITADELUsers_VerifyContactEmail
        responses:
          '200':
            description: Email successfully verified
            schema:
              $ref: '#/definitions/v3alphaVerifyContactEmailResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: verificationCode
            description: Set the verification code generated during the set contact email request.
            in: body
            required: true
            schema:
              type: string
              example: SKJd342k
              maxLength: 20
              minLength: 1
              required:
                - verificationCode
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/email/_resend:
      post:
        summary: Resend the contact email code
        description: Resend the email with the verification code for the contact email address.
        operationId: ZITADELUsers_ResendContactEmailCode
        responses:
          '200':
            description: Code resend successfully requested
            schema:
              $ref: '#/definitions/v3alphaResendContactEmailCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ZITADELUsersResendContactEmailCodeBody'
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/phone:
      put:
        summary: Set contact phone
        description: |-
          Add or update the contact phone number of a user.
          If the phone is not passed as verified, a verification code will be generated,
          which can be either returned or will be sent to the user by SMS.
        operationId: ZITADELUsers_SetContactPhone
        responses:
          '200':
            description: Contact phone successfully set
            schema:
              $ref: '#/definitions/v3alphaSetContactPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: phone
            description: Set the user's contact phone and it's verification state.
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaSetPhone'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/phone/_verify:
      post:
        summary: Verify the contact phone
        description: Verify the contact phone with the provided code.
        operationId: ZITADELUsers_VerifyContactPhone
        responses:
          '200':
            description: Contact phone successfully verified
            schema:
              $ref: '#/definitions/v3alphaVerifyContactPhoneResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: verificationCode
            description: Set the verification code generated during the set contact phone request.
            in: body
            required: true
            schema:
              type: string
              example: SKJd342k
              maxLength: 20
              minLength: 1
              required:
                - verificationCode
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/phone/_resend:
      post:
        summary: Resend the contact phone code
        description: Resend the phone with the verification code for the contact phone number.
        operationId: ZITADELUsers_ResendContactPhoneCode
        responses:
          '200':
            description: Code resend successfully requested
            schema:
              $ref: '#/definitions/v3alphaResendContactPhoneCodeResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ZITADELUsersResendContactPhoneCodeBody'
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/username:
      post:
        summary: Add a username
        description: Add a new unique username to a user. The username will be used to identify the user on authentication.
        operationId: ZITADELUsers_AddUsername
        responses:
          '200':
            description: Username successfully added
            schema:
              $ref: '#/definitions/v3alphaAddUsernameResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: username
            description: Set the user's new username.
            in: body
            required: true
            schema:
              $ref: '#/definitions/v3alphaSetUsername'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/username/{usernameId}:
      delete:
        summary: Remove a username
        description: Remove an existing username of a user, so it cannot be used for authentication anymore.
        operationId: ZITADELUsers_RemoveUsername
        responses:
          '200':
            description: Username successfully removed
            schema:
              $ref: '#/definitions/v3alphaRemoveUsernameResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: usernameId
            description: unique identifier of the username.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/password:
      post:
        summary: Set a password
        description: Add, update or reset a user's password with either a verification code or the current password.
        operationId: ZITADELUsers_SetPassword
        responses:
          '200':
            description: Password successfully set
            schema:
              $ref: '#/definitions/userv3alphaSetPasswordResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: newPassword
            description: Provide the new password (in plain text or as hash).
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaSetPassword'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/password/_reset:
      post:
        summary: Request password reset
        description: Request a code to be able to set a new password.
        operationId: ZITADELUsers_RequestPasswordReset
        responses:
          '200':
            description: Password reset successfully requested
            schema:
              $ref: '#/definitions/v3alphaRequestPasswordResetResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ZITADELUsersRequestPasswordResetBody'
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/webauthn:
      post:
        summary: Start a WebAuthN registration
        description: |-
          Start the registration of a new WebAuthN device (e.g. Passkeys) for a user.
          As a response the public key credential creation options are returned,
          which are used to verify the device.
        operationId: ZITADELUsers_StartWebAuthNRegistration
        responses:
          '200':
            description: WebAuthN registration successfully started
            schema:
              $ref: '#/definitions/v3alphaStartWebAuthNRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: registration
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaStartWebAuthNRegistration'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/webauthn/{webAuthNId}/_verify:
      post:
        summary: Verify a WebAuthN registration
        description: Verify the WebAuthN registration started by StartWebAuthNRegistration with the public key credential.
        operationId: ZITADELUsers_VerifyWebAuthNRegistration
        responses:
          '200':
            description: WebAuthN registration successfully verified
            schema:
              $ref: '#/definitions/v3alphaVerifyWebAuthNRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: webAuthNId
            description: unique identifier of the WebAuthN registration, which was returned in the start webauthn registration.
            in: path
            required: true
            type: string
          - name: verify
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaVerifyWebAuthNRegistration'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/webauthn/registration_link:
      post:
        summary: Create a WebAuthN registration link
        description: |-
          Create a link, which includes a code, that can either be returned or directly sent to the user.
          The code will allow the user to start a new WebAuthN registration.
        operationId: ZITADELUsers_CreateWebAuthNRegistrationLink
        responses:
          '200':
            description: WebAuthN registration successfully created
            schema:
              $ref: '#/definitions/v3alphaCreateWebAuthNRegistrationLinkResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/ZITADELUsersCreateWebAuthNRegistrationLinkBody'
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/webauthn/{webAuthNId}:
      delete:
        summary: Remove a WebAuthN authenticator
        description: Remove an existing WebAuthN authenticator from a user, so it cannot be used for authentication anymore.
        operationId: ZITADELUsers_RemoveWebAuthNAuthenticator
        responses:
          '200':
            description: WebAuthN authenticator successfully removed
            schema:
              $ref: '#/definitions/v3alphaRemoveWebAuthNAuthenticatorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: webAuthNId
            description: unique identifier of the WebAuthN authenticator.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/totp:
      post:
        summary: Start a TOTP registration
        description: |-
          Start the registration of a new time-based one-time password (TOTP) generator for a user.
          As a response a secret is returned, which is used to initialize a TOTP app or device.
        operationId: ZITADELUsers_StartTOTPRegistration
        responses:
          '200':
            description: TOTP registration successfully started
            schema:
              $ref: '#/definitions/v3alphaStartTOTPRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/totp/{totpId}/_verify:
      post:
        summary: Verify a TOTP registration
        description: Verify the time-based one-time password (TOTP) registration with the generated code.
        operationId: ZITADELUsers_VerifyTOTPRegistration
        responses:
          '200':
            description: TOTP registration successfully verified
            schema:
              $ref: '#/definitions/userv3alphaVerifyTOTPRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: totpId
            description: unique identifier of the TOTP registration, which was returned in the start TOTP registration.
            in: path
            required: true
            type: string
          - name: code
            description: Code generated by TOTP app or device.
            in: body
            required: true
            schema:
              type: string
              example: '123456'
              maxLength: 9
              minLength: 6
              required:
                - code
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/totp/{totpId}:
      delete:
        summary: Remove a TOTP authenticator
        description: Remove an existing time-based one-time password (TOTP) authenticator from a user, so it cannot be used for authentication anymore.
        operationId: ZITADELUsers_RemoveTOTPAuthenticator
        responses:
          '200':
            description: TOTP authenticator successfully removed
            schema:
              $ref: '#/definitions/v3alphaRemoveTOTPAuthenticatorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: totpId
            description: unique identifier of the TOTP authenticator.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/otp_sms:
      post:
        summary: Add a OTP SMS authenticator
        description: |-
          Add a new one-time password (OTP) SMS authenticator to a user.
          If the phone is not passed as verified, a verification code will be generated,
          which can be either returned or will be sent to the user by SMS.
        operationId: ZITADELUsers_AddOTPSMSAuthenticator
        responses:
          '200':
            description: OTP SMS authenticator successfully added
            schema:
              $ref: '#/definitions/v3alphaAddOTPSMSAuthenticatorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: phone
            description: Set the user's phone for the OTP SMS authenticator and it's verification state.
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaSetPhone'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/otp_sms/{otpSmsId}/_verify:
      post:
        summary: Verify OTP SMS registration
        description: Verify the OTP SMS registration with the provided code.
        operationId: ZITADELUsers_VerifyOTPSMSRegistration
        responses:
          '200':
            description: OTP SMS authenticator successfully verified
            schema:
              $ref: '#/definitions/v3alphaVerifyOTPSMSRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: otpSmsId
            description: unique identifier of the OTP SMS registration, which was returned in the add OTP SMS.
            in: path
            required: true
            type: string
          - name: code
            description: Set the verification code generated during the add OTP SMS request.
            in: body
            required: true
            schema:
              type: string
              example: SKJd342k
              maxLength: 200
              minLength: 1
              required:
                - code
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/otp_sms/{otpSmsId}:
      delete:
        summary: Remove a OTP SMS authenticator
        description: Remove an existing one-time password (OTP) SMS authenticator from a user, so it cannot be used for authentication anymore.
        operationId: ZITADELUsers_RemoveOTPSMSAuthenticator
        responses:
          '200':
            description: OTP SMS authenticator successfully removed
            schema:
              $ref: '#/definitions/v3alphaRemoveOTPSMSAuthenticatorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: otpSmsId
            description: unique identifier of the OTP SMS authenticator.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/otp_email:
      post:
        summary: Add a OTP Email authenticator
        description: |-
          Add a new one-time password (OTP) Email authenticator to a user.
          If the email is not passed as verified, a verification code will be generated,
          which can be either returned or will be sent to the user by email.
        operationId: ZITADELUsers_AddOTPEmailAuthenticator
        responses:
          '200':
            description: OTP Email authenticator successfully added
            schema:
              $ref: '#/definitions/v3alphaAddOTPEmailAuthenticatorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: email
            description: Set the user's email for the OTP Email authenticator and it's verification state.
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaSetEmail'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/otp_email/{otpEmailId}/_verify:
      post:
        summary: Verify OTP Email registration
        description: Verify the OTP Email registration with the provided code.
        operationId: ZITADELUsers_VerifyOTPEmailRegistration
        responses:
          '200':
            description: OTP Email authenticator successfully verified
            schema:
              $ref: '#/definitions/v3alphaVerifyOTPEmailRegistrationResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: otpEmailId
            description: unique identifier of the OTP Email registration, which was returned in the add OTP Email.
            in: path
            required: true
            type: string
          - name: code
            description: Set the verification code generated during the add OTP Email request.
            in: body
            required: true
            schema:
              type: string
              example: SKJd342k
              maxLength: 200
              minLength: 1
              required:
                - code
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/otp_email/{otpEmailId}:
      delete:
        summary: Remove a OTP Email authenticator
        description: Remove an existing one-time password (OTP) Email authenticator from a user, so it cannot be used for authentication anymore.
        operationId: ZITADELUsers_RemoveOTPEmailAuthenticator
        responses:
          '200':
            description: OTP Email authenticator successfully removed
            schema:
              $ref: '#/definitions/v3alphaRemoveOTPEmailAuthenticatorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: otpEmailId
            description: unique identifier of the OTP Email authenticator.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/idp_intents:
      post:
        summary: Start an IDP authentication intent
        description: Start a new authentication intent on configured identity provider (IDP) for external login, registration or linking.
        operationId: ZITADELUsers_StartIdentityProviderIntent
        responses:
          '200':
            description: IDP intent successfully started
            schema:
              $ref: '#/definitions/userv3alphaStartIdentityProviderIntentResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/userv3alphaStartIdentityProviderIntentRequest'
        tags:
          - ZITADELUsers
    /resources/v3alpha/idp_intents/{idpIntentId}:
      get:
        summary: Get the information of the IDP authentication intent
        description: Get the information returned by the identity provider (IDP) for registration or updating an existing user with new information.
        operationId: ZITADELUsers_GetIdentityProviderIntent
        responses:
          '200':
            description: IDP intent successfully retrieved
            schema:
              $ref: '#/definitions/v3alphaGetIdentityProviderIntentResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: idpIntentId
            description: ID of the identity provider (IDP) intent, previously returned on the success response of the start identity provider intent.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
          - name: idpIntentToken
            description: Token of the identity provider (IDP) intent, previously returned on the success response of the start identity provider intent.
            in: query
            required: true
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/idps:
      post:
        summary: Add an IDP authenticator to a user
        description: |-
          Add a new identity provider (IDP) authenticator to an existing user.
          This will allow the user to authenticate with the provided IDP.
        operationId: ZITADELUsers_AddIDPAuthenticator
        responses:
          '200':
            description: IDP authenticator successfully added
            schema:
              $ref: '#/definitions/v3alphaAddIDPAuthenticatorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: authenticator
            in: body
            required: true
            schema:
              $ref: '#/definitions/v3alphaIDPAuthenticator'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/users/{id}/idps/{idpId}:
      delete:
        summary: Remove an IDP authenticator
        description: Remove an existing identity provider (IDP) authenticator from a user, so it cannot be used for authentication anymore.
        operationId: ZITADELUsers_RemoveIDPAuthenticator
        responses:
          '200':
            description: IDP authenticator successfully removed
            schema:
              $ref: '#/definitions/v3alphaRemoveIDPAuthenticatorResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the user.
            in: path
            required: true
            type: string
          - name: idpId
            description: unique identifier of the identity provider (IDP) authenticator.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: organization.orgId
            in: query
            required: false
            type: string
          - name: organization.orgDomain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUsers
    /resources/v3alpha/user_schemas/_search:
      post:
        summary: Search user schemas
        description: Search all matching user schemas. By default, we will return all user schema of your instance. Make sure to include a limit and sorting for pagination.
        operationId: ZITADELUserSchemas_SearchUserSchemas
        responses:
          '200':
            description: A list of all user schema matching the search
            schema:
              $ref: '#/definitions/v3alphaSearchUserSchemasResponse'
          '400':
            description: invalid search
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: filters
            description: Define the criteria to filter for.
            in: body
            required: true
            schema:
              type: array
              items:
                type: object
                $ref: '#/definitions/resourcesuserschemav3alphaSearchFilter'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
          - name: query.offset
            in: query
            required: false
            type: string
            format: uint64
          - name: query.limit
            description: Maximum amount of events returned. If not configured otherwise, the default is 100, the maximum is 1000. If the limit exceeds the maximum, ZITADEL throws an error.
            in: query
            required: false
            type: integer
            format: int64
          - name: query.desc
            description: default is ascending, because together with the creation date sorting column, this returns the most deterministic pagination results.
            in: query
            required: false
            type: boolean
          - name: sortingColumn
            description: The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
            in: query
            required: false
            type: string
            enum:
              - FIELD_NAME_UNSPECIFIED
              - FIELD_NAME_TYPE
              - FIELD_NAME_STATE
              - FIELD_NAME_REVISION
              - FIELD_NAME_CHANGE_DATE
              - FIELD_NAME_CREATION_DATE
            default: FIELD_NAME_UNSPECIFIED
        tags:
          - ZITADELUserSchemas
    /resources/v3alpha/user_schemas/{id}:
      get:
        summary: User schema by ID
        description: Returns the user schema identified by the requested ID.
        operationId: ZITADELUserSchemas_GetUserSchema
        responses:
          '200':
            description: Schema successfully retrieved
            schema:
              $ref: '#/definitions/v3alphaGetUserSchemaResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the schema.
            in: path
            required: true
            type: string
        tags:
          - ZITADELUserSchemas
      delete:
        summary: Delete a user schema
        description: Delete an existing user schema. This operation is only allowed if there are no associated users to it.
        operationId: ZITADELUserSchemas_DeleteUserSchema
        responses:
          '200':
            description: Schema successfully deleted
            schema:
              $ref: '#/definitions/v3alphaDeleteUserSchemaResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the schema.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUserSchemas
      patch:
        summary: Patch a user schema
        description: Patch an existing user schema to a new revision. Users based on the current revision will not be affected until they are updated.
        operationId: ZITADELUserSchemas_PatchUserSchema
        responses:
          '200':
            description: Schema successfully updated
            schema:
              $ref: '#/definitions/v3alphaPatchUserSchemaResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the schema.
            in: path
            required: true
            type: string
          - name: userSchema
            in: body
            required: true
            schema:
              $ref: '#/definitions/userschemav3alphaPatchUserSchema'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUserSchemas
    /resources/v3alpha/user_schemas:
      post:
        summary: Create a user schema
        description: Create the first revision of a new user schema. The schema can then be used on users to store and validate their data.
        operationId: ZITADELUserSchemas_CreateUserSchema
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v3alphaCreateUserSchemaResponse'
          '201':
            description: Schema successfully created
            schema:
              $ref: '#/definitions/v3alphaCreateUserSchemaResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: userSchema
            in: body
            required: true
            schema:
              $ref: '#/definitions/v3alphaUserSchema'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUserSchemas
    /resources/v3alpha/user_schemas/{id}/_deactivate:
      post:
        summary: Deactivate a user schema
        description: Deactivate an existing user schema and change it into a read-only state. Users based on this schema cannot be updated anymore, but are still able to authenticate.
        operationId: ZITADELUserSchemas_DeactivateUserSchema
        responses:
          '200':
            description: Schema successfully deactivated
            schema:
              $ref: '#/definitions/v3alphaDeactivateUserSchemaResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the schema.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUserSchemas
    /resources/v3alpha/user_schemas/{id}/_reactivate:
      post:
        summary: Reactivate a user schema
        description: Reactivate an previously deactivated user schema and change it into an active state again.
        operationId: ZITADELUserSchemas_ReactivateUserSchema
        responses:
          '200':
            description: Schema successfully reactivated
            schema:
              $ref: '#/definitions/v3alphaReactivateUserSchemaResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            description: unique identifier of the schema.
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELUserSchemas
    /resources/v3alpha/web_keys:
      get:
        summary: List web key details for the instance
        description: List web key details for the instance
        operationId: ZITADELWebKeys_ListWebKeys
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v3alphaListWebKeysResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELWebKeys
      post:
        summary: Generate a web key pair for the instance
        description: Generate a private and public key pair. The private key can be used to sign OIDC tokens after activation. The public key can be used to valite OIDC tokens.
        operationId: ZITADELWebKeys_CreateWebKey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v3alphaCreateWebKeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: key
            in: body
            required: true
            schema:
              $ref: '#/definitions/v3alphaWebKey'
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELWebKeys
    /resources/v3alpha/web_keys/{id}/_activate:
      post:
        summary: Activate a signing key for the instance
        description: Switch the active signing web key. The previously active key will be deactivated. Note that the JWKs OIDC endpoint returns a cacheable response. Therefore it is not advised to activate a key that has been created within the cache duration (default is 5min), as the public key may not have been propagated to caches and clients yet.
        operationId: ZITADELWebKeys_ActivateWebKey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v3alphaActivateWebKeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELWebKeys
    /resources/v3alpha/web_keys/{id}:
      delete:
        summary: Delete a web key pair for the instance
        description: Delete a web key pair. Only inactive keys can be deleted. Once a key is deleted, any tokens signed by this key will be invalid.
        operationId: ZITADELWebKeys_DeleteWebKey
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v3alphaDeleteWebKeyResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: id
            in: path
            required: true
            type: string
          - name: instance.id
            in: query
            required: false
            type: string
          - name: instance.domain
            in: query
            required: false
            type: string
        tags:
          - ZITADELWebKeys
    /v2/saml/saml_requests/{samlRequestId}:
      get:
        summary: Get SAML Request details
        description: Get SAML Request details by ID. Returns details that are parsed from the application's SAML Request.
        operationId: SAMLService_GetSAMLRequest
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2GetSAMLRequestResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: samlRequestId
            description: ID of the SAML Request, as obtained from the redirect URL.
            in: path
            required: true
            type: string
        tags:
          - SAMLService
      post:
        summary: Finalize a SAML Request and get the response.
        description: Finalize a SAML Request and get the response definition for success or failure. The response must be handled as per the SAML definition to inform the application about the success or failure. On success, the response contains details for the application to obtain the SAMLResponse. This method can only be called once for an SAML request.
        operationId: SAMLService_CreateResponse
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/v2CreateResponseResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: samlRequestId
            description: ID of the SAML Request.
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SAMLServiceCreateResponseBody'
        tags:
          - SAMLService
    /v2/sessions/search:
      post:
        summary: Search sessions
        description: Search for sessions
        operationId: SessionService_ListSessions
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2ListSessionsResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2ListSessionsRequest'
        tags:
          - SessionService
    /v2/sessions/{sessionId}:
      get:
        summary: Get a session
        description: Get a session and all its information like the time of the user or password verification
        operationId: SessionService_GetSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2GetSessionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: sessionId
            in: path
            required: true
            type: string
          - name: sessionToken
            in: query
            required: false
            type: string
        tags:
          - SessionService
      delete:
        summary: Terminate an existing session
        description: Terminate your own session or if granted any other session.
        operationId: SessionService_DeleteSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2DeleteSessionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: sessionId
            description: '"id of the session to terminate"'
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2SessionServiceDeleteSessionBody'
        tags:
          - SessionService
      patch:
        summary: Update an existing session
        description: Update an existing session with new information.
        operationId: SessionService_SetSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2SetSessionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: sessionId
            description: '"id of the session to update"'
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2SessionServiceSetSessionBody'
        tags:
          - SessionService
    /v2/sessions:
      post:
        summary: Create a new session
        description: Create a new session. A token will be returned, which is required for further updates of the session.
        operationId: SessionService_CreateSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2CreateSessionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2CreateSessionRequest'
        tags:
          - SessionService
    /v2beta/sessions/search:
      post:
        summary: Search sessions
        description: Search for sessions
        operationId: SessionService_ListSessions
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2betaListSessionsResponse'
          '400':
            description: invalid list query
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2betaListSessionsRequest'
        tags:
          - SessionService
    /v2beta/sessions/{sessionId}:
      get:
        summary: Get a session
        description: Get a session and all its information like the time of the user or password verification
        operationId: SessionService_GetSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2betaGetSessionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: sessionId
            in: path
            required: true
            type: string
          - name: sessionToken
            in: query
            required: false
            type: string
        tags:
          - SessionService
      delete:
        summary: Terminate an existing session
        description: Terminate your own session or if granted any other session.
        operationId: SessionService_DeleteSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2betaDeleteSessionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: sessionId
            description: '"id of the session to terminate"'
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2betaSessionServiceDeleteSessionBody'
        tags:
          - SessionService
      patch:
        summary: Update an existing session
        description: Update an existing session with new information.
        operationId: SessionService_SetSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2betaSetSessionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: sessionId
            description: '"id of the session to update"'
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2betaSessionServiceSetSessionBody'
        tags:
          - SessionService
    /v2beta/sessions:
      post:
        summary: Create a new session
        description: Create a new session. A token will be returned, which is required for further updates of the session.
        operationId: SessionService_CreateSession
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/sessionv2betaCreateSessionResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/sessionv2betaCreateSessionRequest'
        tags:
          - SessionService
    /v2/settings:
      get:
        summary: Get basic information over the instance
        description: Return the basic information of the instance for the requested context
        operationId: SettingsService_GetGeneralSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2GetGeneralSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - SettingsService
    /v2/settings/login:
      get:
        summary: Get the login settings
        description: Return the settings for the requested context
        operationId: SettingsService_GetLoginSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2GetLoginSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2/settings/login/idps:
      get:
        summary: Get the current active identity providers
        description: Return the current active identity providers for the requested context
        operationId: SettingsService_GetActiveIdentityProviders
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2GetActiveIdentityProvidersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
          - name: creationAllowed
            in: query
            required: false
            type: boolean
          - name: linkingAllowed
            in: query
            required: false
            type: boolean
          - name: autoCreation
            in: query
            required: false
            type: boolean
          - name: autoLinking
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2/settings/password/complexity:
      get:
        summary: Get the password complexity settings
        description: Return the password complexity settings for the requested context
        operationId: SettingsService_GetPasswordComplexitySettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2GetPasswordComplexitySettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2/settings/password/expiry:
      get:
        summary: Get the password expiry settings
        description: Return the password expiry settings for the requested context
        operationId: SettingsService_GetPasswordExpirySettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2GetPasswordExpirySettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2/settings/branding:
      get:
        summary: Get the current active branding settings
        description: Return the current active branding settings for the requested context
        operationId: SettingsService_GetBrandingSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2GetBrandingSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2/settings/domain:
      get:
        summary: Get the domain settings
        description: Return the domain settings for the requested context
        operationId: SettingsService_GetDomainSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2GetDomainSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2/settings/legal_support:
      get:
        summary: Get the legal and support settings
        description: Return the legal settings for the requested context
        operationId: SettingsService_GetLegalAndSupportSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2GetLegalAndSupportSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2/settings/lockout:
      get:
        summary: Get the lockout settings
        description: Return the lockout settings for the requested context, which define when a user will be locked
        operationId: SettingsService_GetLockoutSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2GetLockoutSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2/settings/security:
      get:
        summary: Get Security Settings
        description: Returns the security settings of the ZITADEL instance.
        operationId: SettingsService_GetSecuritySettings
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/settingsv2GetSecuritySettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - Settings
    /v2/policies/security:
      put:
        summary: Set Security Settings
        description: Set the security settings of the ZITADEL instance.
        operationId: SettingsService_SetSecuritySettings
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/settingsv2SetSecuritySettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/settingsv2SetSecuritySettingsRequest'
        tags:
          - Settings
    /v2beta/settings:
      get:
        summary: Get basic information over the instance
        description: Return the basic information of the instance for the requested context
        operationId: SettingsService_GetGeneralSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2betaGetGeneralSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - SettingsService
    /v2beta/settings/login:
      get:
        summary: Get the login settings
        description: Return the settings for the requested context
        operationId: SettingsService_GetLoginSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2betaGetLoginSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2beta/settings/login/idps:
      get:
        summary: Get the current active identity providers
        description: Return the current active identity providers for the requested context
        operationId: SettingsService_GetActiveIdentityProviders
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2betaGetActiveIdentityProvidersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2beta/settings/password/complexity:
      get:
        summary: Get the password complexity settings
        description: Return the password complexity settings for the requested context
        operationId: SettingsService_GetPasswordComplexitySettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2betaGetPasswordComplexitySettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2beta/settings/password/expiry:
      get:
        summary: Get the password expiry settings
        description: Return the password expiry settings for the requested context
        operationId: SettingsService_GetPasswordExpirySettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2betaGetPasswordExpirySettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2beta/settings/branding:
      get:
        summary: Get the current active branding settings
        description: Return the current active branding settings for the requested context
        operationId: SettingsService_GetBrandingSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2betaGetBrandingSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2beta/settings/domain:
      get:
        summary: Get the domain settings
        description: Return the domain settings for the requested context
        operationId: SettingsService_GetDomainSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2betaGetDomainSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2beta/settings/legal_support:
      get:
        summary: Get the legal and support settings
        description: Return the legal settings for the requested context
        operationId: SettingsService_GetLegalAndSupportSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2betaGetLegalAndSupportSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2beta/settings/lockout:
      get:
        summary: Get the lockout settings
        description: Return the lockout settings for the requested context, which define when a user will be locked
        operationId: SettingsService_GetLockoutSettings
        responses:
          '200':
            description: OK
            schema:
              $ref: '#/definitions/settingsv2betaGetLockoutSettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: ctx.orgId
            in: query
            required: false
            type: string
          - name: ctx.instance
            in: query
            required: false
            type: boolean
        tags:
          - SettingsService
    /v2beta/settings/security:
      get:
        summary: Get Security Settings
        description: Returns the security settings of the ZITADEL instance.
        operationId: SettingsService_GetSecuritySettings
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/settingsv2betaGetSecuritySettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        tags:
          - SettingsService
    /v2beta/policies/security:
      put:
        summary: Set Security Settings
        description: Set the security settings of the ZITADEL instance.
        operationId: SettingsService_SetSecuritySettings
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/settingsv2betaSetSecuritySettingsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/settingsv2betaSetSecuritySettingsRequest'
        tags:
          - SettingsService
    /instances/_search:
      post:
        summary: Returns a list of ZITADEL instances
        operationId: SystemService_ListInstances
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListInstancesResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            description: Search query for lists
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1ListInstancesRequest'
        tags:
          - SystemService
    /instances/{instanceId}:
      get:
        summary: Returns the detail of an instance
        operationId: SystemService_GetInstance
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1GetInstanceResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
        tags:
          - SystemService
      delete:
        summary: |-
          Removes an instance
          This might take some time
        operationId: SystemService_RemoveInstance
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveInstanceResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
        tags:
          - SystemService
      put:
        summary: Updates name of an existing instance
        operationId: SystemService_UpdateInstance
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1UpdateInstanceResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SystemServiceUpdateInstanceBody'
        tags:
          - SystemService
    /instances:
      post:
        summary: |-
          Deprecated: Use CreateInstance instead
          Creates a new instance with all needed setup data
          This might take some time
        operationId: SystemService_AddInstance
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddInstanceResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1AddInstanceRequest'
        tags:
          - SystemService
    /instances/_create:
      post:
        summary: |-
          Creates a new instance with all needed setup data
          This might take some time
        operationId: SystemService_CreateInstance
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1CreateInstanceResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1CreateInstanceRequest'
        tags:
          - SystemService
    /instances/{instanceId}/members/_search:
      post:
        summary: |-
          Returns all instance members matching the request
          all queries need to match (ANDed)
          Deprecated: Use the Admin APIs ListIAMMembers instead
        operationId: SystemService_ListIAMMembers
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/zitadelsystemv1ListIAMMembersResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1SystemServiceListIAMMembersBody'
        tags:
          - SystemService
    /domains/{domain}/_exists:
      post:
        summary: Checks if a domain exists
        operationId: SystemService_ExistsDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ExistsDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: domain
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SystemServiceExistsDomainBody'
        tags:
          - SystemService
    /instances/{instanceId}/domains/_search:
      post:
        summary: |-
          Returns the custom domains of an instance
          Checks if a domain exists
          Deprecated: Use the Admin APIs ListInstanceDomains on the admin API instead
        operationId: SystemService_ListDomains
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1ListDomainsResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            description: list limitations and ordering
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SystemServiceListDomainsBody'
        tags:
          - SystemService
    /instances/{instanceId}/domains:
      post:
        summary: Adds a domain to an instance
        operationId: SystemService_AddDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SystemServiceAddDomainBody'
        tags:
          - SystemService
    /instances/{instanceId}/domains/{domain}:
      delete:
        summary: Removes the domain of an instance
        operationId: SystemService_RemoveDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: domain
            in: path
            required: true
            type: string
        tags:
          - SystemService
    /instances/{instanceId}/domains/_set_primary:
      post:
        summary: Sets the primary domain of an instance
        operationId: SystemService_SetPrimaryDomain
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetPrimaryDomainResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SystemServiceSetPrimaryDomainBody'
        tags:
          - SystemService
    /views/{database}/{viewName}:
      post:
        summary: |-
          Truncates the delta of the change stream
          be carefull with this function because ZITADEL has to
          recompute the deltas after they got cleared.
          Search requests will return wrong results until all deltas are recomputed
        operationId: SystemService_ClearView
        responses:
          '200':
            description: View cleared
            schema:
              $ref: '#/definitions/v1ClearViewResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: database
            in: path
            required: true
            type: string
          - name: viewName
            in: path
            required: true
            type: string
        tags:
          - views
    /failedevents/{database_1}/{viewName}/{failedSequence}:
      delete:
        summary: |-
          Deletes the event from failed events view.
          the event is not removed from the change stream
          This call is usefull if the system was able to process the event later.
          e.g. if the second try of sending an email was successful. the first try produced a
          failed event. You can find out if it worked on the `failure_count`
        operationId: SystemService_RemoveFailedEvent
        responses:
          '200':
            description: Events removed from the list
            schema:
              $ref: '#/definitions/zitadelsystemv1RemoveFailedEventResponse'
          '400':
            description: failed event not found
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: database_1
            in: path
            required: true
            type: string
          - name: viewName
            in: path
            required: true
            type: string
          - name: failedSequence
            in: path
            required: true
            type: string
            format: uint64
          - name: instanceId
            in: query
            required: false
            type: string
        tags:
          - failed events
    /instances/{instanceId}/quotas:
      post:
        summary: |-
          Creates a new quota
          Returns an error if the quota already exists for the specified unit
          Deprecated: use SetQuota instead
        operationId: SystemService_AddQuota
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1AddQuotaResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SystemServiceAddQuotaBody'
        tags:
          - Usage Control
          - Quotas
      put:
        summary: |-
          Sets quota configuration properties
          Creates a new quota if it doesn't exist for the specified unit
        operationId: SystemService_SetQuota
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetQuotaResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SystemServiceSetQuotaBody'
        tags:
          - Usage Control
          - Quotas
    /instances/{instanceId}/quotas/{unit}:
      delete:
        summary: Removes a quota
        operationId: SystemService_RemoveQuota
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1RemoveQuotaResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: unit
            in: path
            required: true
            type: string
            enum:
              - UNIT_UNIMPLEMENTED
              - UNIT_REQUESTS_ALL_AUTHENTICATED
              - UNIT_ACTIONS_ALL_RUN_SECONDS
        tags:
          - Usage Control
          - Quotas
    /instances/{instanceId}/features/{featureId}:
      put:
        summary: Set a feature flag on an instance
        operationId: SystemService_SetInstanceFeature
        responses:
          '200':
            description: A successful response.
            schema:
              $ref: '#/definitions/v1SetInstanceFeatureResponse'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: featureId
            in: path
            required: true
            type: string
            enum:
              - INSTANCE_FEATURE_UNSPECIFIED
              - INSTANCE_FEATURE_LOGIN_DEFAULT_ORG
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SystemServiceSetInstanceFeatureBody'
        tags:
          - SystemService
    /instances/{instanceId}/limits:
      delete:
        summary: Resets instance level limits
        operationId: SystemService_ResetLimits
        responses:
          '200':
            description: Limits are reset to the system defaults
            schema:
              $ref: '#/definitions/v1ResetLimitsResponse'
          '404':
            description: Limits are already set to the system defaults
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
        tags:
          - Usage Control
          - Limits
      put:
        summary: Sets instance level limits
        operationId: SystemService_SetLimits
        responses:
          '200':
            description: Instance limits set
            schema:
              $ref: '#/definitions/v1SetLimitsResponse'
          '400':
            description: At least one limit must be specified
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: instanceId
            in: path
            required: true
            type: string
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/SystemServiceSetLimitsBody'
        tags:
          - Usage Control
          - Limits
    /instances/limits/_bulk:
      put:
        summary: Sets many instance level limits
        operationId: SystemService_BulkSetLimits
        responses:
          '200':
            description: Instance limits set
            schema:
              $ref: '#/definitions/v1BulkSetLimitsResponse'
          '400':
            description: At least one limit must be specified for each instance
            schema:
              $ref: '#/definitions/rpcStatus'
          default:
            description: An unexpected error response.
            schema:
              $ref: '#/definitions/rpcStatus'
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/v1BulkSetLimitsRequest'
        tags:
          - Usage Control
          - Limits
components: {}
